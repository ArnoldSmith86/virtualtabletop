{
  "8fr3": {
    "type": "label",
    "text": "Timer: Basics",
    "css": "font-size: 60px",
    "height": 100,
    "width": 1000,
    "x": 287,
    "y": -4,
    "z": 66,
    "id": "8fr3"
  },
  "_meta": {
    "version": 16,
    "info": {
      "name": "Timer",
      "image": "/assets/509206781_3477",
      "rules": "",
      "bgg": "",
      "year": "2021",
      "mode": "Tutorial",
      "time": "",
      "attribution": "<div>The buzzer sound is in the Public Domain under CC0 and is available from Wikimedia Commons at&nbsp;https://commons.wikimedia.org/wiki/File:Buzzer.wav.</div><div><br></div>The clock face, by temas, is in the Public Domain under CC0, and is available at https://openclipart.org/detail/134335/diy-clock-face-by-temas-134335.\n\nThe stopwatch face is the based on the clock face, but the numbers were modified by LawDawg96.  It is released to the Public Domain under CC0.\n\nThe hour and minute hands are in the Public Domain under CC0, and are available at https://freesvg.org/minute-hand-mitchell-joh.",
      "showName": false,
      "lastUpdate": 1732855454992,
      "skill": "",
      "description": "",
      "similarImage": "",
      "similarName": "",
      "similarAwards": "",
      "ruleText": "",
      "helpText": "",
      "similarDesigner": "",
      "variantImage": "",
      "variant": "Basics",
      "language": "en-US",
      "players": "1"
    }
  },
  "ekxj": {
    "text": "This tutorial demonstrates the basic operations of the timer widget. Remember, one important limitation of the timer is that it is controlled by the player that started the timer. If that person leaves the room or the player's internet connection is disrupted while the timer is running, the timer will stop.",
    "css": "font-size: 20px",
    "height": 50,
    "width": 900,
    "x": 359,
    "y": 103,
    "z": 92,
    "id": "ekxj"
  },
  "9ezq": {
    "type": "timer",
    "id": "9ezq",
    "x": 100,
    "y": 243,
    "z": 3
  },
  "9ezqP": {
    "parent": "9ezq",
    "id": "9ezqP",
    "x": 120,
    "y": -3,
    "width": 36,
    "height": 36,
    "type": "button",
    "movableInEdit": false,
    "clickRoutine": [
      {
        "func": "TIMER",
        "timer": "${PROPERTY parent}"
      }
    ],
    "image": "/i/button-icons/White-Play_Pause.svg",
    "css": "background-size: 75% 75%"
  },
  "9ezqR": {
    "parent": "9ezq",
    "id": "9ezqR",
    "x": 80,
    "y": -3,
    "width": 36,
    "height": 36,
    "type": "button",
    "movableInEdit": false,
    "clickRoutine": [
      {
        "func": "TIMER",
        "timer": "${PROPERTY parent}",
        "mode": "reset"
      }
    ],
    "image": "/i/button-icons/White-Reset.svg",
    "css": "background-size: 80% 80%"
  },
  "u4ka": {
    "text": "This is the basic timer widget, which can be added from the Add Widget button on the left side of the screen. The timer will stop and start by either pressing on the numbers of the timer itself or on the play/pause symbol. The timer defaults to counting in one second increments (shown as 1000 milliseconds in the JSON) and counting up. You can edit some of the settings using the Edit Mode button to the left and additional changes can be made using the JSON editor. You can also interact with the controls or the JSON using any type of routine or CALL function.",
    "css": "font-size: 20px",
    "width": 1200,
    "x": 275,
    "y": 237,
    "z": 72,
    "id": "u4ka"
  },
  "v2hc": {
    "type": "timer",
    "id": "v2hc",
    "x": 100,
    "y": 502,
    "z": 13,
    "countdown": true,
    "start": 5000,
    "alertSound": "https://upload.wikimedia.org/wikipedia/commons/5/55/Buzzer.wav",
    "end": 0,
    "milliseconds": 5000
  },
  "v2hcP": {
    "parent": "v2hc",
    "id": "v2hcP",
    "x": 120,
    "y": -3,
    "width": 36,
    "height": 36,
    "type": "button",
    "movableInEdit": false,
    "clickRoutine": [
      {
        "func": "TIMER",
        "timer": "${PROPERTY parent}"
      }
    ],
    "image": "/i/button-icons/White-Play_Pause.svg",
    "css": "background-size: 75% 75%",
    "z": 89
  },
  "v2hcR": {
    "parent": "v2hc",
    "id": "v2hcR",
    "x": 80,
    "y": -3,
    "width": 36,
    "height": 36,
    "type": "button",
    "movableInEdit": false,
    "clickRoutine": [
      {
        "func": "TIMER",
        "timer": "${PROPERTY parent}",
        "mode": "reset"
      }
    ],
    "image": "/i/button-icons/White-Reset.svg",
    "css": "background-size: 80% 80%",
    "z": 4
  },
  "dlo0": {
    "text": "This timer is in the countdown mode, starting at 5 seconds. When it reaches 0, just like in the previous timer, the numbers will change to red, but a sound is also played because the 'alertSound' property is set.",
    "css": "font-size: 20px",
    "width": 1200,
    "x": 271,
    "y": 498,
    "id": "dlo0"
  },
  "oueu": {
    "type": "timer",
    "id": "oueu",
    "x": 100,
    "y": 620,
    "z": 12,
    "precision": 5000
  },
  "oueuP": {
    "parent": "oueu",
    "id": "oueuP",
    "x": 120,
    "y": -3,
    "width": 36,
    "height": 36,
    "type": "button",
    "movableInEdit": false,
    "clickRoutine": [
      {
        "func": "TIMER",
        "timer": "${PROPERTY parent}"
      }
    ],
    "image": "/i/button-icons/White-Play_Pause.svg",
    "css": "background-size: 75% 75%",
    "z": 92
  },
  "oueuR": {
    "parent": "oueu",
    "id": "oueuR",
    "x": 80,
    "y": -3,
    "width": 36,
    "height": 36,
    "type": "button",
    "movableInEdit": false,
    "clickRoutine": [
      {
        "func": "TIMER",
        "timer": "${PROPERTY parent}",
        "mode": "reset"
      }
    ],
    "image": "/i/button-icons/White-Reset.svg",
    "css": "background-size: 80% 80%",
    "z": 91
  },
  "xe6r": {
    "text": "This timer has its precision function set to 5000 milliseconds.  That means the timer will only update on the screen and in the JSON every 5 seconds.",
    "css": "font-size: 20px",
    "width": 1200,
    "x": 275,
    "y": 616,
    "z": 90,
    "id": "xe6r"
  },
  "xen9": {
    "type": "timer",
    "id": "xen9",
    "x": 100,
    "y": 734,
    "z": 11,
    "changeRoutine": [
      "var Red = randInt 0 255",
      "var Green = randInt 0 255",
      "var Blue = randInt 0 255",
      "var newCSS = 'background\\u003a rgb(' + ${Red}",
      "var newCSS = ${newCSS} + ','",
      "var newCSS = ${newCSS} + ${Green}",
      "var newCSS = ${newCSS} + ','",
      "var newCSS = ${newCSS} + ${Blue}",
      "var newCSS = ${newCSS} + ')'",
      {
        "func": "SELECT",
        "property": "id",
        "value": "myHolder"
      },
      {
        "func": "SET",
        "property": "css",
        "value": "${newCSS}"
      }
    ],
    "precision": 500
  },
  "xen9P": {
    "parent": "xen9",
    "id": "xen9P",
    "x": 120,
    "y": -3,
    "width": 36,
    "height": 36,
    "type": "button",
    "movableInEdit": false,
    "clickRoutine": [
      {
        "func": "TIMER",
        "timer": "${PROPERTY parent}"
      }
    ],
    "image": "/i/button-icons/White-Play_Pause.svg",
    "css": "background-size: 75% 75%",
    "z": 94
  },
  "xen9R": {
    "parent": "xen9",
    "id": "xen9R",
    "x": 80,
    "y": -3,
    "width": 36,
    "height": 36,
    "type": "button",
    "movableInEdit": false,
    "clickRoutine": [
      {
        "func": "TIMER",
        "timer": "${PROPERTY parent}",
        "mode": "reset"
      }
    ],
    "image": "/i/button-icons/White-Reset.svg",
    "css": "background-size: 80% 80%",
    "z": 93
  },
  "tli4": {
    "text": "This timer has its precision property set to 500 milliseconds (the lowest possible setting is 100; lower values in the JSON are possible, but will round up to 100 for all calculations).  That means the JSON will update every 1/2 second (look using the JSON editor to confirm), but the on screen number display will only update every second. This feature can be used with changeRoutines to automate changes very rapidly. For example, the background color of the small holder below the timer is changing to a random color every 500 milliseconds.",
    "css": "font-size: 20px",
    "width": 1200,
    "x": 275,
    "y": 732,
    "z": 95,
    "id": "tli4"
  },
  "myHolder": {
    "type": "holder",
    "id": "myHolder",
    "x": 193,
    "y": 784,
    "width": 40,
    "height": 40,
    "z": 96,
    "css": "background: rgb(255,255,255)"
  },
  "v3hc": {
    "type": "timer",
    "id": "v3hc",
    "x": 100,
    "y": 402,
    "z": 13,
    "countdown": true,
    "start": 10000,
    "end": 5000,
    "milliseconds": 10000
  },
  "v3hcP": {
    "parent": "v3hc",
    "id": "v3hcP",
    "x": 120,
    "y": -3,
    "width": 36,
    "height": 36,
    "type": "button",
    "movableInEdit": false,
    "clickRoutine": [
      {
        "func": "TIMER",
        "timer": "${PROPERTY parent}"
      }
    ],
    "image": "/i/button-icons/White-Play_Pause.svg",
    "css": "background-size: 75% 75%",
    "z": 89
  },
  "v3hcR": {
    "parent": "v3hc",
    "id": "v3hcR",
    "x": 80,
    "y": -3,
    "width": 36,
    "height": 36,
    "type": "button",
    "movableInEdit": false,
    "clickRoutine": [
      {
        "func": "TIMER",
        "timer": "${PROPERTY parent}",
        "mode": "reset"
      }
    ],
    "image": "/i/button-icons/White-Reset.svg",
    "css": "background-size: 80% 80%",
    "z": 4
  },
  "dlo1": {
    "text": "This timer is in the countdown mode, starting at 10 seconds. When it reaches the designated time of 5 seconds, the numbers will change to red to indicate the countdown is over, but the timer will still continue to count down. The 'alert' property will also be set to true. If the 'end' property was not set, then the timer would continue counting down, but would not turn red. ",
    "css": "font-size: 20px",
    "width": 1200,
    "x": 271,
    "y": 398,
    "id": "dlo1"
  }
}