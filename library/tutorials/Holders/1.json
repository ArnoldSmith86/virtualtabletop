{
  "_meta": {
    "version": 15,
    "info": {
      "name": "Holders",
      "image": "/assets/419389733_5272",
      "rules": "",
      "bgg": "",
      "year": "2020",
      "mode": "Tutorial",
      "time": "0",
      "attribution": "The coin in the Stackable Tokens variant is a modification of an icon by Delapoitue, available under CC BY 3.0 from&nbsp;https://game-icons.net/1x1/delapouite/token.html.",
      "showName": false,
      "lastUpdate": 1705717755787,
      "skill": "",
      "description": "",
      "similarImage": "",
      "similarName": "",
      "similarAwards": "",
      "ruleText": "",
      "helpText": "",
      "similarDesigner": "",
      "variantImage": "",
      "variant": "Stackable Tokens",
      "language": "en-US",
      "players": "1"
    }
  },
  "overview": {
    "id": "overview",
    "x": 108,
    "y": 80,
    "width": 1400,
    "layer": -3,
    "z": 129,
    "movable": false,
    "movableInEdit": false,
    "css": "font-size: 25px; ",
    "text": "When holders are set to be movable and to accept other holders as a 'dropTarget' then holders can have characteristics of cards (because they stack) and holders. This room has several different examples of how this can be implemented. Drag widgets around in this room and stack them to see how this works. Unlike with piles, you can select and drag from the middle of the stack and the rest of the stack moves with it.",
    "height": 90
  },
  "title": {
    "id": "title",
    "width": 1600,
    "height": 70,
    "z": 70,
    "css": "font-size: 60px; text-align:center",
    "text": "Holders: Stackable Tokens",
    "movable": false,
    "movableInEdit": false
  },
  "text1": {
    "id": "text1",
    "x": 42,
    "y": 434,
    "width": 300,
    "z": 185,
    "movable": false,
    "movableInEdit": false,
    "css": "font-size: 22px; ",
    "text": "There is a master holder widget (at the bottom of the left stack). The other widgets use `inheritFrom` to copy the master's properties. It is important that the parent property be excluded to prevent problems.\n\nHolders do not apply a 'text' property, so CSS is used to add text to the holder. Routines (enter, leave, and textChange) are used to update the count on each card.\n\nYou can remove or adjust position of the numbers and you can adjust the offsets to change how the stack forms."
  },
  "text2": {
    "id": "text2",
    "x": 398,
    "y": 514,
    "width": 300,
    "z": 185,
    "movable": false,
    "movableInEdit": false,
    "css": "font-size: 22px; ",
    "text": "Since holders do not apply the 'image' property, this stack uses CSS and a URL-encoded SVG to draw a rectangle. The rectangle's color is adjustable and it is shifted to the bottom of the holder so that vertical stacking works.\n\nThe 'dropTarget' allows blue and red to stack together, but that can be changed so that only the same colors stack with each other.\n\nAgain, the numbers are optional and position is adjustable."
  },
  "coin1": {
    "type": "holder",
    "id": "coin1",
    "y": 517,
    "height": 80,
    "z": 1274,
    "classes": "transparent",
    "css": {
      "default": {
        "background-image": "url('/assets/123241915_760')",
        "background-position-y": "20%",
        "display": "flex",
        "align-items": "center",
        "justify-content": "center",
        "font-size": "25px"
      },
      "::before": {
        "content": "\"${PROPERTY text}\"",
        "color": "black",
        "transform": "translateY(-3px) skewX(20deg)"
      }
    },
    "dropLimit": 1,
    "dropOffsetX": -1,
    "dropOffsetY": -15,
    "dropTarget": {
      "token": "coin"
    },
    "text": 1,
    "token": "coin",
    "enterRoutine": [
      "var newCount = ${PROPERTY text} + 1",
      {
        "func": "SET",
        "collection": "child",
        "property": "text",
        "value": "${newCount}"
      }
    ],
    "leaveRoutine": [
      {
        "func": "SET",
        "collection": "child",
        "property": "text",
        "value": 1
      }
    ],
    "textChangeRoutine": [
      {
        "func": "SELECT",
        "property": "parent",
        "value": "${PROPERTY id}"
      },
      {
        "func": "GET",
        "property": "id",
        "variable": "childID"
      },
      "var childCount = ${PROPERTY text} + 1",
      {
        "func": "SET",
        "collection": [
          "${childID}"
        ],
        "property": "text",
        "value": "${childCount}"
      }
    ],
    "width": 100,
    "movable": true,
    "x": 1133
  },
  "circle1": {
    "type": "holder",
    "id": "circle1",
    "x": 795,
    "y": 527,
    "z": 1229,
    "classes": "transparent",
    "css": {
      "default": {
        "background-image": "url(\"data:image/svg+xml,%3Csvg version='1.2' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' width='100' height='100'%3E%3Cpath fill='${PROPERTY color}' stroke='${PROPERTY outline}' d='m50 99c-27.1 0-49-21.9-49-49 0-27.1 21.9-49 49-49 27.1 0 49 21.9 49 49 0 27.1-21.9 49-49 49z'/%3E%3C/svg%3E\")",
        "background-size": "contain",
        "background-repeat": "no-repeat",
        "display": "flex",
        "align-items": "center",
        "justify-content": "center",
        "font-size": "30px"
      },
      "::before": {
        "content": "\"${PROPERTY text}\"",
        "color": "black"
      }
    },
    "dropLimit": 1,
    "dropOffsetX": -1,
    "dropOffsetY": -25,
    "dropTarget": {
      "token": "circle",
      "color": "cyan"
    },
    "color": "cyan",
    "outline": "black",
    "text": 1,
    "token": "circle",
    "enterRoutine": [
      "var newCount = ${PROPERTY text} + 1",
      {
        "func": "SET",
        "collection": "child",
        "property": "text",
        "value": "${newCount}"
      }
    ],
    "leaveRoutine": [
      {
        "func": "SET",
        "collection": "child",
        "property": "text",
        "value": 1
      }
    ],
    "textChangeRoutine": [
      {
        "func": "SELECT",
        "property": "parent",
        "value": "${PROPERTY id}"
      },
      {
        "func": "GET",
        "property": "id",
        "variable": "childID"
      },
      "var childCount = ${PROPERTY text} + 1",
      {
        "func": "SET",
        "collection": [
          "${childID}"
        ],
        "property": "text",
        "value": "${childCount}"
      }
    ],
    "width": 100,
    "height": 100,
    "movable": true
  },
  "square1": {
    "type": "holder",
    "id": "square1",
    "x": 58,
    "y": 268,
    "width": 50,
    "height": 50,
    "z": 1107,
    "movable": true,
    "css": {
      "default": {
        "background": "mediumseagreen",
        "border": "1px solid black"
      },
      "::before": {
        "content": "\"${PROPERTY text}\"",
        "color": "black"
      }
    },
    "dropOffsetX": 10,
    "dropOffsetY": 10,
    "dropTarget": {
      "token": "square"
    },
    "text": 1,
    "token": "square",
    "enterRoutine": [
      "var newCount = ${PROPERTY text} + 1",
      {
        "func": "SET",
        "collection": "child",
        "property": "text",
        "value": "${newCount}"
      }
    ],
    "leaveRoutine": [
      {
        "func": "SET",
        "collection": "child",
        "property": "text",
        "value": 1
      }
    ],
    "textChangeRoutine": [
      {
        "func": "SELECT",
        "property": "parent",
        "value": "${PROPERTY id}"
      },
      {
        "func": "GET",
        "property": "id",
        "variable": "childID"
      },
      "var childCount = ${PROPERTY text} + 1",
      {
        "func": "SET",
        "collection": [
          "${childID}"
        ],
        "property": "text",
        "value": "${childCount}"
      }
    ]
  },
  "rectangle1": {
    "type": "holder",
    "id": "rectangle1",
    "x": 386,
    "y": 462,
    "width": 100,
    "height": 40,
    "borderRadius": 0,
    "z": 1175,
    "movable": true,
    "classes": "transparent",
    "css": {
      "default": {
        "background-image": "url(\"data:image/svg+xml,%3Csvg version='1.2' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 20' width='100' height='20'%3E%3Cpath fill='${PROPERTY color}' d='m0 0h100v20h-100z'/%3E%3C/svg%3E\")",
        "background-repeat": "no-repeat",
        "background-position-y": "100%",
        "display": "flex",
        "align-items": "teop",
        "justify-content": "center",
        "font-size": "20px"
      },
      "::before": {
        "content": "\"${PROPERTY text}\"",
        "color": "black",
        "transform": "translateY(-10px)"
      }
    },
    "dropLimit": 1,
    "dropOffsetX": -1,
    "dropOffsetY": -25,
    "dropTarget": {
      "token": "rectangle"
    },
    "color": "red",
    "text": 1,
    "token": "rectangle",
    "enterRoutine": [
      "var newCount = ${PROPERTY text} + 1",
      {
        "func": "SET",
        "collection": "child",
        "property": "text",
        "value": "${newCount}"
      }
    ],
    "leaveRoutine": [
      {
        "func": "SET",
        "collection": "child",
        "property": "text",
        "value": 1
      }
    ],
    "textChangeRoutine": [
      {
        "func": "SELECT",
        "property": "parent",
        "value": "${PROPERTY id}"
      },
      {
        "func": "GET",
        "property": "id",
        "variable": "childID"
      },
      "var childCount = ${PROPERTY text} + 1",
      {
        "func": "SET",
        "collection": [
          "${childID}"
        ],
        "property": "text",
        "value": "${childCount}"
      }
    ]
  },
  "square2": {
    "inheritFrom": {
      "square1": "!parent"
    },
    "type": "holder",
    "id": "square2",
    "x": 10,
    "y": 10,
    "z": 1101,
    "text": 2,
    "parent": "square1"
  },
  "square3": {
    "inheritFrom": {
      "square1": "!parent"
    },
    "type": "holder",
    "id": "square3",
    "x": 10,
    "y": 10,
    "z": 1103,
    "text": 3,
    "parent": "square2"
  },
  "square4": {
    "inheritFrom": {
      "square1": "!parent"
    },
    "type": "holder",
    "id": "square4",
    "x": 10,
    "y": 10,
    "z": 1070,
    "text": 4,
    "parent": "square3"
  },
  "square5": {
    "inheritFrom": {
      "square1": "!parent"
    },
    "type": "holder",
    "id": "square5",
    "x": 10,
    "y": 10,
    "z": 1052,
    "parent": "square6",
    "text": 3
  },
  "square6": {
    "inheritFrom": {
      "square1": "!parent"
    },
    "type": "holder",
    "id": "square6",
    "x": 10,
    "y": 10,
    "z": 1050,
    "parent": "square7",
    "text": 2
  },
  "square7": {
    "inheritFrom": {
      "square1": "!parent"
    },
    "type": "holder",
    "id": "square7",
    "x": 148,
    "y": 261,
    "z": 1110,
    "text": 1
  },
  "square8": {
    "inheritFrom": {
      "square1": "!parent"
    },
    "type": "holder",
    "id": "square8",
    "x": 10,
    "y": 10,
    "z": 1108,
    "text": 6,
    "parent": "square9"
  },
  "square9": {
    "inheritFrom": {
      "square1": "!parent"
    },
    "type": "holder",
    "id": "square9",
    "x": 10,
    "y": 10,
    "z": 1072,
    "text": 5,
    "parent": "square4"
  },
  "square10": {
    "inheritFrom": {
      "square1": "!parent"
    },
    "type": "holder",
    "id": "square10",
    "x": 10,
    "y": 10,
    "z": 1074,
    "parent": "square5",
    "text": 4
  },
  "rectangle2": {
    "inheritFrom": {
      "rectangle1": "!parent"
    },
    "type": "holder",
    "id": "rectangle2",
    "x": -1,
    "y": -25,
    "z": 1181,
    "text": 5,
    "color": "blue",
    "parent": "rectangle3"
  },
  "rectangle3": {
    "inheritFrom": {
      "rectangle1": "!parent"
    },
    "type": "holder",
    "id": "rectangle3",
    "x": -1,
    "y": -25,
    "z": 1147,
    "parent": "rectangle4",
    "text": 4,
    "color": "blue"
  },
  "rectangle4": {
    "inheritFrom": {
      "rectangle1": "!parent"
    },
    "type": "holder",
    "id": "rectangle4",
    "x": -1,
    "y": -25,
    "z": 1165,
    "text": 3,
    "color": "blue",
    "parent": "rectangle12"
  },
  "rectangle5": {
    "inheritFrom": {
      "rectangle1": "!parent"
    },
    "type": "holder",
    "id": "rectangle5",
    "x": -1,
    "y": -25,
    "z": 1167,
    "text": 6,
    "color": "blue",
    "parent": "rectangle2"
  },
  "rectangle6": {
    "inheritFrom": {
      "rectangle1": "!parent"
    },
    "type": "holder",
    "id": "rectangle6",
    "x": -1,
    "y": -25,
    "z": 1170,
    "text": 7,
    "color": "blue",
    "parent": "rectangle5"
  },
  "rectangle7": {
    "inheritFrom": {
      "rectangle1": "!parent"
    },
    "type": "holder",
    "id": "rectangle7",
    "x": -1,
    "y": -25,
    "z": 1172,
    "text": 8,
    "color": "blue",
    "parent": "rectangle6"
  },
  "rectangle8": {
    "inheritFrom": {
      "rectangle1": "!parent"
    },
    "type": "holder",
    "id": "rectangle8",
    "x": -1,
    "y": -25,
    "z": 1137,
    "parent": "rectangle9",
    "text": 4,
    "color": "blue"
  },
  "rectangle9": {
    "inheritFrom": {
      "rectangle1": "!parent"
    },
    "type": "holder",
    "id": "rectangle9",
    "x": -1,
    "y": -25,
    "z": 1135,
    "parent": "rectangle10",
    "text": 3,
    "color": "blue"
  },
  "rectangle10": {
    "inheritFrom": {
      "rectangle1": "!parent"
    },
    "type": "holder",
    "id": "rectangle10",
    "x": -1,
    "y": -25,
    "z": 1133,
    "parent": "rectangle11",
    "text": 2,
    "color": "blue"
  },
  "rectangle11": {
    "inheritFrom": {
      "rectangle1": "!parent"
    },
    "type": "holder",
    "id": "rectangle11",
    "x": 496,
    "y": 293,
    "z": 1177,
    "color": "blue"
  },
  "rectangle12": {
    "inheritFrom": {
      "rectangle1": "!parent"
    },
    "type": "holder",
    "id": "rectangle12",
    "x": -1,
    "y": -25,
    "z": 1130,
    "parent": "rectangle13",
    "text": 2
  },
  "rectangle13": {
    "inheritFrom": {
      "rectangle1": "!parent"
    },
    "type": "holder",
    "id": "rectangle13",
    "x": 606,
    "y": 464,
    "z": 1178,
    "text": 1
  },
  "rectangle14": {
    "inheritFrom": {
      "rectangle1": "!parent"
    },
    "type": "holder",
    "id": "rectangle14",
    "x": -1,
    "y": -25,
    "z": 1125,
    "parent": "rectangle15",
    "text": 3
  },
  "rectangle15": {
    "inheritFrom": {
      "rectangle1": "!parent"
    },
    "type": "holder",
    "id": "rectangle15",
    "x": -1,
    "y": -25,
    "z": 1122,
    "parent": "rectangle16",
    "text": 2
  },
  "rectangle16": {
    "inheritFrom": {
      "rectangle1": "!parent"
    },
    "type": "holder",
    "id": "rectangle16",
    "x": 494,
    "y": 463,
    "z": 1176,
    "text": 1
  },
  "rectangle17": {
    "inheritFrom": {
      "rectangle1": "!parent"
    },
    "type": "holder",
    "id": "rectangle17",
    "x": -1,
    "y": -25,
    "z": 1118,
    "parent": "rectangle18",
    "text": 5
  },
  "rectangle18": {
    "inheritFrom": {
      "rectangle1": "!parent"
    },
    "type": "holder",
    "id": "rectangle18",
    "x": -1,
    "y": -25,
    "z": 1189,
    "text": 4,
    "parent": "rectangle19"
  },
  "rectangle19": {
    "inheritFrom": {
      "rectangle1": "!parent"
    },
    "type": "holder",
    "id": "rectangle19",
    "x": -1,
    "y": -25,
    "z": 1114,
    "parent": "rectangle20",
    "text": 3
  },
  "rectangle20": {
    "inheritFrom": {
      "rectangle1": "!parent"
    },
    "type": "holder",
    "id": "rectangle20",
    "x": -1,
    "y": -25,
    "z": 1160,
    "text": 2,
    "parent": "rectangle1"
  },
  "circle2": {
    "inheritFrom": {
      "circle1": "!parent"
    },
    "type": "holder",
    "id": "circle2",
    "x": -1,
    "y": -25,
    "z": 1208,
    "parent": "circle3",
    "text": 3
  },
  "circle3": {
    "inheritFrom": {
      "circle1": "!parent"
    },
    "type": "holder",
    "id": "circle3",
    "x": -1,
    "y": -25,
    "z": 1204,
    "parent": "circle1",
    "text": 2
  },
  "circle4": {
    "inheritFrom": {
      "circle1": "!parent"
    },
    "type": "holder",
    "id": "circle4",
    "x": -1,
    "y": -25,
    "z": 1226,
    "text": 2,
    "parent": "circle5"
  },
  "circle5": {
    "inheritFrom": {
      "circle1": "!parent"
    },
    "type": "holder",
    "id": "circle5",
    "x": 797,
    "y": 658,
    "z": 1235,
    "text": 1
  },
  "circle6": {
    "inheritFrom": {
      "circle1": "!parent"
    },
    "type": "holder",
    "id": "circle6",
    "x": -1,
    "y": -25,
    "z": 1220,
    "color": "white",
    "dropTarget": {
      "token": "circle",
      "color": "white"
    },
    "parent": "circle10",
    "text": 2
  },
  "circle7": {
    "inheritFrom": {
      "circle1": "!parent"
    },
    "type": "holder",
    "id": "circle7",
    "x": -1,
    "y": -25,
    "z": 1214,
    "color": "white",
    "dropTarget": {
      "token": "circle",
      "color": "white"
    },
    "parent": "circle6",
    "text": 3
  },
  "circle8": {
    "inheritFrom": {
      "circle1": "!parent"
    },
    "type": "holder",
    "id": "circle8",
    "x": -1,
    "y": -25,
    "z": 1216,
    "color": "white",
    "dropTarget": {
      "token": "circle",
      "color": "white"
    },
    "parent": "circle7",
    "text": 4
  },
  "circle9": {
    "inheritFrom": {
      "circle1": "!parent"
    },
    "type": "holder",
    "id": "circle9",
    "x": 916,
    "y": 661,
    "z": 1238,
    "color": "white",
    "dropTarget": {
      "token": "circle",
      "color": "white"
    },
    "text": 1
  },
  "circle10": {
    "inheritFrom": {
      "circle1": "!parent"
    },
    "type": "holder",
    "id": "circle10",
    "x": 912,
    "y": 531,
    "z": 1237,
    "color": "white",
    "dropTarget": {
      "token": "circle",
      "color": "white"
    }
  },
  "text3": {
    "id": "text3",
    "x": 778,
    "y": 833,
    "width": 300,
    "z": 185,
    "movable": false,
    "movableInEdit": false,
    "css": "font-size: 22px; ",
    "text": "This is similar to the rectangles except that the numbers are displayed in a different location and the 'dropTarget' prevents mixing colors."
  },
  "text4": {
    "id": "text4",
    "x": 1178,
    "y": 615,
    "width": 300,
    "z": 185,
    "movable": false,
    "movableInEdit": false,
    "css": "font-size: 22px; ",
    "text": "The SVG is a little more complicated in this holder. So it is represented by a VTT asset and not a URL-encoded SVG. Doing it this way simplifies the JSON, but then it is not possible to adjust the fill or stroke colors since holders do not apply 'svgReplaces'.\n\nThis stack also uses slighly more complicated css to achieve the desired visual effect. "
  },
  "coin2": {
    "inheritFrom": {
      "coin1": "!parent"
    },
    "type": "holder",
    "id": "coin2",
    "x": -1,
    "y": -15,
    "z": 1256,
    "width": 100,
    "height": 80,
    "parent": "coin1",
    "text": 2
  },
  "coin3": {
    "inheritFrom": {
      "coin1": "!parent"
    },
    "type": "holder",
    "id": "coin3",
    "x": -1,
    "y": -15,
    "z": 1258,
    "width": 100,
    "height": 80,
    "parent": "coin2",
    "text": 3
  },
  "coin4": {
    "inheritFrom": {
      "coin1": "!parent"
    },
    "type": "holder",
    "id": "coin4",
    "x": -1,
    "y": -15,
    "z": 1260,
    "width": 100,
    "height": 80,
    "parent": "coin3",
    "text": 4
  },
  "coin5": {
    "inheritFrom": {
      "coin1": "!parent"
    },
    "type": "holder",
    "id": "coin5",
    "x": -1,
    "y": -15,
    "z": 1262,
    "width": 100,
    "height": 80,
    "parent": "coin4",
    "text": 5
  },
  "coin6": {
    "inheritFrom": {
      "coin1": "!parent"
    },
    "type": "holder",
    "id": "coin6",
    "x": -1,
    "y": -15,
    "z": 1264,
    "width": 100,
    "height": 80,
    "parent": "coin5",
    "text": 6
  },
  "coin7": {
    "inheritFrom": {
      "coin1": "!parent"
    },
    "type": "holder",
    "id": "coin7",
    "x": 1264,
    "y": 516,
    "z": 1284,
    "width": 100,
    "height": 80,
    "text": 1
  },
  "coin8": {
    "inheritFrom": {
      "coin1": "!parent"
    },
    "type": "holder",
    "id": "coin8",
    "x": -1,
    "y": -15,
    "z": 1282,
    "width": 100,
    "height": 80,
    "text": 2,
    "parent": "coin7"
  },
  "coin9": {
    "inheritFrom": {
      "coin1": "!parent"
    },
    "type": "holder",
    "id": "coin9",
    "x": -1,
    "y": -15,
    "z": 1280,
    "width": 100,
    "height": 80,
    "text": 3,
    "parent": "coin8"
  },
  "coin10": {
    "inheritFrom": {
      "coin1": "!parent"
    },
    "type": "holder",
    "id": "coin10",
    "x": 1384,
    "y": 519,
    "z": 1285,
    "width": 100,
    "height": 80,
    "text": 1
  }
}