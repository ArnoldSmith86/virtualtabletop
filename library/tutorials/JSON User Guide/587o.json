{
  "_meta": {
    "version": 2,
    "info": {
      "name": "JSON Editor User Guide",
      "image": "/assets/1479011481_9212",
      "rules": "",
      "bgg": "",
      "year": "2021",
      "mode": "Tutorial",
      "time": "0",
      "players": "1",
      "language": "US",
      "variant": "",
      "attribution": ""
    }
  },
  "lblPage": {
    "id": "lblPage",
    "y": 950,
    "width": 75,
    "height": 40,
    "z": 6,
    "movableInEdit": false,
    "css": "font-size:30px",
    "text": "Page",
    "layer": 5,
    "x": 750
  },
  "btnBack": {
    "type": "button",
    "id": "btnBack",
    "y": 1500,
    "width": 150,
    "height": 150,
    "z": 580,
    "movableInEdit": false,
    "color": "orange",
    "css": "border-color:transparent;background-color:transparent;border-radius:0",
    "image": "/assets/1502865726_277",
    "svgReplaces": {
      "currentColor": "color"
    },
    "layer": 5,
    "clickRoutine": [
      {
        "func": "SELECT",
        "property": "parent",
        "value": "hldOn"
      },
      {
        "func": "GET",
        "property": "hldPage",
        "variable": "oldPage"
      },
      {
        "func": "IF",
        "applyVariables": [
          {
            "parameter": "operand1",
            "variable": "oldPage"
          }
        ],
        "operand2": 1,
        "relation": ">",
        "thenRoutine": [
          {
            "func": "COMPUTE",
            "operation": "-",
            "applyVariables": [
              {
                "parameter": "operand1",
                "variable": "oldPage"
              }
            ],
            "operand2": 1,
            "variable": "newPage"
          },
          {
            "func": "SET",
            "property": "parent",
            "value": "hldOff"
          },
          {
            "func": "SELECT",
            "property": "hldPage",
            "applyVariables": [
              {
                "parameter": "value",
                "variable": "newPage"
              }
            ]
          },
          {
            "func": "SET",
            "property": "parent",
            "value": "hldOn"
          },
          {
            "func": "LABEL",
            "label": "lblPageNum",
            "mode": "dec",
            "value": 1
          },
          {
            "func": "GET",
            "property": "hldPageTopic",
            "variable": "topic"
          },
          {
            "func": "LABEL",
            "label": "lblTopic",
            "applyVariables": [
              {
                "parameter": "value",
                "variable": "topic"
              }
            ]
          },
          {
            "func": "SELECT",
            "property": "id",
            "value": "btnForward"
          },
          {
            "func": "SET",
            "property": "y",
            "value": 890
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "y",
            "value": 1500
          }
        ]
      }
    ]
  },
  "btnForward": {
    "type": "button",
    "id": "btnForward",
    "x": 1450,
    "y": 890,
    "width": 150,
    "height": 150,
    "z": 579,
    "movableInEdit": false,
    "color": "green",
    "css": "border-color:transparent;background-color:transparent;border-radius:0",
    "svgReplaces": {
      "currentColor": "color"
    },
    "layer": 5,
    "clickRoutine": [
      {
        "func": "SELECT",
        "property": "hldPage",
        "relation": "!=",
        "value": null
      },
      {
        "func": "GET",
        "property": "hldPage",
        "aggregation": "array",
        "variable": "hldArray"
      },
      {
        "func": "COMPUTE",
        "operation": "length",
        "applyVariables": [
          {
            "parameter": "operand1",
            "variable": "hldArray"
          }
        ],
        "variable": "lastPage"
      },
      {
        "func": "SELECT",
        "property": "parent",
        "value": "hldOn"
      },
      {
        "func": "GET",
        "property": "hldPage",
        "variable": "oldPage"
      },
      {
        "func": "IF",
        "applyVariables": [
          {
            "parameter": "operand1",
            "variable": "oldPage"
          },
          {
            "parameter": "operand2",
            "variable": "lastPage"
          }
        ],
        "relation": "==",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "y",
            "value": 1500
          }
        ],
        "elseRoutine": [
          {
            "func": "COMPUTE",
            "operation": "+",
            "applyVariables": [
              {
                "parameter": "operand1",
                "variable": "oldPage"
              }
            ],
            "operand2": 1,
            "variable": "newPage"
          },
          {
            "func": "SET",
            "property": "parent",
            "value": "hldOff"
          },
          {
            "func": "SELECT",
            "property": "hldPage",
            "applyVariables": [
              {
                "parameter": "value",
                "variable": "newPage"
              }
            ]
          },
          {
            "func": "SET",
            "property": "parent",
            "value": "hldOn"
          },
          {
            "func": "LABEL",
            "label": "lblPageNum",
            "mode": "inc",
            "value": 1
          },
          {
            "func": "GET",
            "property": "hldPageTopic",
            "variable": "topic"
          },
          {
            "func": "LABEL",
            "label": "lblTopic",
            "applyVariables": [
              {
                "parameter": "value",
                "variable": "topic"
              }
            ]
          },
          {
            "func": "SELECT",
            "property": "id",
            "value": "btnBack"
          },
          {
            "func": "SET",
            "property": "y",
            "value": 890
          }
        ]
      }
    ],
    "image": "/assets/822277903_277"
  },
  "lblPageNum": {
    "id": "lblPageNum",
    "y": 950,
    "height": 40,
    "z": 6,
    "movableInEdit": false,
    "css": "font-size:30px",
    "text": 1,
    "layer": 5,
    "width": 25,
    "x": 830
  },
  "hldPage1": {
    "type": "holder",
    "id": "hldPage1",
    "z": 1,
    "hldPage": 1,
    "dropTarget": {},
    "alignChildren": false,
    "parent": "hldOn",
    "width": 1600,
    "height": 1000,
    "css": "background:transparent;border:none",
    "x": 4,
    "y": 4,
    "hldPageTopic": "JSON Overview"
  },
  "hldPage2": {
    "type": "holder",
    "id": "hldPage2",
    "z": 1,
    "hldPage": 2,
    "dropTarget": {},
    "alignChildren": false,
    "parent": "hldOff",
    "width": 1600,
    "height": 1000,
    "css": "background:transparent;border:none",
    "x": 4,
    "y": 4,
    "hldPageTopic": "JSON Overview, cont."
  },
  "hldPage3": {
    "type": "holder",
    "id": "hldPage3",
    "z": 1,
    "hldPage": 3,
    "alignChildren": false,
    "parent": "hldOff",
    "width": 1600,
    "height": 1000,
    "css": "background:transparent;border:none",
    "x": 4,
    "y": 4,
    "dropTarget": {},
    "hldPageTopic": "Edit Mode"
  },
  "hldOff": {
    "type": "holder",
    "id": "hldOff",
    "y": 1100,
    "width": 25,
    "height": 25,
    "z": 14,
    "css": "background:transparent;border:none"
  },
  "hldOn": {
    "type": "holder",
    "id": "hldOn",
    "width": 25,
    "height": 25,
    "z": 14,
    "css": "background:transparent;border:none",
    "dropTarget": {
      "no": "no"
    },
    "alignChildren": false
  },
  "page2Text2": {
    "id": "page2Text2",
    "parent": "hldPage2",
    "x": 500,
    "y": 100,
    "height": 800,
    "z": 2,
    "movable": false,
    "css": "font-size:22px",
    "text": "\n\nOpening bracket required for all JSON elements\nThe widget id must be unique; the system will assign a default 4-character id, but you may change it\nThere are parent and children widgets which are connected\nThe horizontal x coordinate in pixels (visible screen size is always 1600 x 1000)\nThe vertical y coordinate\nWidth of the widget in pixels\nHeight of the widget in pixels\nZ is a complicated item relating to which widgets are on top of other widgets\nThis property means the widget cannot be moved\nSets the font size\nContains the text displayed on the widget\nThe closing curly bracket",
    "width": 1000
  },
  "page2Text1": {
    "id": "page2Text1",
    "parent": "hldPage2",
    "x": 100,
    "y": 100,
    "width": 1400,
    "height": 800,
    "z": 2,
    "movable": false,
    "css": "font-size:22px",
    "text": "Now let's take a look at what the various things in this simple JSON element mean: \n\n{\n\"id\": \"page1Text\",\n\"parent\": \"hldPage1\",\n\"x\": 100,\n\"y\": 100,\n\"width\": 1400,\n\"height\": 800,\n\"z\": 2,\n\"movable\": false,\n\"css\": \"font-size:22px\",\n\"text\": \"This VirtualTableop.io page .....\"\n}\n\n\nDetailed descriptions of the properties can be found in the wiki."
  },
  "hldPage4": {
    "type": "holder",
    "id": "hldPage4",
    "parent": "hldOff",
    "width": 1600,
    "height": 1000,
    "z": 1,
    "alignChildren": false,
    "css": "background:transparent;border:none",
    "dropTarget": {},
    "hldPage": 4,
    "x": 4,
    "y": 4,
    "hldPageTopic": "Edit Mode, cont."
  },
  "hldPage5": {
    "type": "holder",
    "id": "hldPage5",
    "parent": "hldOff",
    "width": 1600,
    "height": 1000,
    "z": 1,
    "alignChildren": false,
    "css": "background:transparent;border:none",
    "dropTarget": {},
    "hldPage": 5,
    "x": 4,
    "y": 4,
    "hldPageTopic": "JSON Editor Overview"
  },
  "hldPage6": {
    "type": "holder",
    "id": "hldPage6",
    "parent": "hldOff",
    "width": 1600,
    "height": 1000,
    "z": 1,
    "alignChildren": false,
    "css": "background:transparent;border:none",
    "dropTarget": {},
    "hldPage": 6,
    "x": 4,
    "y": 4,
    "hldPageTopic": "JSON Colors"
  },
  "hldPage7": {
    "type": "holder",
    "id": "hldPage7",
    "parent": "hldOff",
    "width": 1600,
    "height": 1000,
    "z": 1,
    "alignChildren": false,
    "css": "background:transparent;border:none",
    "dropTarget": {},
    "hldPage": 7,
    "x": 4,
    "y": 4,
    "hldPageTopic": "Viewing JSON"
  },
  "hldPage8": {
    "type": "holder",
    "id": "hldPage8",
    "parent": "hldOff",
    "width": 1600,
    "height": 1000,
    "z": 1,
    "alignChildren": false,
    "css": "background:transparent;border:none",
    "dropTarget": {},
    "hldPage": 8,
    "x": 4,
    "y": 4,
    "hldPageTopic": "JSON Editor Menu"
  },
  "hldPage9": {
    "type": "holder",
    "id": "hldPage9",
    "parent": "hldOff",
    "width": 1600,
    "height": 1000,
    "z": 1,
    "alignChildren": false,
    "css": "background:transparent;border:none",
    "dropTarget": {},
    "hldPage": 9,
    "x": 4,
    "y": 4,
    "hldPageTopic": "JSON Properties Buttons"
  },
  "hldPage10": {
    "type": "holder",
    "id": "hldPage10",
    "parent": "hldOff",
    "width": 1600,
    "height": 1000,
    "z": 1,
    "alignChildren": false,
    "css": "background:transparent;border:none",
    "dropTarget": {},
    "hldPage": 10,
    "x": 4,
    "y": 4,
    "hldPageTopic": "Errors"
  },
  "page3Text1": {
    "id": "page3Text1",
    "parent": "hldPage3",
    "x": 100,
    "y": 100,
    "width": 1400,
    "height": 800,
    "z": 2,
    "movable": false,
    "css": "font-size:22px",
    "text": "There are two ways to edit JSON directly in the room.  The first is activated by pressing the blue and white Edit mode icon.\n\nDoing so will bring up an altered view of the room that looks like the image to the right."
  },
  "page1Text1": {
    "id": "page1Text1",
    "parent": "hldPage1",
    "x": 100,
    "y": 100,
    "width": 1400,
    "height": 800,
    "z": 2,
    "movable": false,
    "css": "font-size:22px",
    "text": "This VirtulTableop.io room is intended to introduce you to JSON and the JSON editor.\n\nUse the arrow keys to navigate forwards and backwards through the pages of this user guide.\n\nFirst, a few basics about JSON. Almost everything that a game room designer can control about what the players see is done through JSON.  The JSON contains the properties of all the widgets (the collective name for anything appearing in a VirtualTabletop room).  The JSON also contains the functions that control automation and changes to widget properties through various 'Routines.'\n\nEvery widget is its own JSON element that must begin and end with curly brackets like this { }. Between the curly brackets will be various properties such as \"id,\" \"x,\" \"y,\" \"width,\" and \"height.\"  Many more properties are possible. Most widgets will contain size and position, but the only mandatory property is an \"id.\" Each property must be followed by a comma, except for the last one which must not have a comma.\n\nAs an example of what JSON looks like, the JSON for the widget that contains this text is: \n\n{\n\"id\": \"page1Text1\",\n\"parent\": \"hldPage1\",\n\"x\": 100,\n\"y\": 100,\n\"width\": 1400,\n\"height\": 800,\n\"z\": 2,\n\"movable\": false,\n\"css\": \"font-size:22px\",\n\"text\": \"This VirtualTableop.io room .....\"\n}"
  },
  "page3Image1": {
    "id": "page3Image1",
    "x": 1292,
    "y": 87,
    "width": 50,
    "height": 50,
    "z": 7,
    "movable": false,
    "image": "/assets/-311274453_876",
    "parent": "hldPage3"
  },
  "page3Text2": {
    "id": "page3Text2",
    "parent": "hldPage3",
    "x": 100,
    "y": 200,
    "width": 600,
    "height": 800,
    "z": 3,
    "movable": false,
    "css": "font-size:22px",
    "text": "This views shows the outline of visible widgets. This view can get messy if multiple widgets overlap. Images, like the arrows, display their shape, but not always the correct colors.\n\nIn this view, you can click and drag to move objects, so long as the \"movableInEdit\" property is true. Clicking on a widget in this view will not activiate its routine, but will instead bring up the first JSON editing method.\n\nThe JSON editor available through this method looks like the image below. "
  },
  "page4Text1": {
    "id": "page4Text1",
    "parent": "hldPage4",
    "x": 100,
    "y": 100,
    "width": 1400,
    "height": 800,
    "z": 2,
    "movable": false,
    "css": "font-size:22px",
    "text": "The Edit widget JSON mode allows only the most basic of text editing.  You can cut and paste and you can type.  If you use this method, you are on your own to get the commas and brackets correct.  It has very rudimentary error notification and will not allow you to save/update the widget if there are errors.\n\nFrom this mode:\n\n  - You have a link directly to the wiki\n\n  - You can click on the link to an \"advanced editor\" which is informally known as the Ghetto Editor. It still has its uses, but Ghetto is not being kept updated and current with all the changes in VirtualTabletop.\n\n  - You can type directly into the text editor to change the JSON. When finished, click \"Update widget\" to save your changes. If you want to leave the edit mode without saving changes, press the Escape key.\n\n  - You can duplicate the widget or you can delete it by pressing the appropriate keys below the text editor window.\n\nThis editor is mainly useful for making very quick and easy edits. For example, if you just wanted to change the text in this text box, you could use this editor.\n\nPRACTICE: Right now go ahead and click on the edit mode icon.  Then click in the outlined area in the main part of the screen and it should bring up the edit menu you saw on the previous screen.  Practice making minor changes to the text, to the x,y coordinates, and the width and height. It's okay to save the changes so you can see them by pressing \"Update widget\" because you are just in the practice room. However, if you are in a room you actually are working on, be careful about making and saving changes. Be sure to read the FAQ to make sure you understand how the room is saved.  Simply making a change to the JSON will not save the current room state; that is a different process."
  },
  "page5Text1": {
    "id": "page5Text1",
    "parent": "hldPage5",
    "x": 100,
    "y": 100,
    "height": 800,
    "z": 2,
    "movable": false,
    "css": "font-size:22px",
    "text": "The other, and recommended, method for editing JSON is just known as the JSON editor.  You activate it by pressing CTRL-J. The editor will bring up something similar to what you see in the image to the right (although the room will have changed since that screenshot was taken).\n\nAdvantages of this editor over the other one include:\n\n  - Context sensitive options that update depending on the type of widget and what line you are on in the JSON\n\n  - When properties or functions are added or changed in the base code, the JSON editor reflects those changes\n\n  - Properties can be easily added or sometimes changed by using CTRL key combinations (although they may conflict with other CTRL key combinations used by your browser or operating system) or by clicking on the black and gray button with the name of the property\n\n  - Color coding to help distinguish different parts of the JSON\n\n  - Better error checking and notification, although this is still very rudimentary\n\n  - Instant visual feedback when changes are made ",
    "width": 900
  },
  "page6Text1": {
    "id": "page6Text1",
    "parent": "hldPage6",
    "x": 100,
    "y": 100,
    "width": 1400,
    "height": 800,
    "z": 2,
    "movable": false,
    "css": "font-size:22px",
    "text": "The JSON editor is divided into two vertical parts.  The left vertical column contains the JSON code is colored text.  The right vertical column contains a graphical menu at the top and a list of properties below. When long enough, each column will add a vertical scroll bar.\n\nLet's begin by describing the JSON color codes:\n\n  - Yellow: used for properties and other 'keys'\n\n  - Orange: used for custom properties or keys added by the game room designer and unique to certain widget(s) in that room\n\n  - Red: used to indicate an error in the right vertical column\n\n  - Green: used for strings contained within quotation marks\n\n  - Purple: used for numbers (treated as numbers, rather than strings)\n\n  - Blue: used to indicate 'null'\n\n  - Gray: used to indicate a default property and value\n\n  - White: white text is only used if the JSON editor has not processed the text yet (for example, if you cut and paste something, it will initially appear as white\n\n\nPRACTICE: Go ahead now and press CTRL-J to open up the JSON editor.  You should leave it open for the rest of this user guide, although you can close it at any time by again pressing CTRL-J. The room that you can interact with will be slightly smaller and shifted left on the screen to make room for the editor. Move the cursor towards the middle of the screen and hold down CTRL while left-clicking on your mouse.  That will select this text widget for display in the editor. When you press the green arrow to change to the next page, the JSON editor will still display this item (the last one that you selected for display).",
    "abc123": "I made this up for the demo"
  },
  "page7Text1": {
    "id": "page7Text1",
    "parent": "hldPage7",
    "x": 100,
    "y": 100,
    "width": 1400,
    "height": 800,
    "z": 2,
    "movable": false,
    "css": "font-size:22px",
    "text": "The order of the JSON in the editor is consistent (unlike the basic editor mode, which usually lists the JSON properties/keys in the order added to the JSON). In the JSON editor, the first few items will be important and frequently used properties in the following order:\n\n        Type, id, parent, deck, cardType, owner, x, y, width, height, scale, rotation, layer, z, inheritChildZ, movable, and movableInEdit\n\nSome of those will always be displayed, using grey text to show the default values. Others will only be displayed if they are not null.\n\nYou can edit the JSON by typing directly into the property or value.\n\nPRACTICE.  Go ahead right now and try typing some additional text into the large green block of text that makes up this widget.  Remember, to select this widget (you are probably still on the one from the previous page), put the mouse somewhere near the middle of the screen and CTRL-click.  You can also change the x and y values for the position of this block of text and see instantly how it changes.  Change the width value from 1400 to 400 and back to see the effect of that change.\n\nBe careful making changes, however.  Changes take effect immediately and there is a very, very limited undo capability.\n\n\nUsing CTRL-click to select a widget is one way to display the JSON of a widget.  Another way, and one that is required if widgets overlap, is to use the function keys. As you move the cursor around the screen, look towards the top of the screen for the white text on a black background. When the cursor is over an area with a widget, this area of the screen will show its id, its type and the function key you use to access it.  For example, if you move the mouse over the orange back button, you will something that looks like the picture below.\n\nPRACTICE.  Move the cursor around the screen over the various areas with text or images.  Press the corresponding function key to see the JSON for that widget."
  },
  "page7Image1": {
    "id": "page7Image1",
    "x": 475,
    "y": 699,
    "width": 600,
    "height": 200,
    "z": 48,
    "movable": null,
    "movableInEdit": null,
    "image": "/assets/485133131_68080",
    "parent": "hldPage7"
  },
  "page3Image2": {
    "id": "page3Image2",
    "parent": "hldPage3",
    "x": 700,
    "y": 25,
    "width": 900,
    "height": 900,
    "z": 20,
    "movable": false,
    "image": "/assets/1908364078_358544"
  },
  "page3Image3": {
    "id": "page3Image3",
    "parent": "hldPage3",
    "x": 97,
    "y": 415,
    "width": 600,
    "height": 600,
    "z": 26,
    "movable": null,
    "movableInEdit": null,
    "image": "/assets/1481013228_182992"
  },
  "lblTitle": {
    "id": "lblTitle",
    "y": 6,
    "width": 800,
    "height": 40,
    "layer": 5,
    "z": 6,
    "movableInEdit": false,
    "css": "font-size:30px; text-align:center",
    "text": "JSON Editor User Guide",
    "x": 400
  },
  "lblTopic": {
    "id": "lblTopic",
    "x": 400,
    "y": 56,
    "width": 800,
    "height": 40,
    "layer": 5,
    "z": 6,
    "movableInEdit": false,
    "css": "font-size:25px; text-align:center",
    "text": "JSON Overview"
  },
  "page8Text1": {
    "id": "page8Text1",
    "parent": "hldPage8",
    "x": 100,
    "y": 100,
    "width": 1400,
    "height": 800,
    "z": 2,
    "movable": false,
    "css": "font-size:22px",
    "text": "Across the top of the right column in the editor are are variety of clickable icons. Let's review the function of those.\n\n🔍 toggle zoom out\n          Zooms out and in so you can see widgets located outside the main screen. For example, in this room, pages are stored below the screen.\n\n📋 copy state from another room/server\n          Copies all the widgets from another room and erases everything in the current room.  URL can just be the part that comes after the slash.\n\n🎬 macro\n          Powerful and dangerous tool for creating macros. Requires some knowledge of JavaScript.  Beyond the scope of this guide.\n\n🔝 tree\n          Displays the heirarchy of widgets in the room.  Child widgets will display under their parents.  No particular order to widgets, however.\n\n➕ add new widget.\n          Creates a new, blank widget\n\n✨ duplicate widget\n          Copies everything about the current widget but creates a new, random 4-character id.\n\n❌ remove widget\n          Deletes the current widget.  Use caution, because this is instant, with no prompt, and cannot be undone.\n\n📝 edit mode\n          Switches the view to the edit mode view (same as if you pressed the blue and white edit mode icon).\n\n🔼 open parent\n          Opens the JSON for the parent of the currently selected widget."
  },
  "page9Image1": {
    "id": "page9Image1",
    "parent": "hldPage9",
    "x": 100,
    "y": 100,
    "width": 900,
    "height": 800,
    "z": 2,
    "movable": false,
    "css": "font-size:22px",
    "text": "The image to the right is the JSON editor right vertical column for the green advance page button at the bottom of the screen.  This part of the JSON editor is context sensitive, meaning that you will get a different display based on where your cursor is placed in the JSON. For this image, the cursor was placed on the \"IF\" function inside of the \"clickRoutine.\"\n\nGenerally, the menu will display the most specific to the most general.  You can get an idea of where you are in the hierarchy of the JSON by looking at the small white text with arrows.  For example, at the very top, you see button ↦ clickRoutine ↦ 5 ↦ (IF) ↦ func.  This means the cursor is located in a button type of widget, inside of a clickRoutine, at the 6th function inside the routine (counting starts at 0) which is an IF function.\n\nAlthough you can press any of the buttons that are available to you, the location that the property or function is inserted will depend on where the cursor is and what level in the hierarchy the property applies to.  For example, if you were to press the \"debug\" button, it would not be inserted into the code at the point of the cursor, but at the appropriate place for that property.\n\nAt the bottom of the image, you can see an option to remove the current function. While you can use the keyboard to add or remove items, using these buttons helps put the right commas, brackets, and other items where they belong.\n\nPRACTICE. Use the JSON editor to select the button below. It contains the same clickRoutine as the green arrow, so if you click it, you will advance to the next page. Practice adding and removing items into the code using the editor."
  },
  "x9x5": {
    "image": "/assets/-290685618_113457",
    "id": "x9x5",
    "z": 56,
    "x": 883,
    "y": -5,
    "height": 1000,
    "width": 600,
    "parent": "hldPage9"
  },
  "jisy": {
    "type": "button",
    "clickRoutine": [
      {
        "func": "SELECT",
        "property": "hldPage",
        "relation": "!=",
        "value": null
      },
      {
        "func": "GET",
        "property": "hldPage",
        "aggregation": "array",
        "variable": "hldArray"
      },
      {
        "func": "COMPUTE",
        "operation": "length",
        "applyVariables": [
          {
            "parameter": "operand1",
            "variable": "hldArray"
          }
        ],
        "variable": "lastPage"
      },
      {
        "func": "SELECT",
        "property": "parent",
        "value": "hldOn"
      },
      {
        "func": "GET",
        "property": "hldPage",
        "variable": "oldPage"
      },
      {
        "func": "IF",
        "applyVariables": [
          {
            "parameter": "operand1",
            "variable": "oldPage"
          },
          {
            "parameter": "operand2",
            "variable": "lastPage"
          }
        ],
        "relation": "==",
        "elseRoutine": [
          {
            "func": "COMPUTE",
            "operation": "+",
            "applyVariables": [
              {
                "parameter": "operand1",
                "variable": "oldPage"
              }
            ],
            "operand2": 1,
            "variable": "newPage"
          },
          {
            "func": "SET",
            "property": "parent",
            "value": "hldOff"
          },
          {
            "func": "SELECT",
            "property": "hldPage",
            "applyVariables": [
              {
                "parameter": "value",
                "variable": "newPage"
              }
            ]
          },
          {
            "func": "SET",
            "property": "parent",
            "value": "hldOn"
          },
          {
            "func": "LABEL",
            "label": "lblPageNum",
            "mode": "inc",
            "value": 1
          },
          {
            "func": "GET",
            "property": "hldPageTopic",
            "variable": "topic"
          },
          {
            "func": "LABEL",
            "label": "lblTopic",
            "applyVariables": [
              {
                "parameter": "value",
                "variable": "topic"
              }
            ]
          }
        ],
        "thenRoutine": []
      }
    ],
    "x": 461,
    "y": 741,
    "z": 579,
    "id": "jisy",
    "parent": "hldPage9",
    "layer": 5,
    "movableInEdit": false,
    "text": "Practice on Me"
  },
  "page10Text1": {
    "id": "page10Text1",
    "parent": "hldPage10",
    "x": 100,
    "y": 100,
    "width": 1400,
    "height": 800,
    "z": 2,
    "movable": false,
    "css": "font-size:22px",
    "text": "Every change you make in the JSON using the JSON editor reflects instantly in the room.  However, if something you do causes an error, the editor no longer sends those updates to the room.  You can continue to edit the JSON, but the changes are not reflected in the room, and the JSON is not saved, until the error condition is cleared.  If you leave the JSON editor while there is an error condition, the widget will be in its last state before the error.\n\nErrors are indicated in the right vertical column by red text and the absence of clickable properties buttons.\n\nIn many instances, pressing CTRL-space will move the cursor close to the place of the error.\n\nOne of the most common errors is a syntax error, which is caused by an extra or missing comma, an extra\nor missing bracket, extra or missing quotation marks, etc. Using the CTRL-space shortcut can be very\nhelpful in getting to the source of the problem.\n\nFor example, if a section of your JSON ends in a series of closing brackets like in the image to the bottom\nright (this particular code segment does not come from this room), you can imagine it would be difficult\nto troubleshoot which bracket or comma is causing the problem.\n\nThese syntax errors commonly arise when cutting and pasting code from another widget.\n\nOther errors you might see include:\n\n    No ID given; ID is already in use; Parent does not exist; Deck does not exist; Given widget is not a deck\n    or doesn't define cardTypes, Card type does not exist in deck\n\nPRACTICE. Go ahead now and create an error in the JSON. Move the cursor away and use CTRL-space to \nsee if you can find the error.\n\n\n\nThis concludes the user guide.  Ask for help in the Discord channel if you have any questions or problems."
  },
  "page10Image1": {
    "id": "page10Image1",
    "parent": "hldPage10",
    "x": 1169,
    "y": 159,
    "width": 400,
    "height": 400,
    "z": 60,
    "movable": false,
    "image": "/assets/295352485_23906"
  },
  "page10Image2": {
    "id": "page10Image2",
    "x": 1160,
    "y": 527,
    "width": 400,
    "height": 400,
    "z": 66,
    "image": "/assets/-108283418_41033",
    "parent": "hldPage10",
    "movable": false
  },
  "48e2": {
    "image": "/assets/436970413_214749",
    "id": "48e2",
    "z": 76,
    "x": 989,
    "y": -12,
    "width": 600,
    "height": 800,
    "parent": "hldPage5"
  },
  "page1Text2": {
    "id": "page1Text2",
    "x": 750,
    "y": 680,
    "width": 800,
    "height": 40,
    "layer": 5,
    "z": 582,
    "movableInEdit": false,
    "css": "font-size:25px",
    "text": "Note: There are several places in this tutorial where you are prompted to actually change the JSON to practice.  Please do not do that if you are in the Tutorials room at https://virtualtabletop.io/Tutorials. However, if you have loaded the tutorial into your own room, feel free to practice making changes. If you have come to the Tutorials room to view this, you should reload the room from its saved state, just to make sure you are viewing an unmodified version.",
    "parent": "hldPage1"
  }
}