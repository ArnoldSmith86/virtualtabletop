{
  "_meta": {
    "version": 15,
    "info": {
      "name": "Avocado Auction",
      "image": "/assets/623154753_148698",
      "rules": "",
      "bgg": "https://boardgamegeek.com/boardgame/403123/puerto-banana",
      "year": "2024",
      "mode": "vs",
      "time": "10",
      "attribution": "Room design and layout by LawDawg96. Released to the Public Domain under CC0.<div><br></div><div>The images are available under the Pixabay license:</div><div><div><ul><li><span style=\"color: var(--overlayFontColor);\">Avocado button by cvalerama at https://pixabay.com/vectors/avocado-vegetable-drawing-5984252/</span></li><li>Avocado background by imagine1883 at https://pixabay.com/illustrations/avocado-organic-healthy-food-8718834/</li></ul></div><div><br></div></div>",
      "lastUpdate": 1718813447706,
      "showName": true,
      "skill": "",
      "description": "Collect the most avocados using secret bidding. You can bid any amount, even if you do not have any avocados. But if the highest bidder cannot pay the difference between that bid and the next highest, they lose all their avocados. The first player to collect 200 avocados wins.",
      "similarImage": "",
      "similarName": "Puerto Banana",
      "similarDesigner": "Mads Emil Christensen",
      "similarAwards": "",
      "ruleText": "",
      "helpText": "Players sit in seats. When ready, press the&nbsp;<i class=\"richtextSymbol material-icons\">restart_alt</i>&nbsp;button in the upper right.<div><br></div><div>Press the&nbsp;<i style=\"color: var(--overlayFontColor);\" class=\"richtextSymbol gameicons\"><img src=\"/i/game-icons.net/guard13007/play-button.svg\"></i><span style=\"color: var(--overlayFontColor);\">button to begin the auction cycle. Each player enters a secret bid by typing into the label or pressing the red and green + and - buttons above the seats. When the bid is complete, press the green&nbsp;</span><i style=\"color: var(--overlayFontColor);\" class=\"richtextSymbol material-icons\">check_circle</i><span style=\"color: var(--overlayFontColor);\">&nbsp;button and the seat details change to indicate the player has bid.</span></div><div><br></div><div>Once all players have bid, press the&nbsp;<i style=\"color: var(--overlayFontColor);\" class=\"richtextSymbol material-icons\">remove_red_eye</i><span style=\"color: var(--overlayFontColor);\">&nbsp;button. The highest bids are highlighted in a solid green border. The next highest bids are highlighted in a dashed light green border. Bids in which the bonus cannot be paid are highlighted in a dotted red border.</span></div><div><br></div><div>Press the&nbsp;<i style=\"color: var(--overlayFontColor);\" class=\"richtextSymbol material-icons\">scoreboard</i><span style=\"color: var(--overlayFontColor);\">&nbsp;button to automatically update the stash values.</span></div><div><br></div><div>Press the&nbsp;<span style=\"color: var(--overlayFontColor);\" class=\"richtextSymbol gameicons\"><img src=\"https://virtualtabletop.io/i/game-icons.net/guard13007/play-button.svg\"></span><span style=\"color: var(--overlayFontColor);\">button</span>&nbsp;to begin a new auction.</div>",
      "players": "2-6",
      "language": "",
      "variant": "",
      "variantImage": ""
    }
  },
  "seat1": {
    "type": "seat",
    "id": "seat1",
    "x": 160,
    "y": 622,
    "width": 172,
    "height": 48,
    "borderRadius": 8,
    "css": {
      "default": {
        "cursor": "pointer",
        "gap": "5px",
        "font-size": "21px",
        "box-shadow": "0 2px 5px #00000066",
        "text-shadow": "${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, ${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}",
        "background": "${PROPERTY mainColor}",
        "color": "white",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY outlineColor}",
        "box-sizing": "border-box"
      },
      ".seated.turn": {
        "box-shadow": "0px 0px 20px 5px ${PROPERTY glowColor}"
      },
      ".seated.turn::after": {
        "xcontent": "'Active Player'",
        "content": "'url('/assets/1421287058_6465')'",
        "font-size": "18px",
        "line-height": "1em",
        "white-space": "wrap",
        "background-color": "${PROPERTY outlineColor}",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY mainColor}",
        "background-size": "200% auto",
        "color": "${PROPERTY mainColor}",
        "text-shadow": "0 1px 5px #000000cc",
        "width": "1em",
        "height": "1em",
        "text-align": "center",
        "text-transform": "uppercase",
        "position": "absolute",
        "right": "-12px",
        "top": "-12px",
        "padding": "2px",
        "border-radius": "100px",
        "box-shadow": "0 0 5px #000000bb",
        "pointer-events": "none"
      }
    },
    "hand": "hand1",
    "hideWhenUnused": true,
    "colorArray": [
      "#000000",
      "#dddddd",
      "#f44336",
      "#f06292",
      "#9c27b0",
      "#3f51b5",
      "#1976d2",
      "#00bcd4",
      "#009688",
      "#4caf50",
      "#8bc34a",
      "#cddc39",
      "#ffeb3b",
      "#ffc107",
      "#ff9800",
      "#bf360c",
      "#795548",
      "#607d8b"
    ],
    "colorContrast": "#000000",
    "mainColor": "#dddddd",
    "outlineColor": "#000000bb",
    "score": [],
    "textColor": "#000000",
    "textShadowBlur": 2,
    "textShadowDistance": 2,
    "clickRoutine": [
      {
        "func": "CALL",
        "routine": "useSeatRoutine"
      },
      "var playerColor = ${result.0}",
      "var playerName = ${result.1}"
    ],
    "colorChangeRoutine": [
      {
        "func": "SET",
        "collection": [
          "marker${PROPERTY index}"
        ],
        "property": "color",
        "value": "${PROPERTY color}"
      }
    ],
    "markerColorRoutine": [
      "// Sets the colors on the markers and climbers",
      "var markerContrast = ${PROPERTY mainColor} colorContrast 0.15",
      {
        "func": "SELECT",
        "property": "parent",
        "value": "climberHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor1",
        "value": "${PROPERTY mainColor}"
      },
      {
        "func": "SET",
        "property": "bgColor2",
        "value": "${markerContrast}"
      },
      {
        "func": "SELECT",
        "property": "parent",
        "value": "markerHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor",
        "value": "${PROPERTY mainColor}"
      }
    ],
    "useSeatRoutine": [
      "// Customized seat color and options routine",
      "var leaveSeat = false",
      "var name = ${PROPERTY player}",
      "var color = ${PROPERTY color}",
      "var result = []",
      "var colorArray = ${PROPERTY colorArray}",
      "var colorList = ${colorArray} indexOf ${playerColor}",
      {
        "func": "IF",
        "operand1": "${colorList}",
        "relation": ">",
        "operand2": "-1",
        "elseRoutine": [
          "var playerColor = ${colorArray.0}"
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "INPUT",
            "header": "Enter your name and choice of player color.",
            "fields": [
              {
                "type": "string",
                "label": "Your Name:",
                "variable": "name",
                "value": "${playerName}"
              },
              {
                "type": "palette",
                "label": "Your Color:",
                "colors": "${PROPERTY colorArray}",
                "variable": "color",
                "value": "${playerColor}"
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              {
                "func": "INPUT",
                "header": "Enter your name and choice of player color.",
                "fields": [
                  {
                    "type": "string",
                    "label": "Your Name:",
                    "variable": "name",
                    "value": "${playerName}"
                  },
                  {
                    "type": "palette",
                    "label": "Your Color:",
                    "colors": "${PROPERTY colorArray}",
                    "variable": "color",
                    "value": "${playerColor}"
                  },
                  {
                    "type": "subtitle",
                    "text": "All done?",
                    "css": "background-color: var(--VTTblue);color:white;"
                  },
                  {
                    "type": "checkbox",
                    "label": "Stand up from seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ],
            "elseRoutine": [
              {
                "func": "INPUT",
                "header": "Are you sure you want to remove ${PROPERTY player} from this seat?",
                "cancelButtonText": "Cancel",
                "confirmButtonText": "Okay",
                "fields": [
                  {
                    "type": "checkbox",
                    "label": "Remove this player from their seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "condition": "${leaveSeat}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "color",
            "value": null
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "player",
            "value": ""
          }
        ],
        "elseRoutine": [
          "var updatePlayerandColor = false",
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "condition": "${name}",
            "elseRoutine": [
              "var updatePlayerandColor = false"
            ]
          },
          {
            "func": "IF",
            "condition": "${updatePlayerandColor}",
            "thenRoutine": [
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "color",
                "value": "${color}"
              },
              "var result = push ${color}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "player",
                "value": "${name}"
              },
              "var result = push ${name}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "mainColor",
                "value": "${result.0}"
              },
              "var newText = colorContrast ${PROPERTY mainColor}",
              "var newGlow = colorContrast ${PROPERTY mainColor} 0.3",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "textColor",
                "value": "${newText}"
              },
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "glowColor",
                "value": "${newGlow}"
              },
              {
                "func": "CALL",
                "routine": "markerColorRoutine"
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "mainColor",
            "value": "#dddddd"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "textColor",
            "value": "#000000"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "glowColor",
            "value": null
          },
          {
            "func": "CALL",
            "routine": "markerColorRoutine"
          }
        ],
        "elseRoutine": []
      }
    ]
  },
  "seat2": {
    "type": "seat",
    "id": "seat2",
    "x": 380,
    "y": 622,
    "width": 172,
    "height": 48,
    "borderRadius": 8,
    "css": {
      "default": {
        "cursor": "pointer",
        "gap": "5px",
        "font-size": "21px",
        "box-shadow": "0 2px 5px #00000066",
        "text-shadow": "${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, ${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}",
        "background": "${PROPERTY mainColor}",
        "color": "white",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY outlineColor}",
        "box-sizing": "border-box"
      },
      ".seated.turn": {
        "box-shadow": "0px 0px 20px 5px ${PROPERTY glowColor}"
      },
      ".seated.turn::after": {
        "xcontent": "'Active Player'",
        "content": "'!'",
        "font-size": "18px",
        "line-height": "1em",
        "white-space": "wrap",
        "background-color": "${PROPERTY outlineColor}",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY mainColor}",
        "background-size": "200% auto",
        "color": "${PROPERTY mainColor}",
        "text-shadow": "0 1px 5px #000000cc",
        "width": "1em",
        "height": "1em",
        "text-align": "center",
        "text-transform": "uppercase",
        "position": "absolute",
        "right": "-12px",
        "top": "-12px",
        "padding": "2px",
        "border-radius": "100px",
        "box-shadow": "0 0 5px #000000bb",
        "pointer-events": "none"
      }
    },
    "hand": "hand2",
    "hideWhenUnused": true,
    "colorArray": [
      "#000000",
      "#dddddd",
      "#f44336",
      "#f06292",
      "#9c27b0",
      "#3f51b5",
      "#1976d2",
      "#00bcd4",
      "#009688",
      "#4caf50",
      "#8bc34a",
      "#cddc39",
      "#ffeb3b",
      "#ffc107",
      "#ff9800",
      "#bf360c",
      "#795548",
      "#607d8b"
    ],
    "colorContrast": "#000000",
    "mainColor": "#dddddd",
    "outlineColor": "#000000bb",
    "score": [],
    "textColor": "#000000",
    "textShadowBlur": 2,
    "textShadowDistance": 2,
    "clickRoutine": [
      {
        "func": "CALL",
        "routine": "useSeatRoutine"
      },
      "var playerColor = ${result.0}",
      "var playerName = ${result.1}"
    ],
    "colorChangeRoutine": [
      {
        "func": "SET",
        "collection": [
          "marker${PROPERTY index}"
        ],
        "property": "color",
        "value": "${PROPERTY color}"
      }
    ],
    "markerColorRoutine": [
      "// Sets the colors on the markers and climbers",
      "var markerContrast = ${PROPERTY mainColor} colorContrast 0.15",
      {
        "func": "SELECT",
        "property": "parent",
        "value": "climberHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor1",
        "value": "${PROPERTY mainColor}"
      },
      {
        "func": "SET",
        "property": "bgColor2",
        "value": "${markerContrast}"
      },
      {
        "func": "SELECT",
        "property": "parent",
        "value": "markerHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor",
        "value": "${PROPERTY mainColor}"
      }
    ],
    "useSeatRoutine": [
      "// Customized seat color and options routine",
      "var leaveSeat = false",
      "var name = ${PROPERTY player}",
      "var color = ${PROPERTY color}",
      "var result = []",
      "var colorArray = ${PROPERTY colorArray}",
      "var colorList = ${colorArray} indexOf ${playerColor}",
      {
        "func": "IF",
        "operand1": "${colorList}",
        "relation": ">",
        "operand2": "-1",
        "elseRoutine": [
          "var playerColor = ${colorArray.0}"
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "INPUT",
            "header": "Enter your name and choice of player color.",
            "fields": [
              {
                "type": "string",
                "label": "Your Name:",
                "variable": "name",
                "value": "${playerName}"
              },
              {
                "type": "palette",
                "label": "Your Color:",
                "colors": "${PROPERTY colorArray}",
                "variable": "color",
                "value": "${playerColor}"
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              {
                "func": "INPUT",
                "header": "Enter your name and choice of player color.",
                "fields": [
                  {
                    "type": "string",
                    "label": "Your Name:",
                    "variable": "name",
                    "value": "${playerName}"
                  },
                  {
                    "type": "palette",
                    "label": "Your Color:",
                    "colors": "${PROPERTY colorArray}",
                    "variable": "color",
                    "value": "${playerColor}"
                  },
                  {
                    "type": "subtitle",
                    "text": "All done?",
                    "css": "background-color: var(--VTTblue);color:white;"
                  },
                  {
                    "type": "checkbox",
                    "label": "Stand up from seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ],
            "elseRoutine": [
              {
                "func": "INPUT",
                "header": "Are you sure you want to remove ${PROPERTY player} from this seat?",
                "cancelButtonText": "Cancel",
                "confirmButtonText": "Okay",
                "fields": [
                  {
                    "type": "checkbox",
                    "label": "Remove this player from their seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "condition": "${leaveSeat}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "color",
            "value": null
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "player",
            "value": ""
          }
        ],
        "elseRoutine": [
          "var updatePlayerandColor = false",
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "condition": "${name}",
            "elseRoutine": [
              "var updatePlayerandColor = false"
            ]
          },
          {
            "func": "IF",
            "condition": "${updatePlayerandColor}",
            "thenRoutine": [
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "color",
                "value": "${color}"
              },
              "var result = push ${color}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "player",
                "value": "${name}"
              },
              "var result = push ${name}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "mainColor",
                "value": "${result.0}"
              },
              "var newText = colorContrast ${PROPERTY mainColor}",
              "var newGlow = colorContrast ${PROPERTY mainColor} 0.3",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "textColor",
                "value": "${newText}"
              },
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "glowColor",
                "value": "${newGlow}"
              },
              {
                "func": "CALL",
                "routine": "markerColorRoutine"
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "mainColor",
            "value": "#dddddd"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "textColor",
            "value": "#000000"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "glowColor",
            "value": null
          },
          {
            "func": "CALL",
            "routine": "markerColorRoutine"
          }
        ],
        "elseRoutine": []
      }
    ],
    "index": 2
  },
  "seat3": {
    "type": "seat",
    "id": "seat3",
    "x": 601,
    "y": 622,
    "width": 172,
    "height": 48,
    "borderRadius": 8,
    "css": {
      "default": {
        "cursor": "pointer",
        "gap": "5px",
        "font-size": "21px",
        "box-shadow": "0 2px 5px #00000066",
        "text-shadow": "${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, ${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}",
        "background": "${PROPERTY mainColor}",
        "color": "white",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY outlineColor}",
        "box-sizing": "border-box"
      },
      ".seated.turn": {
        "box-shadow": "0px 0px 20px 5px ${PROPERTY glowColor}"
      },
      ".seated.turn::after": {
        "xcontent": "'Active Player'",
        "content": "'!'",
        "font-size": "18px",
        "line-height": "1em",
        "white-space": "wrap",
        "background-color": "${PROPERTY outlineColor}",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY mainColor}",
        "background-size": "200% auto",
        "color": "${PROPERTY mainColor}",
        "text-shadow": "0 1px 5px #000000cc",
        "width": "1em",
        "height": "1em",
        "text-align": "center",
        "text-transform": "uppercase",
        "position": "absolute",
        "right": "-12px",
        "top": "-12px",
        "padding": "2px",
        "border-radius": "100px",
        "box-shadow": "0 0 5px #000000bb",
        "pointer-events": "none"
      }
    },
    "hand": "hand3",
    "hideWhenUnused": true,
    "colorArray": [
      "#000000",
      "#dddddd",
      "#f44336",
      "#f06292",
      "#9c27b0",
      "#3f51b5",
      "#1976d2",
      "#00bcd4",
      "#009688",
      "#4caf50",
      "#8bc34a",
      "#cddc39",
      "#ffeb3b",
      "#ffc107",
      "#ff9800",
      "#bf360c",
      "#795548",
      "#607d8b"
    ],
    "colorContrast": "#000000",
    "mainColor": "#dddddd",
    "outlineColor": "#000000bb",
    "score": [],
    "textColor": "#000000",
    "textShadowBlur": 2,
    "textShadowDistance": 2,
    "clickRoutine": [
      {
        "func": "CALL",
        "routine": "useSeatRoutine"
      },
      "var playerColor = ${result.0}",
      "var playerName = ${result.1}"
    ],
    "colorChangeRoutine": [
      {
        "func": "SET",
        "collection": [
          "marker${PROPERTY index}"
        ],
        "property": "color",
        "value": "${PROPERTY color}"
      }
    ],
    "markerColorRoutine": [
      "// Sets the colors on the markers and climbers",
      "var markerContrast = ${PROPERTY mainColor} colorContrast 0.15",
      {
        "func": "SELECT",
        "property": "parent",
        "value": "climberHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor1",
        "value": "${PROPERTY mainColor}"
      },
      {
        "func": "SET",
        "property": "bgColor2",
        "value": "${markerContrast}"
      },
      {
        "func": "SELECT",
        "property": "parent",
        "value": "markerHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor",
        "value": "${PROPERTY mainColor}"
      }
    ],
    "useSeatRoutine": [
      "// Customized seat color and options routine",
      "var leaveSeat = false",
      "var name = ${PROPERTY player}",
      "var color = ${PROPERTY color}",
      "var result = []",
      "var colorArray = ${PROPERTY colorArray}",
      "var colorList = ${colorArray} indexOf ${playerColor}",
      {
        "func": "IF",
        "operand1": "${colorList}",
        "relation": ">",
        "operand2": "-1",
        "elseRoutine": [
          "var playerColor = ${colorArray.0}"
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "INPUT",
            "header": "Enter your name and choice of player color.",
            "fields": [
              {
                "type": "string",
                "label": "Your Name:",
                "variable": "name",
                "value": "${playerName}"
              },
              {
                "type": "palette",
                "label": "Your Color:",
                "colors": "${PROPERTY colorArray}",
                "variable": "color",
                "value": "${playerColor}"
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              {
                "func": "INPUT",
                "header": "Enter your name and choice of player color.",
                "fields": [
                  {
                    "type": "string",
                    "label": "Your Name:",
                    "variable": "name",
                    "value": "${playerName}"
                  },
                  {
                    "type": "palette",
                    "label": "Your Color:",
                    "colors": "${PROPERTY colorArray}",
                    "variable": "color",
                    "value": "${playerColor}"
                  },
                  {
                    "type": "subtitle",
                    "text": "All done?",
                    "css": "background-color: var(--VTTblue);color:white;"
                  },
                  {
                    "type": "checkbox",
                    "label": "Stand up from seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ],
            "elseRoutine": [
              {
                "func": "INPUT",
                "header": "Are you sure you want to remove ${PROPERTY player} from this seat?",
                "cancelButtonText": "Cancel",
                "confirmButtonText": "Okay",
                "fields": [
                  {
                    "type": "checkbox",
                    "label": "Remove this player from their seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "condition": "${leaveSeat}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "color",
            "value": null
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "player",
            "value": ""
          }
        ],
        "elseRoutine": [
          "var updatePlayerandColor = false",
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "condition": "${name}",
            "elseRoutine": [
              "var updatePlayerandColor = false"
            ]
          },
          {
            "func": "IF",
            "condition": "${updatePlayerandColor}",
            "thenRoutine": [
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "color",
                "value": "${color}"
              },
              "var result = push ${color}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "player",
                "value": "${name}"
              },
              "var result = push ${name}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "mainColor",
                "value": "${result.0}"
              },
              "var newText = colorContrast ${PROPERTY mainColor}",
              "var newGlow = colorContrast ${PROPERTY mainColor} 0.3",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "textColor",
                "value": "${newText}"
              },
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "glowColor",
                "value": "${newGlow}"
              },
              {
                "func": "CALL",
                "routine": "markerColorRoutine"
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "mainColor",
            "value": "#dddddd"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "textColor",
            "value": "#000000"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "glowColor",
            "value": null
          },
          {
            "func": "CALL",
            "routine": "markerColorRoutine"
          }
        ],
        "elseRoutine": []
      }
    ],
    "index": 3
  },
  "seat4": {
    "type": "seat",
    "id": "seat4",
    "x": 821,
    "y": 622,
    "width": 172,
    "height": 48,
    "borderRadius": 8,
    "css": {
      "default": {
        "cursor": "pointer",
        "gap": "5px",
        "font-size": "21px",
        "box-shadow": "0 2px 5px #00000066",
        "text-shadow": "${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, ${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}",
        "background": "${PROPERTY mainColor}",
        "color": "white",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY outlineColor}",
        "box-sizing": "border-box"
      },
      ".seated.turn": {
        "box-shadow": "0px 0px 20px 5px ${PROPERTY glowColor}"
      },
      ".seated.turn::after": {
        "xcontent": "'Active Player'",
        "content": "'!'",
        "font-size": "18px",
        "line-height": "1em",
        "white-space": "wrap",
        "background-color": "${PROPERTY outlineColor}",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY mainColor}",
        "background-size": "200% auto",
        "color": "${PROPERTY mainColor}",
        "text-shadow": "0 1px 5px #000000cc",
        "width": "1em",
        "height": "1em",
        "text-align": "center",
        "text-transform": "uppercase",
        "position": "absolute",
        "right": "-12px",
        "top": "-12px",
        "padding": "2px",
        "border-radius": "100px",
        "box-shadow": "0 0 5px #000000bb",
        "pointer-events": "none"
      }
    },
    "hand": "hand4",
    "hideWhenUnused": true,
    "colorArray": [
      "#000000",
      "#dddddd",
      "#f44336",
      "#f06292",
      "#9c27b0",
      "#3f51b5",
      "#1976d2",
      "#00bcd4",
      "#009688",
      "#4caf50",
      "#8bc34a",
      "#cddc39",
      "#ffeb3b",
      "#ffc107",
      "#ff9800",
      "#bf360c",
      "#795548",
      "#607d8b"
    ],
    "colorContrast": "#000000",
    "mainColor": "#dddddd",
    "outlineColor": "#000000bb",
    "score": [],
    "textColor": "#000000",
    "textShadowBlur": 2,
    "textShadowDistance": 2,
    "clickRoutine": [
      {
        "func": "CALL",
        "routine": "useSeatRoutine"
      },
      "var playerColor = ${result.0}",
      "var playerName = ${result.1}"
    ],
    "colorChangeRoutine": [
      {
        "func": "SET",
        "collection": [
          "marker${PROPERTY index}"
        ],
        "property": "color",
        "value": "${PROPERTY color}"
      }
    ],
    "markerColorRoutine": [
      "// Sets the colors on the markers and climbers",
      "var markerContrast = ${PROPERTY mainColor} colorContrast 0.15",
      {
        "func": "SELECT",
        "property": "parent",
        "value": "climberHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor1",
        "value": "${PROPERTY mainColor}"
      },
      {
        "func": "SET",
        "property": "bgColor2",
        "value": "${markerContrast}"
      },
      {
        "func": "SELECT",
        "property": "parent",
        "value": "markerHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor",
        "value": "${PROPERTY mainColor}"
      }
    ],
    "useSeatRoutine": [
      "// Customized seat color and options routine",
      "var leaveSeat = false",
      "var name = ${PROPERTY player}",
      "var color = ${PROPERTY color}",
      "var result = []",
      "var colorArray = ${PROPERTY colorArray}",
      "var colorList = ${colorArray} indexOf ${playerColor}",
      {
        "func": "IF",
        "operand1": "${colorList}",
        "relation": ">",
        "operand2": "-1",
        "elseRoutine": [
          "var playerColor = ${colorArray.0}"
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "INPUT",
            "header": "Enter your name and choice of player color.",
            "fields": [
              {
                "type": "string",
                "label": "Your Name:",
                "variable": "name",
                "value": "${playerName}"
              },
              {
                "type": "palette",
                "label": "Your Color:",
                "colors": "${PROPERTY colorArray}",
                "variable": "color",
                "value": "${playerColor}"
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              {
                "func": "INPUT",
                "header": "Enter your name and choice of player color.",
                "fields": [
                  {
                    "type": "string",
                    "label": "Your Name:",
                    "variable": "name",
                    "value": "${playerName}"
                  },
                  {
                    "type": "palette",
                    "label": "Your Color:",
                    "colors": "${PROPERTY colorArray}",
                    "variable": "color",
                    "value": "${playerColor}"
                  },
                  {
                    "type": "subtitle",
                    "text": "All done?",
                    "css": "background-color: var(--VTTblue);color:white;"
                  },
                  {
                    "type": "checkbox",
                    "label": "Stand up from seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ],
            "elseRoutine": [
              {
                "func": "INPUT",
                "header": "Are you sure you want to remove ${PROPERTY player} from this seat?",
                "cancelButtonText": "Cancel",
                "confirmButtonText": "Okay",
                "fields": [
                  {
                    "type": "checkbox",
                    "label": "Remove this player from their seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "condition": "${leaveSeat}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "color",
            "value": null
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "player",
            "value": ""
          }
        ],
        "elseRoutine": [
          "var updatePlayerandColor = false",
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "condition": "${name}",
            "elseRoutine": [
              "var updatePlayerandColor = false"
            ]
          },
          {
            "func": "IF",
            "condition": "${updatePlayerandColor}",
            "thenRoutine": [
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "color",
                "value": "${color}"
              },
              "var result = push ${color}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "player",
                "value": "${name}"
              },
              "var result = push ${name}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "mainColor",
                "value": "${result.0}"
              },
              "var newText = colorContrast ${PROPERTY mainColor}",
              "var newGlow = colorContrast ${PROPERTY mainColor} 0.3",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "textColor",
                "value": "${newText}"
              },
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "glowColor",
                "value": "${newGlow}"
              },
              {
                "func": "CALL",
                "routine": "markerColorRoutine"
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "mainColor",
            "value": "#dddddd"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "textColor",
            "value": "#000000"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "glowColor",
            "value": null
          },
          {
            "func": "CALL",
            "routine": "markerColorRoutine"
          }
        ],
        "elseRoutine": []
      }
    ],
    "index": 4
  },
  "seat5": {
    "type": "seat",
    "id": "seat5",
    "x": 1042,
    "y": 622,
    "width": 172,
    "height": 48,
    "borderRadius": 8,
    "css": {
      "default": {
        "cursor": "pointer",
        "gap": "5px",
        "font-size": "21px",
        "box-shadow": "0 2px 5px #00000066",
        "text-shadow": "${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, ${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}",
        "background": "${PROPERTY mainColor}",
        "color": "white",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY outlineColor}",
        "box-sizing": "border-box"
      },
      ".seated.turn": {
        "box-shadow": "0px 0px 20px 5px ${PROPERTY glowColor}"
      },
      ".seated.turn::after": {
        "xcontent": "'Active Player'",
        "content": "'!'",
        "font-size": "18px",
        "line-height": "1em",
        "white-space": "wrap",
        "background-color": "${PROPERTY outlineColor}",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY mainColor}",
        "background-size": "200% auto",
        "color": "${PROPERTY mainColor}",
        "text-shadow": "0 1px 5px #000000cc",
        "width": "1em",
        "height": "1em",
        "text-align": "center",
        "text-transform": "uppercase",
        "position": "absolute",
        "right": "-12px",
        "top": "-12px",
        "padding": "2px",
        "border-radius": "100px",
        "box-shadow": "0 0 5px #000000bb",
        "pointer-events": "none"
      }
    },
    "hand": "hand5",
    "hideWhenUnused": true,
    "colorArray": [
      "#000000",
      "#dddddd",
      "#f44336",
      "#f06292",
      "#9c27b0",
      "#3f51b5",
      "#1976d2",
      "#00bcd4",
      "#009688",
      "#4caf50",
      "#8bc34a",
      "#cddc39",
      "#ffeb3b",
      "#ffc107",
      "#ff9800",
      "#bf360c",
      "#795548",
      "#607d8b"
    ],
    "colorContrast": "#000000",
    "mainColor": "#dddddd",
    "outlineColor": "#000000bb",
    "score": [],
    "textColor": "#000000",
    "textShadowBlur": 2,
    "textShadowDistance": 2,
    "clickRoutine": [
      {
        "func": "CALL",
        "routine": "useSeatRoutine"
      },
      "var playerColor = ${result.0}",
      "var playerName = ${result.1}"
    ],
    "colorChangeRoutine": [
      {
        "func": "SET",
        "collection": [
          "marker${PROPERTY index}"
        ],
        "property": "color",
        "value": "${PROPERTY color}"
      }
    ],
    "markerColorRoutine": [
      "// Sets the colors on the markers and climbers",
      "var markerContrast = ${PROPERTY mainColor} colorContrast 0.15",
      {
        "func": "SELECT",
        "property": "parent",
        "value": "climberHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor1",
        "value": "${PROPERTY mainColor}"
      },
      {
        "func": "SET",
        "property": "bgColor2",
        "value": "${markerContrast}"
      },
      {
        "func": "SELECT",
        "property": "parent",
        "value": "markerHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor",
        "value": "${PROPERTY mainColor}"
      }
    ],
    "useSeatRoutine": [
      "// Customized seat color and options routine",
      "var leaveSeat = false",
      "var name = ${PROPERTY player}",
      "var color = ${PROPERTY color}",
      "var result = []",
      "var colorArray = ${PROPERTY colorArray}",
      "var colorList = ${colorArray} indexOf ${playerColor}",
      {
        "func": "IF",
        "operand1": "${colorList}",
        "relation": ">",
        "operand2": "-1",
        "elseRoutine": [
          "var playerColor = ${colorArray.0}"
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "INPUT",
            "header": "Enter your name and choice of player color.",
            "fields": [
              {
                "type": "string",
                "label": "Your Name:",
                "variable": "name",
                "value": "${playerName}"
              },
              {
                "type": "palette",
                "label": "Your Color:",
                "colors": "${PROPERTY colorArray}",
                "variable": "color",
                "value": "${playerColor}"
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              {
                "func": "INPUT",
                "header": "Enter your name and choice of player color.",
                "fields": [
                  {
                    "type": "string",
                    "label": "Your Name:",
                    "variable": "name",
                    "value": "${playerName}"
                  },
                  {
                    "type": "palette",
                    "label": "Your Color:",
                    "colors": "${PROPERTY colorArray}",
                    "variable": "color",
                    "value": "${playerColor}"
                  },
                  {
                    "type": "subtitle",
                    "text": "All done?",
                    "css": "background-color: var(--VTTblue);color:white;"
                  },
                  {
                    "type": "checkbox",
                    "label": "Stand up from seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ],
            "elseRoutine": [
              {
                "func": "INPUT",
                "header": "Are you sure you want to remove ${PROPERTY player} from this seat?",
                "cancelButtonText": "Cancel",
                "confirmButtonText": "Okay",
                "fields": [
                  {
                    "type": "checkbox",
                    "label": "Remove this player from their seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "condition": "${leaveSeat}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "color",
            "value": null
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "player",
            "value": ""
          }
        ],
        "elseRoutine": [
          "var updatePlayerandColor = false",
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "condition": "${name}",
            "elseRoutine": [
              "var updatePlayerandColor = false"
            ]
          },
          {
            "func": "IF",
            "condition": "${updatePlayerandColor}",
            "thenRoutine": [
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "color",
                "value": "${color}"
              },
              "var result = push ${color}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "player",
                "value": "${name}"
              },
              "var result = push ${name}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "mainColor",
                "value": "${result.0}"
              },
              "var newText = colorContrast ${PROPERTY mainColor}",
              "var newGlow = colorContrast ${PROPERTY mainColor} 0.3",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "textColor",
                "value": "${newText}"
              },
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "glowColor",
                "value": "${newGlow}"
              },
              {
                "func": "CALL",
                "routine": "markerColorRoutine"
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "mainColor",
            "value": "#dddddd"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "textColor",
            "value": "#000000"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "glowColor",
            "value": null
          },
          {
            "func": "CALL",
            "routine": "markerColorRoutine"
          }
        ],
        "elseRoutine": []
      }
    ],
    "index": 5
  },
  "seat6": {
    "type": "seat",
    "id": "seat6",
    "x": 1263,
    "y": 622,
    "width": 172,
    "height": 48,
    "borderRadius": 8,
    "css": {
      "default": {
        "cursor": "pointer",
        "gap": "5px",
        "font-size": "21px",
        "box-shadow": "0 2px 5px #00000066",
        "text-shadow": "${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, ${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}",
        "background": "${PROPERTY mainColor}",
        "color": "white",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY outlineColor}",
        "box-sizing": "border-box"
      },
      ".seated.turn": {
        "box-shadow": "0px 0px 20px 5px ${PROPERTY glowColor}"
      },
      ".seated.turn::after": {
        "xcontent": "'Active Player'",
        "content": "'!'",
        "font-size": "18px",
        "line-height": "1em",
        "white-space": "wrap",
        "background-color": "${PROPERTY outlineColor}",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY mainColor}",
        "background-size": "200% auto",
        "color": "${PROPERTY mainColor}",
        "text-shadow": "0 1px 5px #000000cc",
        "width": "1em",
        "height": "1em",
        "text-align": "center",
        "text-transform": "uppercase",
        "position": "absolute",
        "right": "-12px",
        "top": "-12px",
        "padding": "2px",
        "border-radius": "100px",
        "box-shadow": "0 0 5px #000000bb",
        "pointer-events": "none"
      }
    },
    "hand": "hand6",
    "hideWhenUnused": true,
    "colorArray": [
      "#000000",
      "#dddddd",
      "#f44336",
      "#f06292",
      "#9c27b0",
      "#3f51b5",
      "#1976d2",
      "#00bcd4",
      "#009688",
      "#4caf50",
      "#8bc34a",
      "#cddc39",
      "#ffeb3b",
      "#ffc107",
      "#ff9800",
      "#bf360c",
      "#795548",
      "#607d8b"
    ],
    "colorContrast": "#000000",
    "mainColor": "#dddddd",
    "outlineColor": "#000000bb",
    "score": [],
    "textColor": "#000000",
    "textShadowBlur": 2,
    "textShadowDistance": 2,
    "clickRoutine": [
      {
        "func": "CALL",
        "routine": "useSeatRoutine"
      },
      "var playerColor = ${result.0}",
      "var playerName = ${result.1}"
    ],
    "colorChangeRoutine": [
      {
        "func": "SET",
        "collection": [
          "marker${PROPERTY index}"
        ],
        "property": "color",
        "value": "${PROPERTY color}"
      }
    ],
    "markerColorRoutine": [
      "// Sets the colors on the markers and climbers",
      "var markerContrast = ${PROPERTY mainColor} colorContrast 0.15",
      {
        "func": "SELECT",
        "property": "parent",
        "value": "climberHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor1",
        "value": "${PROPERTY mainColor}"
      },
      {
        "func": "SET",
        "property": "bgColor2",
        "value": "${markerContrast}"
      },
      {
        "func": "SELECT",
        "property": "parent",
        "value": "markerHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor",
        "value": "${PROPERTY mainColor}"
      }
    ],
    "useSeatRoutine": [
      "// Customized seat color and options routine",
      "var leaveSeat = false",
      "var name = ${PROPERTY player}",
      "var color = ${PROPERTY color}",
      "var result = []",
      "var colorArray = ${PROPERTY colorArray}",
      "var colorList = ${colorArray} indexOf ${playerColor}",
      {
        "func": "IF",
        "operand1": "${colorList}",
        "relation": ">",
        "operand2": "-1",
        "elseRoutine": [
          "var playerColor = ${colorArray.0}"
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "INPUT",
            "header": "Enter your name and choice of player color.",
            "fields": [
              {
                "type": "string",
                "label": "Your Name:",
                "variable": "name",
                "value": "${playerName}"
              },
              {
                "type": "palette",
                "label": "Your Color:",
                "colors": "${PROPERTY colorArray}",
                "variable": "color",
                "value": "${playerColor}"
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              {
                "func": "INPUT",
                "header": "Enter your name and choice of player color.",
                "fields": [
                  {
                    "type": "string",
                    "label": "Your Name:",
                    "variable": "name",
                    "value": "${playerName}"
                  },
                  {
                    "type": "palette",
                    "label": "Your Color:",
                    "colors": "${PROPERTY colorArray}",
                    "variable": "color",
                    "value": "${playerColor}"
                  },
                  {
                    "type": "subtitle",
                    "text": "All done?",
                    "css": "background-color: var(--VTTblue);color:white;"
                  },
                  {
                    "type": "checkbox",
                    "label": "Stand up from seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ],
            "elseRoutine": [
              {
                "func": "INPUT",
                "header": "Are you sure you want to remove ${PROPERTY player} from this seat?",
                "cancelButtonText": "Cancel",
                "confirmButtonText": "Okay",
                "fields": [
                  {
                    "type": "checkbox",
                    "label": "Remove this player from their seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "condition": "${leaveSeat}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "color",
            "value": null
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "player",
            "value": ""
          }
        ],
        "elseRoutine": [
          "var updatePlayerandColor = false",
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "condition": "${name}",
            "elseRoutine": [
              "var updatePlayerandColor = false"
            ]
          },
          {
            "func": "IF",
            "condition": "${updatePlayerandColor}",
            "thenRoutine": [
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "color",
                "value": "${color}"
              },
              "var result = push ${color}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "player",
                "value": "${name}"
              },
              "var result = push ${name}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "mainColor",
                "value": "${result.0}"
              },
              "var newText = colorContrast ${PROPERTY mainColor}",
              "var newGlow = colorContrast ${PROPERTY mainColor} 0.3",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "textColor",
                "value": "${newText}"
              },
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "glowColor",
                "value": "${newGlow}"
              },
              {
                "func": "CALL",
                "routine": "markerColorRoutine"
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "mainColor",
            "value": "#dddddd"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "textColor",
            "value": "#000000"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "glowColor",
            "value": null
          },
          {
            "func": "CALL",
            "routine": "markerColorRoutine"
          }
        ],
        "elseRoutine": []
      }
    ],
    "index": 6
  },
  "boat1": {
    "type": "label",
    "id": "boat1",
    "height": 50,
    "z": 1,
    "css": {
      "font-size": "30px",
      "border": "4px ${PROPERTY bgStyle}",
      "line-height": "1.7em",
      "background": "white"
    },
    "borderRadius": 8,
    "y": 533,
    "x": 195,
    "boat": 1,
    "linkedToSeat": "seat1",
    "bgStyle": "solid black",
    "editable": true,
    "onlyVisibleForSeat": "seat1"
  },
  "boat2": {
    "inheritFrom": {
      "boat1": "!text"
    },
    "type": "label",
    "id": "boat2",
    "x": 420,
    "boat": 2,
    "linkedToSeat": "seat2",
    "bgStyle": "solid black",
    "onlyVisibleForSeat": "seat2"
  },
  "boat3": {
    "inheritFrom": {
      "boat1": "!text"
    },
    "type": "label",
    "id": "boat3",
    "x": 644,
    "boat": 3,
    "linkedToSeat": "seat3",
    "bgStyle": "solid black",
    "onlyVisibleForSeat": "seat3"
  },
  "boat4": {
    "inheritFrom": {
      "boat1": "!text"
    },
    "type": "label",
    "id": "boat4",
    "x": 860,
    "boat": 4,
    "linkedToSeat": "seat4",
    "bgStyle": "solid black",
    "onlyVisibleForSeat": "seat4"
  },
  "boat5": {
    "inheritFrom": {
      "boat1": "!text"
    },
    "type": "label",
    "id": "boat5",
    "x": 1084,
    "boat": 5,
    "linkedToSeat": "seat5",
    "bgStyle": "solid black",
    "onlyVisibleForSeat": "seat5"
  },
  "crate": {
    "type": "label",
    "id": "crate",
    "x": 720,
    "y": 117,
    "height": 110,
    "borderRadius": 15,
    "z": 1,
    "css": {
      "font-size": "70px",
      "border": "8px solid #316837",
      "line-height": "1.5em",
      "background": "#a1c26c",
      "color": "#6f4f28"
    },
    "width": 150
  },
  "evaluateButton": {
    "type": "button",
    "id": "evaluateButton",
    "x": 1207,
    "y": 883,
    "z": 1,
    "text": "scoreboard",
    "clickRoutine": [
      {
        "func": "SELECT",
        "property": "boat",
        "relation": "!=",
        "value": null,
        "collection": "boats"
      },
      {
        "func": "SELECT",
        "source": "boats",
        "property": "text",
        "relation": "!=",
        "value": "",
        "collection": "boats"
      },
      {
        "func": "GET",
        "collection": "boats",
        "aggregation": "array",
        "property": "text",
        "variable": "stock"
      },
      "var prize = ${PROPERTY text OF crate}",
      "var stockSort = numericSort ${stock}",
      "var stockSort = reverse ${stockSort}",
      "var maxBid = ${stockSort.0}",
      {
        "func": "SELECT",
        "source": "boats",
        "property": "bgStyle",
        "value": "dashed lightgreen",
        "collection": "maxBidBoats"
      },
      {
        "func": "COUNT",
        "collection": "maxBidBoats",
        "variable": "maxBidCount"
      },
      {
        "func": "IF",
        "operand1": "${maxBidCount}",
        "relation": ">",
        "operand2": 1,
        "thenRoutine": [
          "// If more then one player bid an equal value for the highest bid, they each share the amount of the bananas in the crate, rounded down.",
          {
            "func": "CALL",
            "routine": "splitMaxRoutine"
          }
        ],
        "elseRoutine": [
          "// Otherwise, calculate which player gets the bananas in the crate and the bonus to be paid.",
          {
            "func": "CALL",
            "routine": "differenceRoutine"
          }
        ]
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "scale",
        "value": 0
      },
      {
        "func": "SET",
        "collection": [
          "startAuctionButton"
        ],
        "property": "scale",
        "value": 1
      }
    ],
    "differenceRoutine": [
      "var endRound = false",
      {
        "func": "FOREACH",
        "in": "${stockSort}",
        "loopRoutine": [
          {
            "func": "IF",
            "condition": "${endRound}",
            "elseRoutine": [
              "// If the payout has not already been calculated as part of the loop, then do the calculations.",
              {
                "func": "SELECT",
                "source": "boats",
                "property": "text",
                "value": "${value}",
                "collection": "thisBoat"
              },
              {
                "func": "GET",
                "collection": "thisBoat",
                "property": "boat"
              },
              "var storageID = 'storage' + ${boat}",
              "var newStock = ${PROPERTY text OF $storageID} + ${prize}",
              "var nextKey = ${key} + 1",
              "var nextBid = ${stockSort.$nextKey}",
              "var bonus = ${value} - ${nextBid}",
              {
                "func": "IF",
                "condition": "${nextBid}",
                "elseRoutine": [
                  "// If all other players have been removed because they cannot pay the bonus, then the last player gets all the bananas in the crate without paying a bonus.",
                  {
                    "func": "SET",
                    "collection": [
                      "${storageID}"
                    ],
                    "property": "text",
                    "relation": "+",
                    "value": "${prize}"
                  }
                ],
                "thenRoutine": [
                  "// Otherwise, check if the player can pay the bonus",
                  {
                    "func": "IF",
                    "operand1": "${newStock}",
                    "relation": ">=",
                    "operand2": "${bonus}",
                    "thenRoutine": [
                      "// Check to see if more than one player has bid the same second lowest bid",
                      {
                        "func": "SELECT",
                        "source": "boats",
                        "property": "text",
                        "value": "${nextBid}",
                        "collection": "nextBidBoats"
                      },
                      {
                        "func": "COUNT",
                        "collection": "nextBidBoats",
                        "variable": "nextBidCount"
                      },
                      {
                        "func": "IF",
                        "operand1": "${nextBidCount}",
                        "relation": ">",
                        "operand2": 1,
                        "thenRoutine": [
                          "// If there is a tie, the players share the bonus.",
                          {
                            "func": "CALL",
                            "routine": "splitBonusRoutine"
                          }
                        ],
                        "elseRoutine": [
                          "// If there is not a tie, pay the bonus from the winning bidder to the next highest bidder.",
                          {
                            "func": "SET",
                            "collection": [
                              "${storageID}"
                            ],
                            "property": "text",
                            "relation": "-",
                            "value": "${bonus}"
                          },
                          {
                            "func": "SET",
                            "collection": [
                              "${storageID}"
                            ],
                            "property": "text",
                            "relation": "+",
                            "value": "${prize}"
                          },
                          {
                            "func": "GET",
                            "collection": [
                              "nextBidBoats"
                            ],
                            "property": "boat"
                          },
                          {
                            "func": "SELECT",
                            "property": "id",
                            "value": "storage${boat}"
                          },
                          {
                            "func": "SET",
                            "property": "text",
                            "relation": "+",
                            "value": "${bonus}"
                          }
                        ]
                      },
                      "// Set the flag so no further payout calculations will be made.",
                      "var endRound = true"
                    ],
                    "elseRoutine": [
                      "// If player cannot pay the bonus, then they are out of consideration. If there are more than 2 players, they also lose all the bananas in storage they have.",
                      {
                        "func": "SELECT",
                        "type": "seat",
                        "property": "player",
                        "relation": "!=",
                        "value": ""
                      },
                      {
                        "func": "COUNT"
                      },
                      {
                        "func": "IF",
                        "operand1": "${COUNT}",
                        "relation": ">",
                        "operand2": 2,
                        "thenRoutine": [
                          {
                            "func": "SET",
                            "collection": [
                              "${storageID}"
                            ],
                            "property": "text",
                            "value": 0
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "splitMaxRoutine": [
      "var payout = ${prize} / ${maxBidCount}",
      "var payout = floor ${payout}",
      {
        "func": "FOREACH",
        "collection": [
          "maxBidBoats"
        ],
        "loopRoutine": [
          {
            "func": "GET",
            "collection": "DEFAULT",
            "property": "boat"
          },
          {
            "func": "SELECT",
            "property": "id",
            "value": "storage${boat}"
          },
          {
            "func": "SET",
            "property": "text",
            "relation": "+",
            "value": "${payout}"
          }
        ]
      },
      {
        "func": "SELECT",
        "source": "boats",
        "property": "bgStyle",
        "value": "dotted red",
        "collection": "overBidBoats"
      },
      {
        "func": "FOREACH",
        "collection": [
          "overBidBoats"
        ],
        "loopRoutine": [
          {
            "func": "GET",
            "collection": "DEFAULT",
            "property": "boat"
          },
          {
            "func": "SELECT",
            "property": "id",
            "value": "storage${boat}"
          },
          {
            "func": "SET",
            "property": "text",
            "value": 0
          }
        ]
      }
    ],
    "splitBonusRoutine": [
      "var sharedBonus = ${bonus} / ${nextBidCount}",
      "var sharedBonus = floor ${sharedBonus}",
      {
        "func": "SET",
        "collection": [
          "${storageID}"
        ],
        "property": "text",
        "relation": "+",
        "value": "${prize}"
      },
      {
        "func": "FOREACH",
        "collection": [
          "nextBidBoats"
        ],
        "loopRoutine": [
          {
            "func": "GET",
            "collection": "DEFAULT",
            "property": "boat"
          },
          {
            "func": "SELECT",
            "property": "id",
            "value": "storage${boat}"
          },
          {
            "func": "SET",
            "property": "text",
            "relation": "+",
            "value": "${sharedBonus}"
          }
        ]
      }
    ],
    "animatePropertyChange": [
      "scale"
    ],
    "css": {
      "default": {
        "--wcFont": "#3c2a15",
        "--wcFontOH": "#6f4f28",
        "--wcMain": "#af905e",
        "--wcMainOH": "#af905e80",
        "--wcBorder": "#6f4f28",
        "--wcBorderOH": "#3c2a15",
        "font-size": "70px"
      },
      ".animate_scale": {
        "transition": "linear 0.75s"
      }
    },
    "classes": "material-icons",
    "scale": 0
  },
  "startAuctionButton": {
    "type": "button",
    "id": "startAuctionButton",
    "x": 311,
    "y": 883,
    "z": 1,
    "text": "play_arrow",
    "clickRoutine": [
      {
        "func": "SELECT",
        "property": "storage",
        "relation": "!=",
        "value": null
      },
      {
        "func": "GET",
        "aggregation": "max",
        "property": "text",
        "variable": "stock"
      },
      {
        "func": "SET",
        "collection": [
          "crate"
        ],
        "property": "text",
        "value": "${stock}"
      },
      {
        "func": "SELECT",
        "property": "boat",
        "relation": "!=",
        "value": null
      },
      {
        "func": "FOREACH",
        "collection": "DEFAULT",
        "loopRoutine": [
          {
            "func": "SET",
            "collection": "DEFAULT",
            "property": "text",
            "value": null
          },
          {
            "func": "SET",
            "collection": "DEFAULT",
            "property": "bgStyle",
            "value": "solid black"
          },
          {
            "func": "GET",
            "collection": "DEFAULT",
            "property": "boat"
          },
          {
            "func": "SET",
            "property": "onlyVisibleForSeat",
            "value": "seat${boat}"
          }
        ]
      },
      {
        "func": "SELECT",
        "property": "storage",
        "relation": "!=",
        "value": null
      },
      {
        "func": "FOREACH",
        "collection": "DEFAULT",
        "loopRoutine": [
          {
            "func": "GET",
            "collection": "DEFAULT",
            "property": "storage"
          },
          {
            "func": "SET",
            "property": "onlyVisibleForSeat",
            "value": "seat${storage}"
          }
        ]
      },
      {
        "func": "FOREACH",
        "range": [
          6
        ],
        "loopRoutine": [
          {
            "func": "SET",
            "collection": [
              "check${value}"
            ],
            "property": "scale",
            "value": 1
          }
        ]
      },
      {
        "func": "SELECT",
        "type": "seat",
        "property": "id",
        "relation": "!=",
        "value": null
      },
      {
        "func": "SET",
        "property": "turn",
        "value": false
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "scale",
        "value": 0
      }
    ],
    "animatePropertyChange": [
      "scale"
    ],
    "css": {
      "default": {
        "--wcFont": "#3c2a15",
        "--wcFontOH": "#6f4f28",
        "--wcMain": "#af905e",
        "--wcMainOH": "#af905e80",
        "--wcBorder": "#6f4f28",
        "--wcBorderOH": "#3c2a15",
        "font-size": "75px"
      },
      ".animate_scale": {
        "transition": "linear 0.75s"
      }
    },
    "classes": "material-icons",
    "scale": 0
  },
  "storage1": {
    "type": "label",
    "id": "storage1",
    "x": 206,
    "y": 704,
    "width": 80,
    "height": 50,
    "borderRadius": 8,
    "z": 1,
    "css": {
      "default": {
        "font-size": "30px",
        "border": "1px solid black",
        "line-height": "1.5em",
        "background": "black",
        "color": "white"
      },
      ".animate_text": {
        "background": "red"
      }
    },
    "storage": 1,
    "animatePropertyChange": [
      "text"
    ],
    "linkedToSeat": "seat1",
    "onlyVisibleForSeat": "seat1"
  },
  "storage2": {
    "inheritFrom": {
      "storage1": "!text"
    },
    "type": "label",
    "id": "storage2",
    "x": 430,
    "storage": 2,
    "linkedToSeat": "seat2",
    "onlyVisibleForSeat": "seat2"
  },
  "storage3": {
    "inheritFrom": {
      "storage1": "!text"
    },
    "type": "label",
    "id": "storage3",
    "x": 654,
    "storage": 3,
    "linkedToSeat": "seat3",
    "onlyVisibleForSeat": "seat3"
  },
  "storage4": {
    "inheritFrom": {
      "storage1": "!text"
    },
    "type": "label",
    "id": "storage4",
    "x": 873,
    "storage": 4,
    "linkedToSeat": "seat4",
    "onlyVisibleForSeat": "seat4"
  },
  "storage5": {
    "inheritFrom": {
      "storage1": "!text"
    },
    "type": "label",
    "id": "storage5",
    "x": 1093,
    "storage": 5,
    "linkedToSeat": "seat5",
    "onlyVisibleForSeat": "seat5"
  },
  "storage6": {
    "inheritFrom": {
      "storage1": "!text"
    },
    "type": "label",
    "id": "storage6",
    "x": 1309,
    "storage": 6,
    "linkedToSeat": "seat6",
    "onlyVisibleForSeat": "seat6"
  },
  "boat6": {
    "inheritFrom": {
      "boat1": "!text"
    },
    "type": "label",
    "id": "boat6",
    "x": 1311,
    "boat": 6,
    "linkedToSeat": "seat6",
    "bgStyle": "solid black",
    "onlyVisibleForSeat": "seat6"
  },
  "resetButton": {
    "type": "button",
    "id": "resetButton",
    "x": 120,
    "y": 134,
    "z": 2,
    "clickRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Resetting game ..."
          },
          {
            "type": "subtitle",
            "text": "This will erase the scores and reset the game. Are you sure?"
          }
        ],
        "confirmButtonText": "Yes"
      },
      {
        "func": "SELECT",
        "property": "boat",
        "relation": "!=",
        "value": null
      },
      {
        "func": "FOREACH",
        "collection": "DEFAULT",
        "loopRoutine": [
          {
            "func": "SET",
            "collection": "DEFAULT",
            "property": "text",
            "value": null
          },
          {
            "func": "SET",
            "collection": "DEFAULT",
            "property": "bgStyle",
            "value": "solid black"
          },
          {
            "func": "GET",
            "collection": "DEFAULT",
            "property": "boat"
          },
          {
            "func": "SET",
            "property": "onlyVisibleForSeat",
            "value": "seat${boat}"
          }
        ]
      },
      {
        "func": "SET",
        "collection": [
          "crate"
        ],
        "property": "text",
        "value": ""
      },
      {
        "func": "SELECT",
        "property": "storage",
        "relation": "!=",
        "value": null
      },
      {
        "func": "FOREACH",
        "collection": "DEFAULT",
        "loopRoutine": [
          {
            "func": "SET",
            "collection": "DEFAULT",
            "property": "text",
            "value": null
          },
          {
            "func": "GET",
            "collection": "DEFAULT",
            "property": "storage"
          },
          {
            "func": "SET",
            "property": "onlyVisibleForSeat",
            "value": "seat${storage}"
          }
        ]
      },
      {
        "func": "SELECT",
        "type": "seat",
        "property": "player",
        "relation": "!=",
        "value": ""
      },
      {
        "func": "FOREACH",
        "collection": "DEFAULT",
        "loopRoutine": [
          {
            "func": "GET",
            "collection": "DEFAULT",
            "property": "index"
          },
          {
            "func": "SET",
            "collection": [
              "storage${index}"
            ],
            "property": "text",
            "value": 10
          }
        ]
      },
      {
        "func": "FOREACH",
        "range": [
          6
        ],
        "loopRoutine": [
          {
            "func": "SET",
            "collection": [
              "check${value}"
            ],
            "property": "scale",
            "value": 1
          }
        ]
      },
      {
        "func": "SELECT",
        "type": "seat",
        "property": "id",
        "relation": "!=",
        "value": null
      },
      {
        "func": "SET",
        "property": "turn",
        "value": false
      },
      {
        "func": "SELECT",
        "type": "seat",
        "property": "player",
        "relation": "!=",
        "value": ""
      },
      {
        "func": "COUNT"
      },
      {
        "func": "IF",
        "operand1": "${COUNT}",
        "relation": ">",
        "operand2": 0,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "startAuctionButton"
            ],
            "property": "scale",
            "value": 1
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "startAuctionButton"
            ],
            "property": "scale",
            "value": 0
          }
        ]
      },
      {
        "func": "SET",
        "collection": [
          "showBidsButton",
          "evaluateButton"
        ],
        "property": "scale",
        "value": 0
      }
    ],
    "text": "restart",
    "css": {
      "default": {
        "font-size": "60px",
        "--wcFont": "#3c2a15",
        "--wcFontOH": "#6f4f28",
        "--wcMain": "transparent",
        "--wcMainOH": "#ffffff40",
        "--wcBorder": "#6f4f28",
        "--wcBorderOH": "#3c2a15"
      },
      "anythinghere, .cursor": {
        "display": "none"
      }
    },
    "parent": "resetButtonBackground",
    "classes": "symbols",
    "width": 72,
    "height": 72
  },
  "bidsLabel": {
    "id": "bidsLabel",
    "x": 39,
    "y": 541,
    "height": 30,
    "z": 2,
    "css": {
      "font-size": "30px"
    },
    "text": "Bids",
    "movable": false
  },
  "stashLabel": {
    "id": "stashLabel",
    "x": 39,
    "y": 710,
    "height": 30,
    "z": 2,
    "movable": false,
    "css": {
      "font-size": "30px"
    },
    "text": "Stash"
  },
  "showBidsButton": {
    "type": "button",
    "id": "showBidsButton",
    "x": 759,
    "y": 883,
    "z": 4,
    "clickRoutine": [
      "// Show boats and storage",
      {
        "func": "SELECT",
        "property": "boat",
        "relation": "!=",
        "value": null
      },
      {
        "func": "SELECT",
        "mode": "add",
        "property": "storage",
        "relation": "!=",
        "value": null
      },
      {
        "func": "SET",
        "property": "onlyVisibleForSeat",
        "value": null
      },
      "// Determine which player(s) will get paid and highlight their boats",
      {
        "func": "SELECT",
        "property": "boat",
        "relation": "!=",
        "value": null,
        "collection": "boats"
      },
      {
        "func": "SELECT",
        "source": "boats",
        "property": "text",
        "relation": "!=",
        "value": "",
        "collection": "boats"
      },
      {
        "func": "GET",
        "collection": "boats",
        "aggregation": "array",
        "property": "text",
        "variable": "stock"
      },
      "var prize = ${PROPERTY text OF crate}",
      "var stockSort = numericSort ${stock}",
      "var stockSort = reverse ${stockSort}",
      "var maxBid = ${stockSort.0}",
      {
        "func": "SELECT",
        "source": "boats",
        "property": "text",
        "value": "${maxBid}",
        "collection": "maxBidBoats"
      },
      {
        "func": "COUNT",
        "collection": "maxBidBoats",
        "variable": "maxBidCount"
      },
      {
        "func": "IF",
        "operand1": "${maxBidCount}",
        "relation": ">",
        "operand2": 1,
        "thenRoutine": [
          "// If more then one player bid an equal value for the highest bid, they each share the amount of the bananas in the crate, rounded down.",
          {
            "func": "CALL",
            "routine": "splitMaxRoutine"
          }
        ],
        "elseRoutine": [
          "// Otherwise, calculate which player gets the bananas in the crate and the bonus to be paid.",
          {
            "func": "CALL",
            "routine": "differenceRoutine"
          }
        ]
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "scale",
        "value": 0
      },
      {
        "func": "SET",
        "collection": [
          "evaluateButton"
        ],
        "property": "scale",
        "value": 1
      }
    ],
    "text": "visibility",
    "differenceRoutine": [
      "var endRound = false",
      {
        "func": "FOREACH",
        "in": "${stockSort}",
        "loopRoutine": [
          {
            "func": "IF",
            "condition": "${endRound}",
            "elseRoutine": [
              "// If the payout has not already been calculated as part of the loop, then do the calculations.",
              {
                "func": "SELECT",
                "source": "boats",
                "property": "text",
                "value": "${value}",
                "collection": "thisBoat"
              },
              {
                "func": "GET",
                "collection": "thisBoat",
                "property": "boat"
              },
              "var storageID = 'storage' + ${boat}",
              "var newStock = ${PROPERTY text OF $storageID} + ${prize}",
              "var nextKey = ${key} + 1",
              "var nextBid = ${stockSort.$nextKey}",
              "var bonus = ${value} - ${nextBid}",
              {
                "func": "IF",
                "condition": "${nextBid}",
                "elseRoutine": [
                  "// If all other players have been removed because they cannot pay the bonus, then the last player gets all the bananas in the crate without paying a bonus.",
                  {
                    "func": "SET",
                    "collection": [
                      "boat${boat}"
                    ],
                    "property": "bgStyle",
                    "value": "solid green"
                  }
                ],
                "thenRoutine": [
                  "// Otherwise, check if the player can pay the bonus",
                  {
                    "func": "IF",
                    "operand1": "${newStock}",
                    "relation": ">=",
                    "operand2": "${bonus}",
                    "thenRoutine": [
                      "// Check to see if more than one player has bid the same second lowest bid",
                      {
                        "func": "SELECT",
                        "source": "boats",
                        "property": "text",
                        "value": "${nextBid}",
                        "collection": "nextBidBoats"
                      },
                      {
                        "func": "COUNT",
                        "collection": "nextBidBoats",
                        "variable": "nextBidCount"
                      },
                      {
                        "func": "IF",
                        "operand1": "${nextBidCount}",
                        "relation": ">",
                        "operand2": 1,
                        "thenRoutine": [
                          "// If there is a tie, the players share the bonus.",
                          {
                            "func": "CALL",
                            "routine": "splitBonusRoutine"
                          }
                        ],
                        "elseRoutine": [
                          "// If there is not a tie, pay the bonus from the winning bidder to the next highest bidder.",
                          {
                            "func": "SET",
                            "collection": [
                              "boat${boat}"
                            ],
                            "property": "bgStyle",
                            "value": "solid green"
                          },
                          {
                            "func": "GET",
                            "collection": [
                              "nextBidBoats"
                            ],
                            "property": "boat",
                            "variable": "nextBidBoat"
                          },
                          {
                            "func": "SET",
                            "collection": [
                              "boat${nextBidBoat}"
                            ],
                            "property": "bgStyle",
                            "value": "dashed lightgreen"
                          }
                        ]
                      },
                      "// Set the flag so no further payout calculations will be made.",
                      "var endRound = true"
                    ],
                    "elseRoutine": [
                      "// If player cannot pay the bonus, then they are out of consideration. If there are more than 2 players, they also lose all the bananas in storage they have.",
                      {
                        "func": "SELECT",
                        "type": "seat",
                        "property": "player",
                        "relation": "!=",
                        "value": ""
                      },
                      {
                        "func": "COUNT"
                      },
                      {
                        "func": "IF",
                        "operand1": "${COUNT}",
                        "relation": ">",
                        "operand2": 2,
                        "thenRoutine": [
                          {
                            "func": "SET",
                            "collection": [
                              "boat${boat}"
                            ],
                            "property": "bgStyle",
                            "value": "dotted red"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "splitBonusRoutine": [
      "var sharedBonus = ${bonus} / ${nextBidCount}",
      "var sharedBonus = floor ${sharedBonus}",
      {
        "func": "SET",
        "collection": [
          "boat${boat}"
        ],
        "property": "bgStyle",
        "value": "solid green"
      },
      {
        "func": "FOREACH",
        "collection": [
          "nextBidBoats"
        ],
        "loopRoutine": [
          {
            "func": "GET",
            "collection": "DEFAULT",
            "property": "boat",
            "variable": "nextBidBoat"
          },
          {
            "func": "SET",
            "collection": [
              "boat${nextBidBoat}"
            ],
            "property": "bgStyle",
            "value": "dashed lightgreen"
          }
        ]
      }
    ],
    "splitMaxRoutine": [
      "var payout = ${prize} / ${maxBidCount}",
      "var payout = floor ${payout}",
      {
        "func": "FOREACH",
        "collection": [
          "maxBidBoats"
        ],
        "loopRoutine": [
          {
            "func": "GET",
            "collection": "DEFAULT",
            "property": "boat",
            "variable": "maxBidBoat"
          },
          {
            "func": "SET",
            "collection": [
              "boat${maxBidBoat}"
            ],
            "property": "bgStyle",
            "value": "solid green"
          }
        ]
      }
    ],
    "animatePropertyChange": [
      "scale"
    ],
    "css": {
      "default": {
        "--wcFont": "#3c2a15",
        "--wcFontOH": "#6f4f28",
        "--wcMain": "#af905e",
        "--wcMainOH": "#af905e80",
        "--wcBorder": "#6f4f28",
        "--wcBorderOH": "#3c2a15",
        "font-size": "70px"
      },
      ".animate_scale": {
        "transition": "linear 0.75s"
      }
    },
    "classes": "material-icons",
    "scale": 0
  },
  "score+10": {
    "type": "button",
    "id": "score+10",
    "parent": "bidButtonBack",
    "fixedParent": true,
    "y": 40,
    "width": 55,
    "height": 28,
    "movableInEdit": false,
    "css": {
      "default": {
        "font-size": "18px",
        "color": "white",
        "background": "green",
        "border-color": "darkgreen"
      },
      ":hover": {
        "border-color": "green",
        "background": "lightgreen",
        "color": "black"
      }
    },
    "text": "+10",
    "clickRoutine": [
      {
        "func": "LABEL",
        "label": "boat${seatIndex}",
        "mode": "${PROPERTY thisSign}",
        "value": "${PROPERTY thisValue}"
      }
    ],
    "thisValue": 10,
    "thisSign": "inc",
    "x": 115
  },
  "score+15": {
    "inheritFrom": {
      "score-1": "*"
    },
    "type": "button",
    "id": "score+15",
    "text": "-10",
    "thisSign": "dec",
    "thisValue": 10,
    "y": 0,
    "x": 115,
    "parent": "bidButtonBack",
    "z": 0
  },
  "score+5": {
    "type": "button",
    "id": "score+5",
    "x": 55,
    "inheritFrom": {
      "score+10": "*"
    },
    "text": "+ 5",
    "thisSign": "inc",
    "thisValue": 5,
    "parent": "bidButtonBack",
    "y": 40,
    "z": 0
  },
  "score+1": {
    "type": "button",
    "id": "score+1",
    "x": -5,
    "inheritFrom": {
      "score+10": "*"
    },
    "text": "+ 1",
    "thisSign": "inc",
    "thisValue": 1,
    "parent": "bidButtonBack",
    "y": 40,
    "z": 0
  },
  "score-1": {
    "type": "button",
    "id": "score-1",
    "x": -5,
    "css": {
      "default": {
        "font-size": "18px",
        "color": "white",
        "background": "red",
        "border-color": "crimson"
      },
      ":hover": {
        "border-color": "red",
        "background": "pink",
        "color": "black"
      }
    },
    "inheritFrom": {
      "score+10": "*"
    },
    "text": "- 1",
    "thisSign": "dec",
    "thisValue": 1,
    "y": 0,
    "parent": "bidButtonBack",
    "z": 0
  },
  "score-5": {
    "type": "button",
    "id": "score-5",
    "x": 55,
    "inheritFrom": {
      "score-1": "*"
    },
    "text": "- 5",
    "thisSign": "dec",
    "thisValue": 5,
    "y": 0,
    "parent": "bidButtonBack",
    "z": 0
  },
  "score+50": {
    "type": "button",
    "id": "score+50",
    "x": 175,
    "inheritFrom": {
      "score+10": "*"
    },
    "text": "+50",
    "thisSign": "inc",
    "thisValue": 50,
    "parent": "bidButtonBack",
    "y": 40,
    "z": 0
  },
  "score+100": {
    "type": "button",
    "id": "score+100",
    "x": 235,
    "inheritFrom": {
      "score+10": "*"
    },
    "text": "+ 100",
    "thisSign": "inc",
    "thisValue": 100,
    "parent": "bidButtonBack",
    "y": 40,
    "z": 0
  },
  "score-50": {
    "type": "button",
    "id": "score-50",
    "x": 175,
    "y": 0,
    "inheritFrom": {
      "score-1": "*"
    },
    "text": "- 50",
    "thisSign": "dec",
    "thisValue": 50,
    "parent": "bidButtonBack",
    "z": 0
  },
  "score-100": {
    "type": "button",
    "id": "score-100",
    "x": 235,
    "y": 0,
    "inheritFrom": {
      "score-1": "*"
    },
    "text": "- 100",
    "thisSign": "dec",
    "thisValue": 100,
    "parent": "bidButtonBack",
    "z": 0
  },
  "bidButtonBack": {
    "id": "bidButtonBack",
    "x": 546,
    "y": 391,
    "width": 295,
    "height": 68,
    "layer": -3,
    "movable": false,
    "editorGroup": true,
    "scale": 1.25
  },
  "check1": {
    "type": "button",
    "id": "check1",
    "parent": "boat1",
    "fixedParent": true,
    "x": 109,
    "y": 10,
    "width": 35,
    "height": 35,
    "z": 5,
    "classes": "symbols",
    "css": {
      "default": {
        "font-size": "30px",
        "color": "white",
        "background": "green",
        "border-color": "darkgreen"
      },
      ":hover": {
        "border-color": "green",
        "background": "lightgreen",
        "color": "black"
      }
    },
    "text": "check",
    "clickRoutine": [
      {
        "func": "SET",
        "collection": [
          "seat${seatIndex}"
        ],
        "property": "turn",
        "value": "true"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "scale",
        "value": 0
      },
      {
        "func": "SELECT",
        "type": "seat",
        "property": "player",
        "relation": "!=",
        "value": ""
      },
      {
        "func": "COUNT",
        "variable": "seats"
      },
      {
        "func": "SELECT",
        "type": "seat",
        "property": "turn",
        "value": "true"
      },
      {
        "func": "COUNT",
        "variable": "ready"
      },
      {
        "func": "IF",
        "operand1": "${seats}",
        "operand2": "${ready}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "showBidsButton"
            ],
            "property": "scale",
            "value": 1
          }
        ]
      }
    ]
  },
  "check2": {
    "inheritFrom": {
      "check1": "*"
    },
    "type": "button",
    "id": "check2",
    "x": 109,
    "y": 10,
    "parent": "boat2",
    "scale": 1
  },
  "check3": {
    "inheritFrom": {
      "check1": "*"
    },
    "type": "button",
    "id": "check3",
    "x": 109,
    "y": 10,
    "parent": "boat3",
    "scale": 1
  },
  "check4": {
    "inheritFrom": {
      "check1": "*"
    },
    "type": "button",
    "id": "check4",
    "x": 109,
    "y": 10,
    "parent": "boat4",
    "scale": 1
  },
  "check5": {
    "inheritFrom": {
      "check1": "*"
    },
    "type": "button",
    "id": "check5",
    "x": 109,
    "y": 10,
    "parent": "boat5",
    "scale": 1
  },
  "check6": {
    "inheritFrom": {
      "check1": "*"
    },
    "type": "button",
    "id": "check6",
    "x": 109,
    "y": 10,
    "parent": "boat6",
    "scale": 1
  },
  "score-250": {
    "type": "button",
    "id": "score-250",
    "x": 295,
    "y": 0,
    "inheritFrom": {
      "score-1": "*"
    },
    "text": "- 250",
    "thisSign": "dec",
    "thisValue": 250
  },
  "score-500": {
    "type": "button",
    "id": "score-500",
    "x": 355,
    "y": 0,
    "inheritFrom": {
      "score-1": "*"
    },
    "text": "- 500",
    "thisSign": "dec",
    "thisValue": 500
  },
  "score-1000": {
    "type": "button",
    "id": "score-1000",
    "x": 415,
    "y": 0,
    "width": 65,
    "inheritFrom": {
      "score-1": "*"
    },
    "text": "- 1000",
    "thisSign": "dec",
    "thisValue": 1000
  },
  "score+250": {
    "type": "button",
    "id": "score+250",
    "parent": "bidButtonBack",
    "x": 295,
    "y": 40,
    "z": 0,
    "inheritFrom": {
      "score+10": "*"
    },
    "text": "+ 250",
    "thisSign": "inc",
    "thisValue": 250
  },
  "score+500": {
    "type": "button",
    "id": "score+500",
    "parent": "bidButtonBack",
    "x": 355,
    "y": 40,
    "z": 0,
    "inheritFrom": {
      "score+10": "*"
    },
    "text": "+ 500",
    "thisSign": "inc",
    "thisValue": 500
  },
  "score+1000": {
    "type": "button",
    "id": "score+1000",
    "parent": "bidButtonBack",
    "x": 415,
    "y": 40,
    "z": 0,
    "inheritFrom": {
      "score+10": "*"
    },
    "text": "+ 1000",
    "thisSign": "inc",
    "thisValue": 1000,
    "width": 65
  },
  "backgroundAvocado": {
    "id": "backgroundAvocado",
    "width": 2720,
    "layer": -4,
    "movable": false,
    "css": {
      "opacity": 0.05
    },
    "image": "/assets/623154753_148698",
    "x": -550,
    "height": 1700,
    "y": -250
  },
  "backgroundCover": {
    "id": "backgroundCover",
    "width": 1600,
    "height": 1000,
    "layer": -4,
    "movable": false,
    "css": {
      "background": "#00000020"
    }
  },
  "resetButtonBackground": {
    "id": "resetButtonBackground",
    "x": 1330,
    "width": 300,
    "height": 300,
    "image": "/assets/-896811449_6551",
    "y": -5,
    "z": 3,
    "movable": false
  }
}