{
  "sheetBack1": {
    "id": "sheetBack1",
    "height": 622,
    "css": {
      "border": "2px solid darkgreen",
      "background": "#d6d9ba"
    },
    "y": 226,
    "x": 302,
    "borderRadius": 10,
    "z": 19,
    "width": 1000,
    "movable": false,
    "onlyVisibleForSeat": "seat1",
    "layer": -1,
    "hidePlayerCursors": true
  },
  "seat1": {
    "type": "seat",
    "id": "seat1",
    "x": 343,
    "y": 11,
    "width": 172,
    "height": 48,
    "borderRadius": 8,
    "css": {
      "default": {
        "cursor": "pointer",
        "gap": "5px",
        "font-size": "21px",
        "box-shadow": "0 2px 5px #00000066",
        "text-shadow": "${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, ${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}",
        "background": "${PROPERTY mainColor}",
        "color": "white",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY outlineColor}",
        "box-sizing": "border-box"
      },
      ".seated.turn": {
        "box-shadow": "0px 0px 20px 5px ${PROPERTY glowColor}"
      },
      ".seated.turn::after": {
        "xcontent": "'Active Player'",
        "content": "'!'",
        "font-size": "18px",
        "line-height": "1em",
        "white-space": "wrap",
        "background-color": "${PROPERTY outlineColor}",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY mainColor}",
        "background-size": "200% auto",
        "color": "${PROPERTY mainColor}",
        "text-shadow": "0 1px 5px #000000cc",
        "width": "1em",
        "height": "1em",
        "text-align": "center",
        "text-transform": "uppercase",
        "position": "absolute",
        "right": "-12px",
        "top": "-12px",
        "padding": "2px",
        "border-radius": "100px",
        "box-shadow": "0 0 5px #000000bb",
        "pointer-events": "none"
      }
    },
    "hideWhenUnused": true,
    "colorArray": [
      "#000000",
      "#dddddd",
      "#f44336",
      "#f06292",
      "#9c27b0",
      "#3f51b5",
      "#1976d2",
      "#00bcd4",
      "#009688",
      "#4caf50",
      "#8bc34a",
      "#cddc39",
      "#ffeb3b",
      "#ffc107",
      "#ff9800",
      "#bf360c",
      "#795548",
      "#607d8b"
    ],
    "colorContrast": "#000000",
    "mainColor": "#dddddd",
    "outlineColor": "#000000bb",
    "score": [],
    "textColor": "#000000",
    "textShadowBlur": 2,
    "textShadowDistance": 2,
    "clickRoutine": [
      {
        "func": "CALL",
        "routine": "useSeatRoutine"
      },
      "var playerColor = ${result.0}",
      "var playerName = ${result.1}"
    ],
    "colorChangeRoutine": [
      {
        "func": "SET",
        "collection": [
          "marker${PROPERTY index}"
        ],
        "property": "color",
        "value": "${PROPERTY color}"
      }
    ],
    "useSeatRoutine": [
      "// Customized seat color and options routine",
      "var leaveSeat = false",
      "var name = ${PROPERTY player}",
      "var color = ${PROPERTY color}",
      "var result = []",
      "var colorArray = ${PROPERTY colorArray}",
      "var colorList = ${colorArray} indexOf ${playerColor}",
      {
        "func": "IF",
        "operand1": "${colorList}",
        "relation": ">",
        "operand2": "-1",
        "elseRoutine": [
          "var playerColor = ${colorArray.0}"
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "INPUT",
            "header": "Enter your name and choice of player color.",
            "fields": [
              {
                "type": "string",
                "label": "Your Name:",
                "variable": "name",
                "value": "${playerName}"
              },
              {
                "type": "palette",
                "label": "Your Color:",
                "colors": "${PROPERTY colorArray}",
                "variable": "color",
                "value": "${playerColor}"
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              {
                "func": "INPUT",
                "header": "Enter your name and choice of player color.",
                "fields": [
                  {
                    "type": "string",
                    "label": "Your Name:",
                    "variable": "name",
                    "value": "${playerName}"
                  },
                  {
                    "type": "palette",
                    "label": "Your Color:",
                    "colors": "${PROPERTY colorArray}",
                    "variable": "color",
                    "value": "${playerColor}"
                  },
                  {
                    "type": "subtitle",
                    "text": "All done?",
                    "css": "background-color: var(--VTTblue);color:white;"
                  },
                  {
                    "type": "checkbox",
                    "label": "Stand up from seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ],
            "elseRoutine": [
              {
                "func": "INPUT",
                "header": "Are you sure you want to remove ${PROPERTY player} from this seat?",
                "cancelButtonText": "Cancel",
                "confirmButtonText": "Okay",
                "fields": [
                  {
                    "type": "checkbox",
                    "label": "Remove this player from their seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "condition": "${leaveSeat}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "color",
            "value": null
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "player",
            "value": ""
          }
        ],
        "elseRoutine": [
          "var updatePlayerandColor = false",
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "condition": "${name}",
            "elseRoutine": [
              "var updatePlayerandColor = false"
            ]
          },
          {
            "func": "IF",
            "condition": "${updatePlayerandColor}",
            "thenRoutine": [
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "color",
                "value": "${color}"
              },
              "var result = push ${color}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "player",
                "value": "${name}"
              },
              "var result = push ${name}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "mainColor",
                "value": "${result.0}"
              },
              "var newText = colorContrast ${PROPERTY mainColor}",
              "var newGlow = colorContrast ${PROPERTY mainColor} 0.3",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "textColor",
                "value": "${newText}"
              },
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "glowColor",
                "value": "${newGlow}"
              },
              {
                "func": "CALL",
                "routine": "markerColorRoutine"
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "mainColor",
            "value": "#dddddd"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "textColor",
            "value": "#000000"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "glowColor",
            "value": null
          },
          {
            "func": "CALL",
            "routine": "markerColorRoutine"
          }
        ],
        "elseRoutine": []
      }
    ],
    "hand": "hand1",
    "markerColorRoutine": [
      "// Sets the colors on the markers and climbers",
      "var markerContrast = ${PROPERTY mainColor} colorContrast 0.15",
      {
        "func": "SELECT",
        "property": "parent",
        "value": "climberHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor1",
        "value": "${PROPERTY mainColor}"
      },
      {
        "func": "SET",
        "property": "bgColor2",
        "value": "${markerContrast}"
      },
      {
        "func": "SELECT",
        "property": "parent",
        "value": "markerHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor",
        "value": "${PROPERTY mainColor}"
      }
    ],
    "turn": true
  },
  "name1": {
    "id": "name1",
    "x": 4,
    "y": 250,
    "width": 150,
    "height": 40,
    "borderRadius": 8,
    "css": {
      "default": {
        "font-size": "22px",
        "display": "flex",
        "justify-content": "center",
        "align-items": "center"
      },
      "::after": {
        "content": "\"${PROPERTY player}\""
      }
    },
    "parent": "sheetBack1",
    "fixedParent": true,
    "movable": false,
    "pid": 1,
    "player": ""
  },
  "name2": {
    "id": "name2",
    "x": 4,
    "y": 392,
    "inheritFrom": {
      "name1": "*"
    },
    "scale": 1,
    "hide2": true,
    "player": ""
  },
  "name3": {
    "id": "name3",
    "x": 4,
    "y": 535,
    "inheritFrom": {
      "name1": "*"
    },
    "hide3": true,
    "scale": 1,
    "hide2": true,
    "player": ""
  },
  "reset": {
    "type": "button",
    "id": "reset",
    "x": 1546,
    "y": 4,
    "z": 1,
    "clickRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Resetting the board..."
          },
          {
            "type": "subtitle",
            "text": "This will reset the board. Are you sure?"
          }
        ],
        "confirmButtonText": "Yes"
      },
      {
        "func": "CALL",
        "routine": "resetRoutine"
      }
    ],
    "text": "Reset",
    "width": 50,
    "height": 50,
    "resetRoutine": [
      {
        "func": "RECALL",
        "holder": "numbersDeckHolder"
      },
      {
        "func": "FLIP",
        "holder": "numbersDeckHolder",
        "face": 0
      },
      {
        "func": "SHUFFLE",
        "holder": "numbersDeckHolder"
      },
      {
        "func": "RECALL",
        "holder": "questionsDeckHolder"
      },
      {
        "func": "FLIP",
        "holder": "questionsDeckHolder",
        "face": 0
      },
      {
        "func": "SHUFFLE",
        "holder": "questionsDeckHolder"
      },
      {
        "func": "SELECT",
        "property": "hide2",
        "value": true
      },
      {
        "func": "SELECT",
        "mode": "add",
        "property": "hide3",
        "value": true
      },
      {
        "func": "SELECT",
        "mode": "add",
        "property": "hide4",
        "value": true
      },
      {
        "func": "SET",
        "property": "scale",
        "value": 1
      },
      {
        "func": "SELECT",
        "property": "specialScale",
        "value": true
      },
      {
        "func": "SET",
        "property": "scale",
        "value": 0.6
      },
      {
        "func": "MOVE",
        "from": "questionsDeckHolder",
        "to": "boardQuestionsHolder",
        "fillTo": 6
      },
      {
        "func": "SELECT",
        "type": "seat",
        "property": "player",
        "relation": "!=",
        "value": ""
      },
      {
        "func": "COUNT"
      },
      "var pCount = 'hide' + ${COUNT}",
      {
        "func": "IF",
        "operand1": "${COUNT}",
        "operand2": 4,
        "thenRoutine": [
          {
            "func": "SELECT",
            "property": "${pCount}",
            "value": true
          },
          {
            "func": "SET",
            "property": "scale",
            "value": 0
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${COUNT}",
        "operand2": 3,
        "thenRoutine": [
          {
            "func": "SELECT",
            "property": "${pCount}",
            "value": true
          },
          {
            "func": "SET",
            "property": "scale",
            "value": 0
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${COUNT}",
        "operand2": 2,
        "thenRoutine": [
          {
            "func": "SELECT",
            "property": "${pCount}",
            "value": true
          },
          {
            "func": "SET",
            "property": "scale",
            "value": 0
          }
        ]
      },
      {
        "func": "SELECT",
        "type": "label",
        "property": "id",
        "relation": "!=",
        "value": null
      },
      {
        "func": "SET",
        "property": "text",
        "value": ""
      },
      {
        "func": "SELECT",
        "property": "mark",
        "value": true
      },
      {
        "func": "SET",
        "property": "activeFace",
        "value": 0
      },
      {
        "func": "SELECT",
        "property": "pid",
        "relation": "!=",
        "value": null
      },
      {
        "func": "SET",
        "property": "player",
        "value": ""
      },
      {
        "func": "SET",
        "collection": [
          "answer1",
          "answer2",
          "answer3",
          "answer4"
        ],
        "property": "text",
        "value": ""
      },
      {
        "func": "FOREACH",
        "range": [
          4
        ],
        "loopRoutine": [
          {
            "func": "SELECT",
            "type": "seat",
            "property": "index",
            "relation": "!=",
            "value": "${value}"
          },
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "player",
            "relation": "!=",
            "value": "",
            "collection": "otherSeats"
          },
          {
            "func": "GET",
            "collection": "otherSeats",
            "aggregation": "array",
            "property": "player"
          },
          {
            "func": "SELECT",
            "property": "pid",
            "value": "${value}",
            "sortBy": {
              "key": "id",
              "reverse": false
            },
            "collection": "thisNameLabel"
          },
          "var i = 0",
          {
            "func": "FOREACH",
            "collection": "thisNameLabel",
            "loopRoutine": [
              {
                "func": "SET",
                "collection": "DEFAULT",
                "property": "text",
                "value": "${player.$i}"
              },
              "var i = ${i} + 1"
            ]
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${COUNT}",
        "operand2": 4,
        "thenRoutine": [
          {
            "func": "MOVE",
            "from": "numbersDeckHolder",
            "to": [
              "seat1",
              "seat2",
              "seat3",
              "seat4"
            ],
            "count": 4
          }
        ],
        "elseRoutine": [
          {
            "func": "MOVE",
            "from": "numbersDeckHolder",
            "to": [
              "seat1",
              "seat2",
              "seat3",
              "seat4"
            ],
            "count": 5
          }
        ]
      },
      {
        "func": "FOREACH",
        "in": [
          "hand1",
          "hand2",
          "hand3",
          "hand4"
        ],
        "loopRoutine": [
          {
            "func": "CALL",
            "routine": "enterRoutine",
            "widget": "${value}"
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${COUNT}",
        "relation": ">",
        "operand2": 2,
        "thenRoutine": [
          {
            "func": "MOVE",
            "from": "numbersDeckHolder",
            "to": "boardTiles",
            "count": 6
          }
        ]
      },
      {
        "func": "TURN",
        "turnCycle": "random"
      },
      {
        "func": "SELECT",
        "property": "checkNumber",
        "relation": "!=",
        "value": null
      },
      {
        "func": "SELECT",
        "mode": "add",
        "property": "checkNumber",
        "relation": "!=",
        "value": null
      },
      {
        "func": "SET",
        "property": "color",
        "value": "grey"
      },
      {
        "func": "SET",
        "collection": [
          "correct",
          "incorrect"
        ],
        "property": "text",
        "value": ""
      },
      {
        "func": "SET",
        "collection": [
          "guessGroup"
        ],
        "property": "scale",
        "value": 0
      },
      "// Solo mode resets",
      {
        "func": "SET",
        "collection": [
          "solo"
        ],
        "property": "mode",
        "value": false
      },
      {
        "func": "SET",
        "collection": [
          "answer1"
        ],
        "property": "scale",
        "value": 1
      },
      {
        "func": "FOREACH",
        "in": [
          "seat2",
          "seat3",
          "seat4"
        ],
        "loopRoutine": [
          "var pid = ${key} + 2",
          {
            "func": "SET",
            "collection": [
              "answer${pid}"
            ],
            "property": "onlyVisibleForSeat",
            "value": "${value}"
          },
          {
            "func": "SET",
            "collection": [
              "answer${pid}"
            ],
            "property": "scale",
            "value": 1
          }
        ]
      },
      {
        "func": "SET",
        "collection": [
          "answerTab2",
          "answerTab3",
          "answerTab4"
        ],
        "property": "scale",
        "value": 0
      },
      {
        "func": "SET",
        "collection": [
          "discardHolder"
        ],
        "property": "scale",
        "value": 0
      }
    ],
    "css": {
      "default": {},
      "_, .transition": {
        "transition": "transform 600ms"
      },
      "_, .transition.dragging": {
        "transition": "none"
      }
    }
  },
  "letterLabel1": {
    "id": "letterLabel1",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 203,
    "y": 139,
    "width": 420,
    "height": 50,
    "movable": false,
    "css": {
      "font-size": "50px"
    },
    "text": "A        B       C        D",
    "layer": -2
  },
  "mark1": {
    "type": "card",
    "id": "mark1",
    "parent": "markGroup1",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare"
  },
  "mark2": {
    "type": "card",
    "id": "mark2",
    "parent": "markGroup1",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2
  },
  "mark3": {
    "type": "card",
    "id": "mark3",
    "parent": "markGroup1",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4
  },
  "markGroup1": {
    "id": "markGroup1",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 165,
    "y": 298,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 1
  },
  "markGroup2": {
    "id": "markGroup2",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 289,
    "y": 298,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 2
  },
  "mark4": {
    "type": "card",
    "id": "mark4",
    "parent": "markGroup2",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare"
  },
  "mark5": {
    "type": "card",
    "id": "mark5",
    "parent": "markGroup2",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2
  },
  "mark6": {
    "type": "card",
    "id": "mark6",
    "parent": "markGroup2",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4
  },
  "markGroup3": {
    "id": "markGroup3",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 414,
    "y": 298,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 3
  },
  "mark7": {
    "type": "card",
    "id": "mark7",
    "parent": "markGroup3",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare"
  },
  "mark8": {
    "type": "card",
    "id": "mark8",
    "parent": "markGroup3",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2
  },
  "mark9": {
    "type": "card",
    "id": "mark9",
    "parent": "markGroup3",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4
  },
  "markGroup4": {
    "id": "markGroup4",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 538,
    "y": 298,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 4
  },
  "mark10": {
    "type": "card",
    "id": "mark10",
    "parent": "markGroup4",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare"
  },
  "mark11": {
    "type": "card",
    "id": "mark11",
    "parent": "markGroup4",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2
  },
  "mark12": {
    "type": "card",
    "id": "mark12",
    "parent": "markGroup4",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4
  },
  "markGroup5": {
    "id": "markGroup5",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 663,
    "y": 298,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 8,
    "hide4": true
  },
  "mark13": {
    "type": "card",
    "id": "mark13",
    "parent": "markGroup5",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare"
  },
  "mark14": {
    "type": "card",
    "id": "mark14",
    "parent": "markGroup5",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2
  },
  "mark15": {
    "type": "card",
    "id": "mark15",
    "parent": "markGroup5",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4
  },
  "line1": {
    "id": "line1",
    "parent": "sheetBack1",
    "fixedParent": true,
    "y": 194,
    "width": 0,
    "height": 420,
    "borderRadius": "3px",
    "z": 8,
    "movable": false,
    "css": {
      "border": "2px solid gray"
    },
    "x": 159
  },
  "line2": {
    "id": "line2",
    "y": 194,
    "width": 0,
    "x": 282,
    "height": 420,
    "inheritFrom": {
      "line1": "*"
    }
  },
  "line3": {
    "id": "line3",
    "parent": "sheetBack1",
    "fixedParent": true,
    "y": 194,
    "width": 0,
    "height": 420,
    "x": 406,
    "inheritFrom": {
      "line1": "*"
    }
  },
  "line4": {
    "id": "line4",
    "parent": "sheetBack1",
    "fixedParent": true,
    "y": 194,
    "width": 0,
    "height": 420,
    "x": 530,
    "inheritFrom": {
      "line1": "*"
    }
  },
  "line5": {
    "id": "line5",
    "parent": "sheetBack1",
    "fixedParent": true,
    "y": 194,
    "width": 0,
    "height": 420,
    "x": 654,
    "inheritFrom": {
      "line1": "*"
    }
  },
  "line6": {
    "id": "line6",
    "parent": "sheetBack1",
    "fixedParent": true,
    "y": 194,
    "width": 0,
    "height": 420,
    "x": 777,
    "inheritFrom": {
      "line1": "*"
    }
  },
  "markGroup6": {
    "id": "markGroup6",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 165,
    "y": 441,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 11,
    "hide2": true
  },
  "mark16": {
    "type": "card",
    "id": "mark16",
    "parent": "markGroup6",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare"
  },
  "mark17": {
    "type": "card",
    "id": "mark17",
    "parent": "markGroup6",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2
  },
  "mark18": {
    "type": "card",
    "id": "mark18",
    "parent": "markGroup6",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4
  },
  "markGroup7": {
    "id": "markGroup7",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 165,
    "y": 583,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 18,
    "hide3": true,
    "hide2": true
  },
  "mark19": {
    "type": "card",
    "id": "mark19",
    "parent": "markGroup7",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare"
  },
  "mark20": {
    "type": "card",
    "id": "mark20",
    "parent": "markGroup7",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2
  },
  "mark21": {
    "type": "card",
    "id": "mark21",
    "parent": "markGroup7",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4
  },
  "markGroup8": {
    "id": "markGroup8",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 289,
    "y": 441,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 12,
    "hide2": true
  },
  "mark22": {
    "type": "card",
    "id": "mark22",
    "parent": "markGroup8",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare"
  },
  "mark23": {
    "type": "card",
    "id": "mark23",
    "parent": "markGroup8",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2
  },
  "mark24": {
    "type": "card",
    "id": "mark24",
    "parent": "markGroup8",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4
  },
  "markGroup9": {
    "id": "markGroup9",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 289,
    "y": 583,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 19,
    "hide3": true,
    "hide2": true
  },
  "mark25": {
    "type": "card",
    "id": "mark25",
    "parent": "markGroup9",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare"
  },
  "mark26": {
    "type": "card",
    "id": "mark26",
    "parent": "markGroup9",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2
  },
  "mark27": {
    "type": "card",
    "id": "mark27",
    "parent": "markGroup9",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4
  },
  "markGroup10": {
    "id": "markGroup10",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 414,
    "y": 441,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 13,
    "hide2": true
  },
  "mark28": {
    "type": "card",
    "id": "mark28",
    "parent": "markGroup10",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare"
  },
  "mark29": {
    "type": "card",
    "id": "mark29",
    "parent": "markGroup10",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2
  },
  "mark30": {
    "type": "card",
    "id": "mark30",
    "parent": "markGroup10",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4
  },
  "markGroup11": {
    "id": "markGroup11",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 414,
    "y": 583,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 20,
    "hide3": true,
    "hide2": true
  },
  "mark31": {
    "type": "card",
    "id": "mark31",
    "parent": "markGroup11",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare"
  },
  "mark32": {
    "type": "card",
    "id": "mark32",
    "parent": "markGroup11",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2
  },
  "mark33": {
    "type": "card",
    "id": "mark33",
    "parent": "markGroup11",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4
  },
  "markGroup12": {
    "id": "markGroup12",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 538,
    "y": 441,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 14,
    "hide2": true
  },
  "mark34": {
    "type": "card",
    "id": "mark34",
    "parent": "markGroup12",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare"
  },
  "mark35": {
    "type": "card",
    "id": "mark35",
    "parent": "markGroup12",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2
  },
  "mark36": {
    "type": "card",
    "id": "mark36",
    "parent": "markGroup12",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4
  },
  "markGroup13": {
    "id": "markGroup13",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 538,
    "y": 583,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 21,
    "hide3": true,
    "hide2": true
  },
  "mark37": {
    "type": "card",
    "id": "mark37",
    "parent": "markGroup13",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare"
  },
  "mark38": {
    "type": "card",
    "id": "mark38",
    "parent": "markGroup13",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2
  },
  "mark39": {
    "type": "card",
    "id": "mark39",
    "parent": "markGroup13",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4
  },
  "markGroup14": {
    "id": "markGroup14",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 663,
    "y": 441,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 15,
    "hide4": true,
    "hide2": true
  },
  "mark40": {
    "type": "card",
    "id": "mark40",
    "parent": "markGroup14",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare"
  },
  "mark41": {
    "type": "card",
    "id": "mark41",
    "parent": "markGroup14",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2
  },
  "mark42": {
    "type": "card",
    "id": "mark42",
    "parent": "markGroup14",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4
  },
  "markGroup15": {
    "id": "markGroup15",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 663,
    "y": 583,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 22,
    "hide4": true,
    "hide3": true,
    "hide2": true
  },
  "mark43": {
    "type": "card",
    "id": "mark43",
    "parent": "markGroup15",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare"
  },
  "mark44": {
    "type": "card",
    "id": "mark44",
    "parent": "markGroup15",
    "fixedParent": true,
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2
  },
  "mark45": {
    "type": "card",
    "id": "mark45",
    "parent": "markGroup15",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4
  },
  "line7": {
    "id": "line7",
    "parent": "sheetBack1",
    "fixedParent": true,
    "y": 334,
    "width": 990,
    "height": 0,
    "x": 3,
    "inheritFrom": {
      "line1": "*"
    }
  },
  "line8": {
    "id": "line8",
    "parent": "sheetBack1",
    "fixedParent": true,
    "y": 476,
    "width": 990,
    "height": 0,
    "x": 3,
    "inheritFrom": {
      "line1": "*"
    }
  },
  "line9": {
    "id": "line9",
    "parent": "sheetBack1",
    "fixedParent": true,
    "y": 191,
    "width": 990,
    "height": 0,
    "x": 3,
    "inheritFrom": {
      "line1": "*"
    }
  },
  "sheetMarksDeck": {
    "type": "deck",
    "id": "sheetMarksDeck",
    "x": -210,
    "y": 16,
    "z": 5,
    "cardDefaults": {
      "width": 30,
      "height": 30,
      "classes": "symbols",
      "movable": false,
      "mark": true,
      "fixedParent": true
    },
    "cardTypes": {
      "blackSquare": {
        "color": "black",
        "xColor": "white"
      },
      "greenSquare": {
        "color": "green",
        "xColor": "white"
      },
      "whiteSquare": {
        "color": "white",
        "xColor": "black"
      }
    },
    "faceTemplates": [
      {
        "border": false,
        "radius": 4,
        "objects": [
          {
            "type": "image",
            "x": 0,
            "y": 0,
            "width": 30,
            "height": 30,
            "dynamicProperties": {
              "color": "color"
            }
          }
        ]
      },
      {
        "border": false,
        "radius": 4,
        "objects": [
          {
            "type": "image",
            "x": -5,
            "y": -5,
            "width": 40,
            "height": 40,
            "value": "/i/game-icons.net/delapouite/check-mark.svg",
            "svgReplaces": {
              "#000": "xColor"
            },
            "dynamicProperties": {
              "color": "color"
            },
            "css": {
              "background-size": "75%"
            }
          }
        ]
      },
      {
        "border": false,
        "radius": 4,
        "objects": [
          {
            "type": "image",
            "x": -5,
            "y": -5,
            "width": 40,
            "height": 40,
            "value": "/i/icons/close.svg",
            "svgReplaces": {
              "currentColor": "xColor"
            },
            "dynamicProperties": {
              "color": "color"
            }
          }
        ]
      },
      {
        "border": false,
        "radius": 4,
        "objects": [
          {
            "type": "image",
            "x": 0,
            "y": 0,
            "width": 30,
            "height": 30,
            "dynamicProperties": {
              "color": "color"
            }
          },
          {
            "type": "text",
            "x": 8,
            "y": -5,
            "width": 40,
            "height": 40,
            "value": "?",
            "fontSize": 30,
            "css": {
              "font-weight": "700"
            },
            "dynamicProperties": {
              "color": "xColor"
            }
          }
        ]
      }
    ]
  },
  "817o": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "5b",
    "id": "817o",
    "z": 66,
    "y": -16,
    "x": 308,
    "parent": "sheetBack1"
  },
  "3kmj": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "0b",
    "id": "3kmj",
    "z": 56,
    "x": -5,
    "y": -16,
    "parent": "sheetBack1"
  },
  "siwx": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "1b",
    "id": "siwx",
    "z": 57,
    "x": 58,
    "y": -16,
    "parent": "sheetBack1"
  },
  "3hch": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "2b",
    "id": "3hch",
    "z": 58,
    "x": 120,
    "y": -16,
    "parent": "sheetBack1"
  },
  "8vq3": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "3b",
    "id": "8vq3",
    "z": 59,
    "x": 183,
    "y": -16,
    "parent": "sheetBack1"
  },
  "cr5x": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "4b",
    "id": "cr5x",
    "z": 60,
    "x": 246,
    "y": -16,
    "parent": "sheetBack1"
  },
  "7l0m": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "6b",
    "id": "7l0m",
    "z": 61,
    "x": 371,
    "y": -16,
    "parent": "sheetBack1"
  },
  "faz2": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "7b",
    "id": "faz2",
    "z": 62,
    "x": 434,
    "y": -16,
    "parent": "sheetBack1"
  },
  "99sa": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "8b",
    "id": "99sa",
    "z": 63,
    "x": 496,
    "y": -16,
    "parent": "sheetBack1"
  },
  "66xx": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "9b",
    "id": "66xx",
    "z": 64,
    "x": 559,
    "y": -16,
    "parent": "sheetBack1"
  },
  "va4g": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "0w",
    "id": "va4g",
    "z": 44,
    "y": 52,
    "parent": "sheetBack1",
    "x": -5
  },
  "uggx": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "1w",
    "id": "uggx",
    "z": 43,
    "x": 58,
    "y": 52,
    "parent": "sheetBack1"
  },
  "i9js": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "2w",
    "id": "i9js",
    "z": 42,
    "x": 120,
    "y": 52,
    "parent": "sheetBack1"
  },
  "f9j6": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "3w",
    "id": "f9j6",
    "z": 41,
    "x": 183,
    "y": 52,
    "parent": "sheetBack1"
  },
  "c90u": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "4w",
    "id": "c90u",
    "z": 40,
    "x": 246,
    "y": 52,
    "parent": "sheetBack1"
  },
  "q0m4": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "6w",
    "id": "q0m4",
    "z": 39,
    "x": 371,
    "parent": "sheetBack1",
    "y": 52
  },
  "ngwn": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "7w",
    "id": "ngwn",
    "z": 38,
    "x": 434,
    "parent": "sheetBack1",
    "y": 52
  },
  "3fh7": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "8w",
    "id": "3fh7",
    "z": 37,
    "x": 496,
    "y": 52,
    "parent": "sheetBack1"
  },
  "9v13": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "9w",
    "id": "9v13",
    "z": 36,
    "x": 559,
    "y": 52,
    "parent": "sheetBack1"
  },
  "818o": {
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "5w",
    "id": "818o",
    "z": 65,
    "y": 52,
    "x": 308,
    "parent": "sheetBack1"
  },
  "gridLabel1": {
    "type": "label",
    "id": "gridLabel1",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 164,
    "y": 196,
    "width": 115,
    "height": 99,
    "z": 1,
    "css": {
      "color": "black",
      "text-align": "left",
      "font-size": "28px"
    },
    "editable": true
  },
  "gridLabel2": {
    "inheritFrom": {
      "gridLabel1": "*"
    },
    "type": "label",
    "id": "gridLabel2",
    "x": 288,
    "y": 196,
    "text": ""
  },
  "gridLabel3": {
    "inheritFrom": {
      "gridLabel1": "*"
    },
    "type": "label",
    "id": "gridLabel3",
    "x": 412,
    "y": 196,
    "text": ""
  },
  "gridLabel4": {
    "inheritFrom": {
      "gridLabel1": "*"
    },
    "type": "label",
    "id": "gridLabel4",
    "x": 536,
    "y": 196,
    "text": ""
  },
  "gridLabel5": {
    "inheritFrom": {
      "gridLabel1": "*"
    },
    "type": "label",
    "id": "gridLabel5",
    "x": 660,
    "y": 196,
    "text": "",
    "hide4": true,
    "scale": 1
  },
  "gridLabel6": {
    "inheritFrom": {
      "gridLabel1": "*"
    },
    "type": "label",
    "id": "gridLabel6",
    "x": 164,
    "y": 337,
    "text": "",
    "hide2": true,
    "scale": 1
  },
  "gridLabel7": {
    "inheritFrom": {
      "gridLabel1": "*"
    },
    "type": "label",
    "id": "gridLabel7",
    "x": 288,
    "y": 337,
    "text": "",
    "hide2": true,
    "scale": 1
  },
  "gridLabel8": {
    "inheritFrom": {
      "gridLabel1": "*"
    },
    "type": "label",
    "id": "gridLabel8",
    "x": 412,
    "y": 337,
    "text": "",
    "hide2": true,
    "scale": 1
  },
  "gridLabel9": {
    "inheritFrom": {
      "gridLabel1": "*"
    },
    "type": "label",
    "id": "gridLabel9",
    "x": 536,
    "y": 337,
    "text": "",
    "hide2": true,
    "scale": 1
  },
  "gridLabel10": {
    "inheritFrom": {
      "gridLabel1": "*"
    },
    "type": "label",
    "id": "gridLabel10",
    "x": 660,
    "y": 337,
    "text": "",
    "hide4": true,
    "scale": 1,
    "hide2": true
  },
  "gridLabel11": {
    "inheritFrom": {
      "gridLabel1": "*"
    },
    "type": "label",
    "id": "gridLabel11",
    "x": 164,
    "y": 479,
    "text": "",
    "hide3": true,
    "scale": 1,
    "hide2": true
  },
  "gridLabel12": {
    "inheritFrom": {
      "gridLabel1": "*"
    },
    "type": "label",
    "id": "gridLabel12",
    "x": 288,
    "y": 479,
    "text": "",
    "hide3": true,
    "scale": 1,
    "hide2": true
  },
  "gridLabel13": {
    "inheritFrom": {
      "gridLabel1": "*"
    },
    "type": "label",
    "id": "gridLabel13",
    "x": 412,
    "y": 479,
    "text": "",
    "hide3": true,
    "scale": 1,
    "hide2": true
  },
  "gridLabel14": {
    "inheritFrom": {
      "gridLabel1": "*"
    },
    "type": "label",
    "id": "gridLabel14",
    "x": 536,
    "y": 479,
    "text": "",
    "hide3": true,
    "scale": 1,
    "hide2": true
  },
  "gridLabel15": {
    "inheritFrom": {
      "gridLabel1": "*"
    },
    "type": "label",
    "id": "gridLabel15",
    "x": 660,
    "y": 479,
    "text": "",
    "hide4": true,
    "scale": 1,
    "hide3": true,
    "hide2": true
  },
  "notesLabel1": {
    "type": "label",
    "id": "notesLabel1",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 782,
    "y": 196,
    "width": 212,
    "height": 135,
    "z": 1,
    "css": {
      "color": "black",
      "text-align": "left"
    },
    "editable": true
  },
  "notesLabel2": {
    "inheritFrom": {
      "notesLabel1": "*"
    },
    "type": "label",
    "id": "notesLabel2",
    "x": 782,
    "y": 338,
    "text": "",
    "hide2": true,
    "scale": 1
  },
  "notesLabel3": {
    "inheritFrom": {
      "notesLabel1": "*"
    },
    "type": "label",
    "id": "notesLabel3",
    "x": 782,
    "y": 481,
    "text": "",
    "hide3": true,
    "scale": 1,
    "hide2": true
  },
  "letterLabelE1": {
    "id": "letterLabelE1",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 700,
    "y": 138,
    "width": 40,
    "height": 50,
    "layer": -2,
    "movable": false,
    "css": {
      "font-size": "50px"
    },
    "text": "E",
    "hide4": true
  },
  "answerLetterLabel1": {
    "id": "answerLetterLabel1",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 646,
    "width": 340,
    "height": 40,
    "layer": -2,
    "movable": false,
    "css": {
      "font-size": "35px"
    },
    "text": "A      B      C      D",
    "y": 4
  },
  "markGroup16": {
    "id": "markGroup16",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 601,
    "y": 112,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 1,
    "scale": 0.6,
    "checkTile": "A",
    "checkColor": 1
  },
  "mark46": {
    "type": "card",
    "id": "mark46",
    "parent": "markGroup16",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "clickRoutine": [
      {
        "func": "GET",
        "collection": [
          "${PROPERTY parent}"
        ],
        "property": "checkTile"
      },
      {
        "func": "SELECT",
        "property": "checkNumber",
        "value": "${seatIndex}"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "checkTile",
        "value": "${checkTile}",
        "collection": "thisTile"
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY activeFace}",
        "operand2": 1,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "activeFace",
            "value": 0
          },
          {
            "func": "SET",
            "collection": [
              "${PROPERTY parent}"
            ],
            "property": "color",
            "value": "grey"
          },
          {
            "func": "SET",
            "collection": "thisTile",
            "property": "color",
            "value": "grey"
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "activeFace",
            "value": 1
          },
          {
            "func": "SET",
            "collection": [
              "${PROPERTY parent}"
            ],
            "property": "color",
            "value": "${PROPERTY color}"
          },
          {
            "func": "SET",
            "collection": "thisTile",
            "property": "color",
            "value": "${PROPERTY color}"
          }
        ]
      },
      {
        "func": "SELECT",
        "type": "card",
        "property": "parent",
        "value": "${PROPERTY parent}"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "id",
        "relation": "!=",
        "value": "${PROPERTY id}",
        "mode": "intersect"
      },
      {
        "func": "SET",
        "property": "activeFace",
        "value": 0
      }
    ]
  },
  "mark47": {
    "type": "card",
    "id": "mark47",
    "parent": "markGroup16",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2,
    "activeFace": 0,
    "y": 0,
    "movable": false,
    "movableInEdit": true,
    "inheritFrom": {
      "mark46": "clickRoutine"
    },
    "cardDefaults (in deck)": {
      "width": 30,
      "height": 30,
      "classes": "symbols",
      "movable": false,
      "mark": true,
      "fixedParent": true
    },
    "cardType [greenSquare] (in deck)": {
      "color": "#538b21",
      "xColor": "#fff"
    }
  },
  "mark48": {
    "type": "card",
    "id": "mark48",
    "parent": "markGroup16",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4,
    "inheritFrom": {
      "mark46": "clickRoutine"
    },
    "activeFace": 0
  },
  "markGroup17": {
    "id": "markGroup17",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 678,
    "y": 112,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 1,
    "scale": 0.6,
    "checkColor": 1,
    "checkTile": "B",
    "color": "white"
  },
  "mark49": {
    "type": "card",
    "id": "mark49",
    "parent": "markGroup17",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "inheritFrom": {
      "mark46": "clickRoutine"
    },
    "activeFace": 0
  },
  "mark50": {
    "type": "card",
    "id": "mark50",
    "parent": "markGroup17",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2,
    "inheritFrom": {
      "mark46": "clickRoutine"
    },
    "activeFace": 0
  },
  "mark51": {
    "type": "card",
    "id": "mark51",
    "parent": "markGroup17",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4,
    "activeFace": 0,
    "inheritFrom": {
      "mark46": "clickRoutine"
    }
  },
  "markGroup18": {
    "id": "markGroup18",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 755,
    "y": 112,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 1,
    "scale": 0.6,
    "checkColor": 1,
    "checkTile": "C",
    "color": "white"
  },
  "mark52": {
    "type": "card",
    "id": "mark52",
    "parent": "markGroup18",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "inheritFrom": {
      "mark46": "clickRoutine"
    },
    "activeFace": 0
  },
  "mark53": {
    "type": "card",
    "id": "mark53",
    "parent": "markGroup18",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2,
    "inheritFrom": {
      "mark46": "clickRoutine"
    },
    "activeFace": 0
  },
  "mark54": {
    "type": "card",
    "id": "mark54",
    "parent": "markGroup18",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4,
    "activeFace": 0,
    "inheritFrom": {
      "mark46": "clickRoutine"
    }
  },
  "markGroup19": {
    "id": "markGroup19",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 832,
    "y": 112,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 1,
    "scale": 0.6,
    "checkColor": 1,
    "checkTile": "D",
    "color": "white"
  },
  "mark55": {
    "type": "card",
    "id": "mark55",
    "parent": "markGroup19",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "activeFace": 0,
    "inheritFrom": {
      "mark46": "clickRoutine"
    }
  },
  "mark56": {
    "type": "card",
    "id": "mark56",
    "parent": "markGroup19",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2,
    "inheritFrom": {
      "mark46": "clickRoutine"
    },
    "activeFace": 0
  },
  "mark57": {
    "type": "card",
    "id": "mark57",
    "parent": "markGroup19",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4,
    "inheritFrom": {
      "mark46": "clickRoutine"
    },
    "activeFace": 0
  },
  "markGroup20": {
    "id": "markGroup20",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 909,
    "y": 112,
    "width": 109,
    "height": 30,
    "layer": -3,
    "movable": false,
    "z": 1,
    "hide4": true,
    "specialScale": true,
    "scale": 0.6,
    "checkColor": 1,
    "checkTile": "E",
    "color": "white"
  },
  "mark58": {
    "type": "card",
    "id": "mark58",
    "parent": "markGroup20",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "fixedParent": true,
    "x": 0,
    "y": 0,
    "movable": false,
    "movableInEdit": true,
    "inheritFrom": {
      "mark46": "clickRoutine"
    },
    "cardDefaults (in deck)": {
      "width": 30,
      "height": 30,
      "classes": "symbols",
      "movable": false,
      "mark": true,
      "fixedParent": true
    },
    "cardType [blackSquare] (in deck)": {
      "color": "black",
      "xColor": "white"
    },
    "activeFace": 0
  },
  "mark59": {
    "type": "card",
    "id": "mark59",
    "parent": "markGroup20",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "x": 40,
    "z": 2,
    "fixedParent": true,
    "y": 0,
    "inheritFrom": {
      "mark46": "clickRoutine"
    },
    "movable": false,
    "movableInEdit": true,
    "cardDefaults (in deck)": {
      "width": 30,
      "height": 30,
      "classes": "symbols",
      "movable": false,
      "mark": true,
      "fixedParent": true
    },
    "cardType [greenSquare] (in deck)": {
      "color": "green",
      "xColor": "white"
    },
    "activeFace": 0
  },
  "mark60": {
    "type": "card",
    "id": "mark60",
    "parent": "markGroup20",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "x": 80,
    "z": 4,
    "activeFace": 0,
    "y": 0,
    "inheritFrom": {
      "mark46": "clickRoutine"
    },
    "movable": false,
    "movableInEdit": true,
    "cardDefaults (in deck)": {
      "width": 30,
      "height": 30,
      "classes": "symbols",
      "movable": false,
      "mark": true,
      "fixedParent": true
    },
    "cardType [whiteSquare] (in deck)": {
      "color": "white",
      "xColor": "black"
    }
  },
  "answerLabel2": {
    "inheritFrom": {
      "answerLabel1": "*"
    },
    "type": "label",
    "id": "answerLabel2",
    "x": 699,
    "y": 44,
    "text": "",
    "checkNumber": 1,
    "checkTile": "B",
    "color": "grey"
  },
  "answerLabel3": {
    "inheritFrom": {
      "answerLabel1": "*"
    },
    "type": "label",
    "id": "answerLabel3",
    "x": 776,
    "y": 44,
    "text": "",
    "checkNumber": 1,
    "checkTile": "C",
    "color": "grey"
  },
  "answerLabel4": {
    "inheritFrom": {
      "answerLabel1": "*"
    },
    "type": "label",
    "id": "answerLabel4",
    "x": 853,
    "y": 44,
    "text": "",
    "checkNumber": 1,
    "checkTile": "D",
    "color": "grey"
  },
  "answerLabel5": {
    "inheritFrom": {
      "answerLabel1": "*"
    },
    "type": "label",
    "id": "answerLabel5",
    "x": 930,
    "y": 44,
    "text": "",
    "scale": 1,
    "checkNumber": 1,
    "checkTile": "E",
    "color": "grey",
    "hide4": true
  },
  "answerLetterLabelE1": {
    "id": "answerLetterLabelE1",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 951,
    "width": 30,
    "height": 40,
    "layer": -2,
    "movable": false,
    "css": {
      "font-size": "35px"
    },
    "text": "E",
    "y": 4,
    "hide4": true
  },
  "notesHeader1": {
    "id": "notesHeader1",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 861,
    "y": 162,
    "width": 80,
    "height": 30,
    "layer": -2,
    "movable": false,
    "css": {
      "font-size": "25px"
    },
    "text": "notes",
    "hide4": true
  },
  "numbersDeckHolder": {
    "type": "holder",
    "id": "numbersDeckHolder",
    "x": -202,
    "y": 267,
    "width": 70,
    "height": 110,
    "z": 23,
    "dropOffsetX": 0,
    "dropOffsetY": 0
  },
  "numbersDeck": {
    "type": "deck",
    "id": "numbersDeck",
    "z": 5,
    "cardDefaults": {
      "width": 70,
      "height": 110
    },
    "cardTypes": {
      "0b": {
        "color": "black",
        "text": 0
      },
      "1b": {
        "color": "black",
        "text": 1
      },
      "2b": {
        "color": "black",
        "text": 2
      },
      "3b": {
        "color": "black",
        "text": 3
      },
      "4b": {
        "color": "black",
        "text": 4
      },
      "5b": {
        "color": "green",
        "text": 5
      },
      "6b": {
        "color": "black",
        "text": 6
      },
      "7b": {
        "color": "black",
        "text": 7
      },
      "8b": {
        "color": "black",
        "text": 8
      },
      "9b": {
        "color": "black",
        "text": 9
      },
      "0w": {
        "color": "white",
        "text": 0
      },
      "1w": {
        "color": "white",
        "text": 1
      },
      "2w": {
        "color": "white",
        "text": 2
      },
      "3w": {
        "color": "white",
        "text": 3
      },
      "4w": {
        "color": "white",
        "text": 4
      },
      "5w": {
        "color": "green",
        "text": 5
      },
      "6w": {
        "color": "white",
        "text": 6
      },
      "7w": {
        "color": "white",
        "text": 7
      },
      "8w": {
        "color": "white",
        "text": 8
      },
      "9w": {
        "color": "white",
        "text": 9
      }
    },
    "faceTemplates": [
      {
        "border": false,
        "radius": 8,
        "objects": [
          {
            "type": "image",
            "x": 0,
            "y": 0,
            "width": 70,
            "height": 110,
            "value": "/assets/-1069828218_1442",
            "css": {
              "background-repeat": "repeat",
              "background-size": "80%"
            }
          }
        ]
      },
      {
        "objects": [
          {
            "width": 70,
            "height": 110,
            "css": {
              "border": "6px solid green",
              "border-radius": "8px",
              "background": "#dbcbae"
            }
          },
          {
            "type": "text",
            "x": 0,
            "y": 13,
            "fontSize": 70,
            "textAlign": "center",
            "width": 70,
            "height": 110,
            "dynamicProperties": {
              "value": "text",
              "color": "color"
            }
          }
        ]
      }
    ],
    "parent": "numbersDeckHolder",
    "y": -12,
    "x": -8
  },
  "hand1": {
    "type": "holder",
    "id": "hand1",
    "y": 858,
    "width": 357,
    "height": 110,
    "z": 24,
    "dropOffsetX": 0,
    "dropOffsetY": 0,
    "stackOffsetX": 71,
    "onEnter": {
      "activeFace": 1
    },
    "x": 623,
    "enterRoutine": [
      {
        "func": "SORT",
        "holder": "${PROPERTY id}",
        "key": "color"
      },
      {
        "func": "SORT",
        "holder": "${PROPERTY id}",
        "key": "text"
      },
      {
        "func": "SELECT",
        "type": "card",
        "property": "parent",
        "value": "${PROPERTY id}",
        "collection": "myCards"
      },
      {
        "func": "GET",
        "collection": "myCards",
        "property": "cardType",
        "aggregation": "array",
        "variable": "myCardsArray"
      },
      {
        "func": "SELECT",
        "type": "card",
        "property": "deck",
        "value": "sheetNumbersDeck"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "parent",
        "value": "sheetBack${PROPERTY index}",
        "collection": "sheetCards"
      },
      {
        "func": "SELECT",
        "source": "sheetCards",
        "property": "cardType",
        "relation": "in",
        "value": "${myCardsArray}"
      },
      {
        "func": "SET",
        "property": "activeFace",
        "value": 1
      }
    ],
    "index": 1,
    "onlyVisibleForSeat": "seat1",
    "classes": "transparent",
    "hidePlayerCursors": true
  },
  "sheetNumbersDeck": {
    "type": "deck",
    "id": "sheetNumbersDeck",
    "x": -212,
    "y": 132,
    "z": 5,
    "cardDefaults": {
      "width": 70,
      "height": 110,
      "movable": false,
      "mark": true,
      "fixedParent": true,
      "scale": 0.6,
      "xColor": "red"
    },
    "cardTypes": {
      "0b": {
        "color": "#000",
        "text": 0
      },
      "1b": {
        "color": "#000",
        "text": 1
      },
      "2b": {
        "color": "#000",
        "text": 2
      },
      "3b": {
        "color": "#000",
        "text": 3
      },
      "4b": {
        "color": "#000",
        "text": 4
      },
      "5b": {
        "color": "green",
        "text": 5
      },
      "6b": {
        "color": "#000",
        "text": 6
      },
      "7b": {
        "color": "#000",
        "text": 7
      },
      "8b": {
        "color": "#000",
        "text": 8
      },
      "9b": {
        "color": "#000",
        "text": 9
      },
      "0w": {
        "color": "#fff",
        "text": 0
      },
      "1w": {
        "color": "#fff",
        "text": 1
      },
      "2w": {
        "color": "#fff",
        "text": 2
      },
      "3w": {
        "color": "#fff",
        "text": 3
      },
      "4w": {
        "color": "#fff",
        "text": 4
      },
      "5w": {
        "color": "green",
        "text": 5
      },
      "6w": {
        "color": "#fff",
        "text": 6
      },
      "7w": {
        "color": "#fff",
        "text": 7
      },
      "8w": {
        "color": "#fff",
        "text": 8
      },
      "9w": {
        "color": "#fff",
        "text": 9
      }
    },
    "faceTemplates": [
      {
        "objects": [
          {
            "width": 70,
            "height": 110,
            "css": {
              "border": "6px solid green",
              "border-radius": "8px",
              "background": "#dbcbae"
            }
          },
          {
            "type": "text",
            "x": 0,
            "y": 13,
            "fontSize": 70,
            "textAlign": "center",
            "width": 70,
            "height": 110,
            "dynamicProperties": {
              "value": "text",
              "color": "color"
            }
          }
        ]
      },
      {
        "objects": [
          {
            "width": 70,
            "height": 110,
            "css": {
              "border": "6px solid green",
              "border-radius": "8px",
              "background": "#dbcbae"
            }
          },
          {
            "type": "text",
            "x": 0,
            "y": 13,
            "fontSize": 70,
            "textAlign": "center",
            "width": 70,
            "height": 110,
            "dynamicProperties": {
              "value": "text",
              "color": "color"
            }
          },
          {
            "type": "image",
            "x": -10,
            "y": 10,
            "width": 90,
            "height": 90,
            "color": "transparent",
            "value": "/i/icons/close.svg",
            "svgReplaces": {
              "currentColor": "xColor"
            }
          }
        ]
      }
    ]
  },
  "questionsDeckHolder": {
    "type": "holder",
    "id": "questionsDeckHolder",
    "y": 255,
    "dropTarget": {
      "type": "card"
    },
    "width": 250,
    "height": 150,
    "x": 1318,
    "onEnter": {
      "activeFace": 0
    },
    "dropOffsetX": 0,
    "dropOffsetY": 0,
    "css": {
      "background": "#ffffff80"
    }
  },
  "questionsDeck": {
    "type": "deck",
    "id": "questionsDeck",
    "parent": "questionsDeckHolder",
    "x": 9,
    "y": 8,
    "cardTypes": {
      "1": {
        "text": "Sum of numbers on three left tiles?"
      },
      "2": {
        "text": "Sum of numbers on three right tiles?"
      },
      "3": {
        "text": "Sum of white numbers?"
      },
      "4": {
        "text": "Sum of black numbers?"
      },
      "5": {
        "text": "Sum of all numbers?"
      },
      "6": {
        "text": "Sum of numbers on center tiles?\n2p or 3p: (b,c,d)\n4p:(b,c)"
      },
      "7": {
        "text": "Difference between largest and smallest numbers?"
      },
      "8": {
        "text": "Where are the 0 tiles?"
      },
      "9": {
        "text": "Where are the (1 or 2) tiles?\n (Choose one number)"
      },
      "10": {
        "text": "Where are the (3 or 4) tiles?\n (Choose one number)"
      },
      "11": {
        "text": "Where are the 5 tiles?"
      },
      "12": {
        "text": "Where are the (6 or 7) tiles?\n (Choose one number)"
      },
      "13": {
        "text": "Where are the (8 or 9) tiles?\n (Choose one number)"
      },
      "14": {
        "text": "How many white numbers?"
      },
      "15": {
        "text": "How many black numbers?"
      },
      "16": {
        "text": "How many even numbers?\n\n(0 is even)"
      },
      "17": {
        "text": "How many odd numbers?\n\n(0 is even)"
      },
      "18": {
        "text": "How many tiles with equal numbers?"
      },
      "19": {
        "text": "Where are the neighboring tiles with same color?"
      },
      "20": {
        "text": "Where are the neighboring tiles with sequential numbers?"
      },
      "21": {
        "text": "Is the number in space C greater than 4?"
      }
    },
    "faceTemplates": [
      {
        "border": 1,
        "radius": 8,
        "objects": [
          {
            "type": "image",
            "x": 0,
            "y": -10,
            "width": 270,
            "height": 190,
            "value": "/assets/-242182851_61790"
          }
        ]
      },
      {
        "border": 1,
        "radius": 8,
        "objects": [
          {
            "type": "image",
            "width": 250,
            "height": 150,
            "color": "#e2efd7"
          },
          {
            "type": "text",
            "x": 0,
            "y": 10,
            "fontSize": 23,
            "textAlign": "center",
            "width": 248,
            "dynamicProperties": {
              "value": "text"
            }
          }
        ]
      }
    ],
    "cardDefaults": {
      "classes": "transition",
      "width": 248,
      "height": 148,
      "enlarge": 2
    }
  },
  "f7ut": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "1",
    "id": "f7ut",
    "z": 43862,
    "parent": "2db1"
  },
  "r2x2": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "3",
    "id": "r2x2",
    "z": 43882,
    "parent": "2db1"
  },
  "9xep": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "4",
    "id": "9xep",
    "z": 43885,
    "parent": "2db1"
  },
  "vyiw": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "5",
    "id": "vyiw",
    "z": 43857,
    "parent": "2db1"
  },
  "k0og": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "2",
    "id": "k0og",
    "z": 43861,
    "parent": "2db1"
  },
  "7yvj": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "6",
    "id": "7yvj",
    "z": 43852,
    "parent": "2db1"
  },
  "zqvp": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "7",
    "id": "zqvp",
    "z": 43859,
    "parent": "2db1"
  },
  "njbd": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "8",
    "id": "njbd",
    "z": 43891,
    "parent": "2db1"
  },
  "wu22": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "9",
    "id": "wu22",
    "z": 43864,
    "parent": "2db1"
  },
  "32j8": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "10",
    "id": "32j8",
    "z": 43879,
    "parent": "2db1"
  },
  "fzsc": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "11",
    "id": "fzsc",
    "z": 43855,
    "parent": "2db1"
  },
  "drri": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "12",
    "id": "drri",
    "z": 43858,
    "parent": "2db1"
  },
  "raul": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "13",
    "id": "raul",
    "z": 43863,
    "parent": "2db1"
  },
  "lpm6": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "14",
    "id": "lpm6",
    "z": 43856,
    "parent": "2db1"
  },
  "mdt1": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "15",
    "id": "mdt1",
    "z": 43851,
    "parent": "2db1"
  },
  "s6jz": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "16",
    "id": "s6jz",
    "z": 43850,
    "parent": "2db1"
  },
  "zzaz": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "17",
    "id": "zzaz",
    "z": 43894,
    "parent": "2db1"
  },
  "ebrq": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "18",
    "id": "ebrq",
    "z": 43860,
    "parent": "2db1"
  },
  "jc62": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "19",
    "id": "jc62",
    "z": 43854,
    "parent": "2db1"
  },
  "v66w": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "20",
    "id": "v66w",
    "z": 43853,
    "parent": "2db1"
  },
  "5ty6": {
    "deck": "questionsDeck",
    "type": "card",
    "cardType": "21",
    "id": "5ty6",
    "z": 43888,
    "parent": "2db1"
  },
  "questionHolder": {
    "type": "holder",
    "id": "questionHolder",
    "x": 35,
    "y": 255,
    "width": 250,
    "height": 150,
    "dropTarget": {
      "deck": "questionsDeck"
    },
    "enterRoutine": [
      "var result = []",
      {
        "func": "SELECT",
        "type": "seat",
        "property": "player",
        "relation": "!=",
        "value": ""
      },
      {
        "func": "COUNT",
        "variable": "pCOUNT"
      },
      {
        "func": "SELECT",
        "type": "card",
        "property": "parent",
        "value": "hand${value}",
        "sortBy": {
          "key": "z"
        }
      },
      {
        "func": "GET",
        "collection": "child",
        "property": "cardType"
      },
      {
        "func": "CALL",
        "routine": "${cardType}Routine"
      },
      {
        "func": "FOREACH",
        "range": [
          4
        ],
        "loopRoutine": [
          "var key = ${value} - 1",
          {
            "func": "SET",
            "collection": [
              "answer${value}"
            ],
            "property": "text",
            "value": "${result.$key}"
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${pCOUNT}",
        "relation": "<",
        "operand2": 4,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "answer${seatIndex}"
            ],
            "property": "text",
            "value": ""
          }
        ]
      }
    ],
    "1Routine": [
      "// Sum of 3 left",
      {
        "func": "FOREACH",
        "range": [
          4
        ],
        "loopRoutine": [
          {
            "func": "SELECT",
            "type": "card",
            "property": "parent",
            "value": "hand${value}",
            "sortBy": {
              "key": "z"
            }
          },
          {
            "func": "GET",
            "aggregation": "array",
            "property": "text",
            "variable": "numbers"
          },
          "var thisAnswer = ${numbers.0} + ${numbers.1} + ${numbers.2}",
          "var result = push ${thisAnswer}"
        ]
      }
    ],
    "2Routine": [
      "// Sum of numbers on 3 right tiles",
      {
        "func": "FOREACH",
        "range": [
          4
        ],
        "loopRoutine": [
          {
            "func": "SELECT",
            "type": "card",
            "property": "parent",
            "value": "hand${value}",
            "sortBy": {
              "key": "z"
            }
          },
          {
            "func": "GET",
            "aggregation": "array",
            "property": "text",
            "variable": "numbers"
          },
          {
            "func": "IF",
            "operand1": "${pCOUNT}",
            "operand2": 4,
            "thenRoutine": [
              "var thisAnswer = ${numbers.1} + ${numbers.2} + ${numbers.3}"
            ],
            "elseRoutine": [
              "var thisAnswer = ${numbers.2} + ${numbers.3} + ${numbers.4}"
            ]
          },
          "var result = push ${thisAnswer}"
        ]
      }
    ],
    "3Routine": [
      "// Sum of white",
      {
        "func": "FOREACH",
        "range": [
          4
        ],
        "loopRoutine": [
          {
            "func": "SELECT",
            "type": "card",
            "property": "parent",
            "value": "hand${value}",
            "sortBy": {
              "key": "z"
            }
          },
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "color",
            "value": "white"
          },
          {
            "func": "GET",
            "aggregation": "sum",
            "property": "text",
            "variable": "sum"
          },
          "var result = push ${sum}"
        ]
      }
    ],
    "4Routine": [
      "// Sum of black",
      {
        "func": "FOREACH",
        "range": [
          4
        ],
        "loopRoutine": [
          {
            "func": "SELECT",
            "type": "card",
            "property": "parent",
            "value": "hand${value}",
            "sortBy": {
              "key": "z"
            }
          },
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "color",
            "value": "black"
          },
          {
            "func": "GET",
            "aggregation": "sum",
            "property": "text",
            "variable": "sum"
          },
          "var result = push ${sum}"
        ]
      }
    ],
    "5Routine": [
      "// Sum of all",
      {
        "func": "FOREACH",
        "range": [
          4
        ],
        "loopRoutine": [
          {
            "func": "SELECT",
            "type": "card",
            "property": "parent",
            "value": "hand${value}",
            "sortBy": {
              "key": "z"
            }
          },
          {
            "func": "GET",
            "aggregation": "sum",
            "property": "text",
            "variable": "sum"
          },
          "var result = push ${sum}"
        ]
      }
    ],
    "6Routine": [
      "// Sum of center tiles",
      {
        "func": "FOREACH",
        "range": [
          4
        ],
        "loopRoutine": [
          {
            "func": "SELECT",
            "type": "card",
            "property": "parent",
            "value": "hand${value}",
            "sortBy": {
              "key": "z"
            }
          },
          {
            "func": "GET",
            "aggregation": "array",
            "property": "text",
            "variable": "numbers"
          },
          {
            "func": "IF",
            "operand1": "${pCOUNT}",
            "relation": "<",
            "operand2": 4,
            "thenRoutine": [
              "var thisAnswer = ${numbers.1} + ${numbers.2} + ${numbers.3}",
              "var result = push ${thisAnswer}"
            ],
            "elseRoutine": [
              "var thisAnswer = ${numbers.1} + ${numbers.2}",
              "var result = push ${thisAnswer}"
            ]
          }
        ]
      }
    ],
    "7Routine": [
      "// Difference between largest and smallest ",
      {
        "func": "FOREACH",
        "range": [
          4
        ],
        "loopRoutine": [
          {
            "func": "SELECT",
            "type": "card",
            "property": "parent",
            "value": "hand${value}",
            "sortBy": {
              "key": "z"
            }
          },
          {
            "func": "GET",
            "aggregation": "max",
            "property": "text",
            "variable": "max"
          },
          {
            "func": "GET",
            "aggregation": "min",
            "property": "text",
            "variable": "min"
          },
          "var difference = ${max} - ${min}",
          "var result = push ${difference}"
        ]
      }
    ],
    "14Routine": [
      "// How many white ",
      {
        "func": "FOREACH",
        "range": [
          4
        ],
        "loopRoutine": [
          {
            "func": "SELECT",
            "type": "card",
            "property": "parent",
            "value": "hand${value}",
            "sortBy": {
              "key": "z"
            }
          },
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "color",
            "value": "white"
          },
          {
            "func": "COUNT"
          },
          "var result = push ${COUNT}"
        ]
      }
    ],
    "15Routine": [
      "// How many black ",
      {
        "func": "FOREACH",
        "range": [
          4
        ],
        "loopRoutine": [
          {
            "func": "SELECT",
            "type": "card",
            "property": "parent",
            "value": "hand${value}",
            "sortBy": {
              "key": "z"
            }
          },
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "color",
            "value": "black"
          },
          {
            "func": "COUNT"
          },
          "var result = push ${COUNT}"
        ]
      }
    ],
    "16Routine": [
      "// How many even ",
      {
        "func": "FOREACH",
        "range": [
          4
        ],
        "loopRoutine": [
          {
            "func": "SELECT",
            "type": "card",
            "property": "parent",
            "value": "hand${value}",
            "sortBy": {
              "key": "z"
            }
          },
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "text",
            "relation": "in",
            "value": [
              0,
              2,
              4,
              6,
              8
            ]
          },
          {
            "func": "COUNT"
          },
          "var result = push ${COUNT}"
        ]
      }
    ],
    "17Routine": [
      "// How many odds ",
      {
        "func": "FOREACH",
        "range": [
          4
        ],
        "loopRoutine": [
          {
            "func": "SELECT",
            "type": "card",
            "property": "parent",
            "value": "hand${value}",
            "sortBy": {
              "key": "z"
            }
          },
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "text",
            "relation": "in",
            "value": [
              1,
              3,
              5,
              7,
              9
            ]
          },
          {
            "func": "COUNT"
          },
          "var result = push ${COUNT}"
        ]
      }
    ],
    "8Routine": [
      "// Where are 0 ",
      {
        "func": "CALL",
        "routine": "where2Routine",
        "arguments": {
          "where": 0
        }
      }
    ],
    "whereRoutine": [
      {
        "func": "SELECT",
        "type": "card",
        "property": "deck",
        "value": "numbersDeck"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "cardType",
        "relation": "in",
        "value": "${inValue}",
        "collection": "myCards",
        "sortBy": {
          "key": "cardType",
          "reverse": false
        }
      },
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "${textValue}"
          },
          {
            "type": "choose",
            "source": "myCards",
            "max": 1,
            "propertyOverride": {
              "activeFace": 1
            },
            "variable": "cardID"
          }
        ],
        "confirmButtonText": "Continue"
      },
      {
        "func": "GET",
        "collection": [
          "${cardID}"
        ],
        "property": "text",
        "variable": "where"
      },
      {
        "func": "CALL",
        "routine": "where2Routine"
      }
    ],
    "10Routine": [
      "// Where are 3 or 4 ",
      {
        "func": "CALL",
        "routine": "whereRoutine",
        "arguments": {
          "inValue": "${PROPERTY array34}",
          "textValue": "Ask about 3s or 4s?"
        }
      }
    ],
    "9Routine": [
      "// Where are 1 or 2 ",
      {
        "func": "CALL",
        "routine": "whereRoutine",
        "arguments": {
          "inValue": "${PROPERTY array12}",
          "textValue": "Ask about 1s or 2s?"
        }
      }
    ],
    "11Routine": [
      "// Where are 5 ",
      {
        "func": "CALL",
        "routine": "where2Routine",
        "arguments": {
          "where": 5
        }
      }
    ],
    "12Routine": [
      "// Where are 6 or 7 ",
      {
        "func": "CALL",
        "routine": "whereRoutine",
        "arguments": {
          "inValue": "${PROPERTY array67}",
          "textValue": "Ask about 6s or 7s?"
        }
      }
    ],
    "13Routine": [
      "// Where are 8 or 9 ",
      {
        "func": "CALL",
        "routine": "whereRoutine",
        "arguments": {
          "inValue": "${PROPERTY array89}",
          "textValue": "Ask about 8s or 9s?"
        }
      }
    ],
    "21Routine": [
      "// Tile C > 4 ",
      {
        "func": "FOREACH",
        "range": [
          4
        ],
        "loopRoutine": [
          {
            "func": "SELECT",
            "type": "card",
            "property": "parent",
            "value": "hand${value}",
            "sortBy": {
              "key": "z"
            }
          },
          {
            "func": "GET",
            "aggregation": "array",
            "property": "text",
            "variable": "numbers"
          },
          "var thisAnswer = ${numbers.2} > 4",
          {
            "func": "IF",
            "condition": "${thisAnswer}",
            "thenRoutine": [
              "var result = push 'Yes'"
            ],
            "elseRoutine": [
              "var result = push 'No'"
            ]
          }
        ]
      }
    ],
    "18Routine": [
      "// How many with same number ",
      "var noDups = []",
      {
        "func": "FOREACH",
        "range": [
          4
        ],
        "loopRoutine": [
          {
            "func": "SELECT",
            "type": "card",
            "property": "parent",
            "value": "hand${value}",
            "sortBy": {
              "key": "z"
            }
          },
          {
            "func": "GET",
            "aggregation": "array",
            "property": "text",
            "variable": "numbers"
          },
          {
            "func": "FOREACH",
            "in": "${numbers}",
            "loopRoutine": [
              "var firstIndex = ${numbers} indexOf ${value}",
              {
                "func": "IF",
                "operand1": "${key}",
                "relation": "==",
                "operand2": "${firstIndex}",
                "thenRoutine": [
                  "var noDups = push ${value}"
                ]
              }
            ]
          },
          {
            "func": "IF",
            "operand1": "${pCOUNT}",
            "operand2": 4,
            "thenRoutine": [
              "var tileCount = 4"
            ],
            "elseRoutine": [
              "var tileCount = 5"
            ]
          },
          "var thisAnswer = length ${noDups}",
          "var thisAnswer = ${tileCount} - ${thisAnswer}",
          "var thisAnswer = ${thisAnswer} * 2",
          "var result = push ${thisAnswer}",
          "var noDups = []"
        ]
      }
    ],
    "19Routine": [
      "// Where are same colors ",
      {
        "func": "CALL",
        "routine": "sequenceRoutine",
        "arguments": {
          "cardProp": "color"
        }
      }
    ],
    "20Routine": [
      "// Where are sequential numbers ",
      {
        "func": "CALL",
        "routine": "sequenceRoutine",
        "arguments": {
          "cardProp": "text"
        }
      }
    ],
    "preventPiles": true,
    "dropOffsetX": 0,
    "dropOffsetY": 0,
    "sequenceRoutine": [
      "var seqArray = []",
      "var finalArray = []",
      "var noDups = []",
      "var finalString = ''",
      {
        "func": "FOREACH",
        "range": [
          4
        ],
        "loopRoutine": [
          {
            "func": "SELECT",
            "type": "card",
            "property": "parent",
            "value": "hand${value}",
            "sortBy": {
              "key": "z"
            }
          },
          {
            "func": "GET",
            "aggregation": "array",
            "property": "${cardProp}",
            "variable": "numbers"
          },
          {
            "func": "FOREACH",
            "in": "${numbers}",
            "loopRoutine": [
              "var nextIndex = ${key} + 1",
              "var nextNumber = ${value} + 1",
              {
                "func": "IF",
                "operand1": "${cardProp}",
                "operand2": "text",
                "thenRoutine": [
                  "var isSeq = ${nextNumber} == ${numbers.$nextIndex}"
                ],
                "elseRoutine": [
                  "var isSeq = ${numbers.$key} == ${numbers.$nextIndex}"
                ]
              },
              {
                "func": "IF",
                "condition": "${isSeq}",
                "thenRoutine": [
                  "var seqArray = push true"
                ],
                "elseRoutine": [
                  "var seqArray = push false"
                ]
              }
            ]
          },
          "var seqArray = remove 4",
          {
            "func": "IF",
            "condition": "${seqArray.0}",
            "thenRoutine": [
              "var finalArray = push 'AB'"
            ]
          },
          {
            "func": "IF",
            "condition": "${seqArray.1}",
            "thenRoutine": [
              "var finalArray = push 'BC'"
            ],
            "elseRoutine": [
              "var finalArray = push '\\u000a'"
            ]
          },
          {
            "func": "IF",
            "condition": "${seqArray.2}",
            "thenRoutine": [
              "var finalArray = push 'CD'"
            ],
            "elseRoutine": [
              "var finalArray = push '\\u000a'"
            ]
          },
          {
            "func": "IF",
            "condition": "${seqArray.3}",
            "thenRoutine": [
              "var finalArray = push 'DE'"
            ],
            "elseRoutine": [
              "var finalArray = push '\\u000a'"
            ]
          },
          {
            "func": "FOREACH",
            "in": "${finalArray}",
            "loopRoutine": [
              "var finalString = ${finalString} concat ${finalArray.$key}"
            ]
          },
          {
            "func": "FOREACH",
            "in": "${finalString}",
            "loopRoutine": [
              "var firstIndex = ${finalString} indexOf ${value}",
              {
                "func": "IF",
                "operand1": "${key}",
                "relation": "==",
                "operand2": "${firstIndex}",
                "thenRoutine": [
                  "var noDups = push ${value}"
                ]
              }
            ]
          },
          "var noCommas = ''",
          {
            "func": "FOREACH",
            "in": "${noDups}",
            "loopRoutine": [
              {
                "func": "IF",
                "operand1": "${value}",
                "operand2": ",",
                "elseRoutine": [
                  "var noCommas = ${noCommas} + ${value}"
                ]
              }
            ]
          },
          {
            "func": "IF",
            "operand1": "${noCommas}",
            "operand2": "\n",
            "thenRoutine": [
              "var noCommas = 'None'"
            ]
          },
          "var result = push ${noCommas}",
          "var finalArray = []",
          "var finalString = ''",
          "var noDups = []",
          "var seqArray = []"
        ]
      }
    ],
    "letters4": [
      "A",
      "B",
      "C",
      "D"
    ],
    "letters5": [
      "A",
      "B",
      "C",
      "D",
      "E"
    ],
    "css": {
      "background": "#ffffff80"
    },
    "array89": [
      "8b",
      "9b"
    ],
    "array67": [
      "6b",
      "7b"
    ],
    "array34": [
      "3b",
      "4b"
    ],
    "array12": [
      "1b",
      "2b"
    ],
    "where2Routine": [
      "var whereArray = []",
      "var intArray = []",
      {
        "func": "FOREACH",
        "range": [
          4
        ],
        "loopRoutine": [
          "var key = ${value} - 1",
          {
            "func": "SELECT",
            "type": "card",
            "property": "parent",
            "value": "hand${value}",
            "sortBy": {
              "key": "z"
            }
          },
          {
            "func": "GET",
            "aggregation": "array",
            "property": "text",
            "variable": "numbers"
          },
          {
            "func": "IF",
            "operand1": "${pCOUNT}",
            "operand2": 4,
            "thenRoutine": [
              "var letterCount = ${PROPERTY letters4}"
            ],
            "elseRoutine": [
              "var letterCount = ${PROPERTY letters5}"
            ]
          },
          {
            "func": "FOREACH",
            "in": "${letterCount}",
            "loopRoutine": [
              "var isLetter = ${numbers.$key} == ${where}",
              {
                "func": "IF",
                "condition": "${isLetter}",
                "thenRoutine": [
                  "var whereArray = push ${value}"
                ]
              }
            ]
          },
          "var length = ${whereArray} length",
          {
            "func": "IF",
            "operand1": "${length}",
            "relation": ">",
            "operand2": 0,
            "thenRoutine": [
              "var intArray = ${where} + 's at: '",
              "var intArray = ${intArray} + ${whereArray}"
            ],
            "elseRoutine": [
              "var intArray = 'No ' + ${where}",
              "var intArray = ${intArray} + 's'"
            ]
          },
          "var result = push ${intArray}",
          "var whereArray = []"
        ]
      }
    ]
  },
  "answer1": {
    "id": "answer1",
    "y": 858,
    "css": {
      "border": "1px solid black",
      "font-size": "35px",
      "background": "black",
      "color": "white",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "z": 22,
    "x": 1361,
    "borderRadius": 8,
    "height": 110,
    "width": 180,
    "movable": false,
    "onlyVisibleForSeat": "seat1"
  },
  "boardQuestionsHolder": {
    "type": "holder",
    "id": "boardQuestionsHolder",
    "x": 50,
    "y": 68,
    "width": 1506,
    "height": 150,
    "z": 25,
    "dropOffsetX": 0,
    "dropOffsetY": 0,
    "stackOffsetX": 251,
    "onEnter": {
      "activeFace": 1
    },
    "css": {
      "background": "#ffffff80"
    }
  },
  "turn": {
    "type": "button",
    "id": "turn",
    "x": 1430,
    "y": 795,
    "z": 2,
    "clickRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY mode OF solo}",
        "thenRoutine": [
          {
            "func": "TURN",
            "turnCycle": "seat",
            "turn": "seat1"
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY level OF solo}",
            "operand2": "normal",
            "thenRoutine": [
              {
                "func": "IF",
                "operand1": "${PROPERTY soloCount OF solo}",
                "relation": "<=",
                "operand2": 2,
                "thenRoutine": [
                  {
                    "func": "SELECT",
                    "property": "parent",
                    "value": "boardQuestionsHolder"
                  },
                  {
                    "func": "GET",
                    "property": "id",
                    "aggregation": "array"
                  },
                  "var removeCard = shuffle ${id}",
                  "var removeCard = ${removeCard.0}",
                  {
                    "func": "SELECT",
                    "type": "card",
                    "property": "id",
                    "value": "${removeCard}"
                  },
                  {
                    "func": "MOVE",
                    "to": "discardHolder"
                  }
                ]
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "TURN"
          }
        ]
      },
      {
        "func": "MOVE",
        "from": "questionsDeckHolder",
        "to": "boardQuestionsHolder",
        "fillTo": 6
      }
    ],
    "width": 50,
    "height": 50,
    "text": "Turn"
  },
  "letterLabelHand": {
    "id": "letterLabelHand",
    "x": 652,
    "y": 972,
    "width": 240,
    "height": 50,
    "layer": -2,
    "movable": false,
    "css": {
      "font-size": "22px"
    },
    "text": "A          B           C          D"
  },
  "letterLabelHandE": {
    "id": "letterLabelHandE",
    "x": 937,
    "y": 972,
    "width": 20,
    "height": 50,
    "layer": -2,
    "movable": false,
    "css": {
      "font-size": "22px"
    },
    "text": "E",
    "hide4": true
  },
  "answerLabel": {
    "id": "answerLabel",
    "x": 1412,
    "y": 968,
    "height": 50,
    "layer": -2,
    "movable": false,
    "css": {
      "font-size": "22px"
    },
    "text": "answer"
  },
  "questionLabel": {
    "id": "questionLabel",
    "x": 114,
    "y": 407,
    "height": 30,
    "layer": -2,
    "movable": false,
    "css": {
      "font-size": "22px"
    },
    "text": "question"
  },
  "boardTiles": {
    "type": "holder",
    "id": "boardTiles",
    "index": 2,
    "x": 3,
    "y": 858,
    "width": 357,
    "height": 110,
    "z": 24,
    "dropOffsetX": 0,
    "dropOffsetY": 0,
    "onEnter": {
      "activeFace": 0
    },
    "stackOffsetX": 71,
    "enterRoutine": [
      {
        "func": "SORT",
        "holder": "${PROPERTY id}",
        "key": "color"
      },
      {
        "func": "SORT",
        "holder": "${PROPERTY id}",
        "key": "text"
      }
    ],
    "classes": "transparent",
    "dropLimit": 0
  },
  "holderCover2": {
    "id": "holderCover2",
    "x": -6,
    "y": 857,
    "width": 365,
    "height": 120,
    "movable": false
  },
  "holderCover1": {
    "id": "holderCover1",
    "x": 1319,
    "y": 241,
    "width": 265,
    "height": 170,
    "movable": false
  },
  "answer2": {
    "inheritFrom": {
      "answer1": "*"
    },
    "id": "answer2",
    "x": 1361,
    "y": 858,
    "scale": 1,
    "onlyVisibleForSeat": "seat2",
    "text": ""
  },
  "answer3": {
    "id": "answer3",
    "x": 1361,
    "y": 858,
    "scale": 1,
    "onlyVisibleForSeat": "seat3",
    "inheritFrom": {
      "answer1": "*"
    },
    "text": ""
  },
  "answer4": {
    "id": "answer4",
    "x": 1361,
    "y": 858,
    "scale": 1,
    "inheritFrom": {
      "answer1": "*"
    },
    "layer": 1,
    "onlyVisibleForSeat": "seat4",
    "text": ""
  },
  "hand2": {
    "inheritFrom": {
      "hand1": "*"
    },
    "type": "holder",
    "id": "hand2",
    "x": 623,
    "y": 858,
    "index": 2,
    "onlyVisibleForSeat": "seat2"
  },
  "hand3": {
    "inheritFrom": {
      "hand1": "*"
    },
    "type": "holder",
    "id": "hand3",
    "x": 623,
    "y": 858,
    "index": 3,
    "onlyVisibleForSeat": "seat3"
  },
  "hand4": {
    "inheritFrom": {
      "hand1": "*"
    },
    "type": "holder",
    "id": "hand4",
    "x": 623,
    "y": 858,
    "index": 4,
    "onlyVisibleForSeat": "seat4"
  },
  "23ic": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "0b",
    "id": "23ic",
    "z": 43811,
    "parent": "aakb"
  },
  "es73": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "1b",
    "id": "es73",
    "z": 43816,
    "parent": "aakb"
  },
  "ew6j": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "2b",
    "id": "ew6j",
    "z": 43810,
    "parent": "aakb"
  },
  "zvr2": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "3b",
    "id": "zvr2",
    "z": 43812,
    "parent": "aakb"
  },
  "zvln": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "4b",
    "id": "zvln",
    "z": 43823,
    "parent": "aakb"
  },
  "y3nr": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "5b",
    "id": "y3nr",
    "z": 43817,
    "parent": "aakb"
  },
  "twhn": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "6b",
    "id": "twhn",
    "z": 43828,
    "parent": "aakb"
  },
  "2rfb": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "7b",
    "id": "2rfb",
    "z": 43809,
    "parent": "aakb"
  },
  "kpch": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "8b",
    "id": "kpch",
    "z": 43819,
    "parent": "aakb"
  },
  "dcbp": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "9b",
    "id": "dcbp",
    "z": 43822,
    "parent": "aakb"
  },
  "g3za": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "0w",
    "id": "g3za",
    "z": 43815,
    "parent": "aakb"
  },
  "7o6j": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "1w",
    "id": "7o6j",
    "z": 43824,
    "parent": "aakb"
  },
  "rrqc": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "2w",
    "id": "rrqc",
    "z": 43818,
    "parent": "aakb"
  },
  "ig58": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "3w",
    "id": "ig58",
    "z": 43827,
    "parent": "aakb"
  },
  "b0xa": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "4w",
    "id": "b0xa",
    "z": 43821,
    "parent": "aakb"
  },
  "n3t3": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "5w",
    "id": "n3t3",
    "z": 43826,
    "parent": "aakb"
  },
  "i16g": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "6w",
    "id": "i16g",
    "z": 43820,
    "parent": "aakb"
  },
  "8r3k": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "7w",
    "id": "8r3k",
    "z": 43825,
    "parent": "aakb"
  },
  "4v9r": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "8w",
    "id": "4v9r",
    "z": 43814,
    "parent": "aakb"
  },
  "qbql": {
    "deck": "numbersDeck",
    "type": "card",
    "cardType": "9w",
    "id": "qbql",
    "z": 43813,
    "parent": "aakb"
  },
  "sheetBack2": {
    "inheritFrom": {
      "sheetBack1": "*"
    },
    "id": "sheetBack2",
    "x": 302,
    "y": 226,
    "onlyVisibleForSeat": "seat2",
    "activeFace": 0
  },
  "name4": {
    "inheritFrom": {
      "name1": "*"
    },
    "id": "name4",
    "parent": "sheetBack2",
    "player": "",
    "pid": 2
  },
  "name5": {
    "inheritFrom": {
      "name2": "*"
    },
    "id": "name5",
    "parent": "sheetBack2",
    "scale": 1,
    "player": "",
    "pid": 2
  },
  "name6": {
    "inheritFrom": {
      "name3": "*"
    },
    "id": "name6",
    "parent": "sheetBack2",
    "scale": 1,
    "player": "",
    "pid": 2
  },
  "letterLabel2": {
    "inheritFrom": {
      "letterLabel1": "*"
    },
    "id": "letterLabel2",
    "parent": "sheetBack2"
  },
  "markGroup21": {
    "inheritFrom": {
      "markGroup1": "*"
    },
    "id": "markGroup21",
    "parent": "sheetBack2"
  },
  "mark61": {
    "inheritFrom": {
      "mark1": "*"
    },
    "type": "card",
    "id": "mark61",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup21",
    "activeFace": 0
  },
  "mark62": {
    "inheritFrom": {
      "mark2": "*"
    },
    "type": "card",
    "id": "mark62",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup21",
    "activeFace": 0
  },
  "mark63": {
    "inheritFrom": {
      "mark3": "*"
    },
    "type": "card",
    "id": "mark63",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup21",
    "activeFace": 0
  },
  "markGroup22": {
    "inheritFrom": {
      "markGroup2": "*"
    },
    "id": "markGroup22",
    "parent": "sheetBack2"
  },
  "mark64": {
    "inheritFrom": {
      "mark4": "*"
    },
    "type": "card",
    "id": "mark64",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup22",
    "activeFace": 0
  },
  "mark65": {
    "inheritFrom": {
      "mark5": "*"
    },
    "type": "card",
    "id": "mark65",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup22",
    "activeFace": 0
  },
  "mark66": {
    "inheritFrom": {
      "mark6": "*"
    },
    "type": "card",
    "id": "mark66",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup22",
    "activeFace": 0
  },
  "markGroup23": {
    "inheritFrom": {
      "markGroup3": "*"
    },
    "id": "markGroup23",
    "parent": "sheetBack2"
  },
  "mark67": {
    "inheritFrom": {
      "mark7": "*"
    },
    "type": "card",
    "id": "mark67",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup23",
    "activeFace": 0
  },
  "mark68": {
    "inheritFrom": {
      "mark8": "*"
    },
    "type": "card",
    "id": "mark68",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup23",
    "activeFace": 0
  },
  "mark69": {
    "inheritFrom": {
      "mark9": "*"
    },
    "type": "card",
    "id": "mark69",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup23",
    "activeFace": 0
  },
  "markGroup24": {
    "inheritFrom": {
      "markGroup4": "*"
    },
    "id": "markGroup24",
    "parent": "sheetBack2"
  },
  "mark70": {
    "inheritFrom": {
      "mark10": "*"
    },
    "type": "card",
    "id": "mark70",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup24",
    "activeFace": 0
  },
  "mark71": {
    "inheritFrom": {
      "mark11": "*"
    },
    "type": "card",
    "id": "mark71",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup24",
    "activeFace": 0
  },
  "mark72": {
    "inheritFrom": {
      "mark12": "*"
    },
    "type": "card",
    "id": "mark72",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup24",
    "activeFace": 0
  },
  "markGroup25": {
    "inheritFrom": {
      "markGroup5": "*"
    },
    "id": "markGroup25",
    "parent": "sheetBack2",
    "scale": 1
  },
  "mark73": {
    "inheritFrom": {
      "mark13": "*"
    },
    "type": "card",
    "id": "mark73",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup25",
    "activeFace": 0
  },
  "mark74": {
    "inheritFrom": {
      "mark14": "*"
    },
    "type": "card",
    "id": "mark74",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup25",
    "activeFace": 0
  },
  "mark75": {
    "inheritFrom": {
      "mark15": "*"
    },
    "type": "card",
    "id": "mark75",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup25",
    "activeFace": 0
  },
  "line10": {
    "inheritFrom": {
      "line1": "*"
    },
    "id": "line10",
    "parent": "sheetBack2"
  },
  "line11": {
    "inheritFrom": {
      "line2": "*"
    },
    "id": "line11",
    "parent": "sheetBack2"
  },
  "line12": {
    "inheritFrom": {
      "line3": "*"
    },
    "id": "line12",
    "parent": "sheetBack2"
  },
  "line13": {
    "inheritFrom": {
      "line4": "*"
    },
    "id": "line13",
    "parent": "sheetBack2"
  },
  "line14": {
    "inheritFrom": {
      "line5": "*"
    },
    "id": "line14",
    "parent": "sheetBack2"
  },
  "line15": {
    "inheritFrom": {
      "line6": "*"
    },
    "id": "line15",
    "parent": "sheetBack2"
  },
  "markGroup26": {
    "inheritFrom": {
      "markGroup6": "*"
    },
    "id": "markGroup26",
    "parent": "sheetBack2",
    "scale": 1
  },
  "mark76": {
    "inheritFrom": {
      "mark16": "*"
    },
    "type": "card",
    "id": "mark76",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup26",
    "activeFace": 0
  },
  "mark77": {
    "inheritFrom": {
      "mark17": "*"
    },
    "type": "card",
    "id": "mark77",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup26",
    "activeFace": 0
  },
  "mark78": {
    "inheritFrom": {
      "mark18": "*"
    },
    "type": "card",
    "id": "mark78",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup26",
    "activeFace": 0
  },
  "markGroup27": {
    "inheritFrom": {
      "markGroup7": "*"
    },
    "id": "markGroup27",
    "parent": "sheetBack2",
    "scale": 1
  },
  "mark79": {
    "inheritFrom": {
      "mark19": "*"
    },
    "type": "card",
    "id": "mark79",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup27",
    "activeFace": 0
  },
  "mark80": {
    "inheritFrom": {
      "mark20": "*"
    },
    "type": "card",
    "id": "mark80",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup27",
    "activeFace": 0
  },
  "mark81": {
    "inheritFrom": {
      "mark21": "*"
    },
    "type": "card",
    "id": "mark81",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup27",
    "activeFace": 0
  },
  "markGroup28": {
    "inheritFrom": {
      "markGroup8": "*"
    },
    "id": "markGroup28",
    "parent": "sheetBack2",
    "scale": 1
  },
  "mark82": {
    "inheritFrom": {
      "mark22": "*"
    },
    "type": "card",
    "id": "mark82",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup28",
    "activeFace": 0
  },
  "mark83": {
    "inheritFrom": {
      "mark23": "*"
    },
    "type": "card",
    "id": "mark83",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup28",
    "activeFace": 0
  },
  "mark84": {
    "inheritFrom": {
      "mark24": "*"
    },
    "type": "card",
    "id": "mark84",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup28",
    "activeFace": 0
  },
  "markGroup29": {
    "inheritFrom": {
      "markGroup9": "*"
    },
    "id": "markGroup29",
    "parent": "sheetBack2",
    "scale": 1
  },
  "mark85": {
    "inheritFrom": {
      "mark25": "*"
    },
    "type": "card",
    "id": "mark85",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup29",
    "activeFace": 0
  },
  "mark86": {
    "inheritFrom": {
      "mark26": "*"
    },
    "type": "card",
    "id": "mark86",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup29",
    "activeFace": 0
  },
  "mark87": {
    "inheritFrom": {
      "mark27": "*"
    },
    "type": "card",
    "id": "mark87",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup29",
    "activeFace": 0
  },
  "markGroup30": {
    "inheritFrom": {
      "markGroup10": "*"
    },
    "id": "markGroup30",
    "parent": "sheetBack2",
    "scale": 1
  },
  "mark88": {
    "inheritFrom": {
      "mark28": "*"
    },
    "type": "card",
    "id": "mark88",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup30",
    "activeFace": 0
  },
  "mark89": {
    "inheritFrom": {
      "mark29": "*"
    },
    "type": "card",
    "id": "mark89",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup30",
    "activeFace": 0
  },
  "mark90": {
    "inheritFrom": {
      "mark30": "*"
    },
    "type": "card",
    "id": "mark90",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup30",
    "activeFace": 0
  },
  "markGroup31": {
    "inheritFrom": {
      "markGroup11": "*"
    },
    "id": "markGroup31",
    "parent": "sheetBack2",
    "scale": 1
  },
  "mark91": {
    "inheritFrom": {
      "mark31": "*"
    },
    "type": "card",
    "id": "mark91",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup31",
    "activeFace": 0
  },
  "mark92": {
    "inheritFrom": {
      "mark32": "*"
    },
    "type": "card",
    "id": "mark92",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup31",
    "activeFace": 0
  },
  "mark93": {
    "inheritFrom": {
      "mark33": "*"
    },
    "type": "card",
    "id": "mark93",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup31",
    "activeFace": 0
  },
  "markGroup32": {
    "inheritFrom": {
      "markGroup12": "*"
    },
    "id": "markGroup32",
    "parent": "sheetBack2",
    "scale": 1
  },
  "mark94": {
    "inheritFrom": {
      "mark34": "*"
    },
    "type": "card",
    "id": "mark94",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup32",
    "activeFace": 0
  },
  "mark95": {
    "inheritFrom": {
      "mark35": "*"
    },
    "type": "card",
    "id": "mark95",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup32",
    "activeFace": 0
  },
  "mark96": {
    "inheritFrom": {
      "mark36": "*"
    },
    "type": "card",
    "id": "mark96",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup32",
    "activeFace": 0
  },
  "markGroup33": {
    "inheritFrom": {
      "markGroup13": "*"
    },
    "id": "markGroup33",
    "parent": "sheetBack2",
    "scale": 1
  },
  "mark97": {
    "inheritFrom": {
      "mark37": "*"
    },
    "type": "card",
    "id": "mark97",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup33",
    "activeFace": 0
  },
  "mark98": {
    "inheritFrom": {
      "mark38": "*"
    },
    "type": "card",
    "id": "mark98",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup33",
    "activeFace": 0
  },
  "mark99": {
    "inheritFrom": {
      "mark39": "*"
    },
    "type": "card",
    "id": "mark99",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup33",
    "activeFace": 0
  },
  "markGroup34": {
    "inheritFrom": {
      "markGroup14": "*"
    },
    "id": "markGroup34",
    "parent": "sheetBack2",
    "scale": 1
  },
  "mark100": {
    "inheritFrom": {
      "mark40": "*"
    },
    "type": "card",
    "id": "mark100",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup34",
    "activeFace": 0
  },
  "mark101": {
    "inheritFrom": {
      "mark41": "*"
    },
    "type": "card",
    "id": "mark101",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup34",
    "activeFace": 0
  },
  "mark102": {
    "inheritFrom": {
      "mark42": "*"
    },
    "type": "card",
    "id": "mark102",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup34",
    "activeFace": 0
  },
  "markGroup35": {
    "inheritFrom": {
      "markGroup15": "*"
    },
    "id": "markGroup35",
    "parent": "sheetBack2",
    "scale": 1
  },
  "mark103": {
    "inheritFrom": {
      "mark43": "*"
    },
    "type": "card",
    "id": "mark103",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup35",
    "activeFace": 0
  },
  "mark104": {
    "inheritFrom": {
      "mark44": "*"
    },
    "type": "card",
    "id": "mark104",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup35",
    "activeFace": 0
  },
  "mark105": {
    "inheritFrom": {
      "mark45": "*"
    },
    "type": "card",
    "id": "mark105",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup35",
    "activeFace": 0
  },
  "line16": {
    "inheritFrom": {
      "line7": "*"
    },
    "id": "line16",
    "parent": "sheetBack2"
  },
  "line17": {
    "inheritFrom": {
      "line8": "*"
    },
    "id": "line17",
    "parent": "sheetBack2"
  },
  "line18": {
    "inheritFrom": {
      "line9": "*"
    },
    "id": "line18",
    "parent": "sheetBack2"
  },
  "gridLabel16": {
    "inheritFrom": {
      "gridLabel1": "*"
    },
    "type": "label",
    "id": "gridLabel16",
    "parent": "sheetBack2",
    "text": ""
  },
  "gridLabel17": {
    "inheritFrom": {
      "gridLabel2": "*"
    },
    "type": "label",
    "id": "gridLabel17",
    "parent": "sheetBack2",
    "text": ""
  },
  "gridLabel18": {
    "inheritFrom": {
      "gridLabel3": "*"
    },
    "type": "label",
    "id": "gridLabel18",
    "parent": "sheetBack2",
    "text": ""
  },
  "gridLabel19": {
    "inheritFrom": {
      "gridLabel4": "*"
    },
    "type": "label",
    "id": "gridLabel19",
    "parent": "sheetBack2",
    "text": ""
  },
  "gridLabel20": {
    "inheritFrom": {
      "gridLabel5": "*"
    },
    "type": "label",
    "id": "gridLabel20",
    "parent": "sheetBack2",
    "scale": 1,
    "text": ""
  },
  "gridLabel21": {
    "inheritFrom": {
      "gridLabel6": "*"
    },
    "type": "label",
    "id": "gridLabel21",
    "parent": "sheetBack2",
    "scale": 1,
    "text": ""
  },
  "gridLabel22": {
    "inheritFrom": {
      "gridLabel7": "*"
    },
    "type": "label",
    "id": "gridLabel22",
    "parent": "sheetBack2",
    "scale": 1,
    "text": ""
  },
  "gridLabel23": {
    "inheritFrom": {
      "gridLabel8": "*"
    },
    "type": "label",
    "id": "gridLabel23",
    "parent": "sheetBack2",
    "scale": 1,
    "text": ""
  },
  "gridLabel24": {
    "inheritFrom": {
      "gridLabel9": "*"
    },
    "type": "label",
    "id": "gridLabel24",
    "parent": "sheetBack2",
    "scale": 1,
    "text": ""
  },
  "gridLabel25": {
    "inheritFrom": {
      "gridLabel10": "*"
    },
    "type": "label",
    "id": "gridLabel25",
    "parent": "sheetBack2",
    "scale": 1,
    "text": ""
  },
  "gridLabel26": {
    "inheritFrom": {
      "gridLabel11": "*"
    },
    "type": "label",
    "id": "gridLabel26",
    "parent": "sheetBack2",
    "scale": 1,
    "text": ""
  },
  "gridLabel27": {
    "inheritFrom": {
      "gridLabel12": "*"
    },
    "type": "label",
    "id": "gridLabel27",
    "parent": "sheetBack2",
    "scale": 1,
    "text": ""
  },
  "gridLabel28": {
    "inheritFrom": {
      "gridLabel13": "*"
    },
    "type": "label",
    "id": "gridLabel28",
    "parent": "sheetBack2",
    "scale": 1,
    "text": ""
  },
  "gridLabel29": {
    "inheritFrom": {
      "gridLabel14": "*"
    },
    "type": "label",
    "id": "gridLabel29",
    "parent": "sheetBack2",
    "scale": 1,
    "text": ""
  },
  "gridLabel30": {
    "inheritFrom": {
      "gridLabel15": "*"
    },
    "type": "label",
    "id": "gridLabel30",
    "parent": "sheetBack2",
    "scale": 1,
    "text": ""
  },
  "notesLabel4": {
    "inheritFrom": {
      "notesLabel1": "*"
    },
    "type": "label",
    "id": "notesLabel4",
    "parent": "sheetBack2",
    "text": ""
  },
  "notesLabel5": {
    "inheritFrom": {
      "notesLabel2": "*"
    },
    "type": "label",
    "id": "notesLabel5",
    "parent": "sheetBack2",
    "scale": 1,
    "text": ""
  },
  "notesLabel6": {
    "inheritFrom": {
      "notesLabel3": "*"
    },
    "type": "label",
    "id": "notesLabel6",
    "parent": "sheetBack2",
    "scale": 1,
    "text": ""
  },
  "letterLabelE2": {
    "inheritFrom": {
      "letterLabelE1": "*"
    },
    "id": "letterLabelE2",
    "parent": "sheetBack2",
    "scale": 1
  },
  "answerLetterLabel2": {
    "inheritFrom": {
      "answerLetterLabel1": "*"
    },
    "id": "answerLetterLabel2",
    "parent": "sheetBack2"
  },
  "markGroup36": {
    "inheritFrom": {
      "markGroup16": "*"
    },
    "id": "markGroup36",
    "parent": "sheetBack2",
    "checkColor": 2,
    "color": "white"
  },
  "mark106": {
    "inheritFrom": {
      "mark46": "*"
    },
    "type": "card",
    "id": "mark106",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup36",
    "activeFace": 0
  },
  "mark107": {
    "inheritFrom": {
      "mark47": "*"
    },
    "type": "card",
    "id": "mark107",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup36",
    "activeFace": 0
  },
  "mark108": {
    "inheritFrom": {
      "mark48": "*"
    },
    "type": "card",
    "id": "mark108",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup36",
    "activeFace": 0
  },
  "markGroup37": {
    "inheritFrom": {
      "markGroup17": "*"
    },
    "id": "markGroup37",
    "parent": "sheetBack2",
    "checkColor": 2,
    "color": "black"
  },
  "mark109": {
    "inheritFrom": {
      "mark49": "*"
    },
    "type": "card",
    "id": "mark109",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup37",
    "activeFace": 0
  },
  "mark110": {
    "inheritFrom": {
      "mark50": "*"
    },
    "type": "card",
    "id": "mark110",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup37",
    "activeFace": 0
  },
  "mark111": {
    "inheritFrom": {
      "mark51": "*"
    },
    "type": "card",
    "id": "mark111",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup37",
    "activeFace": 0
  },
  "markGroup38": {
    "inheritFrom": {
      "markGroup18": "*"
    },
    "id": "markGroup38",
    "parent": "sheetBack2",
    "checkColor": 2,
    "color": "black"
  },
  "mark112": {
    "inheritFrom": {
      "mark52": "*"
    },
    "type": "card",
    "id": "mark112",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup38",
    "activeFace": 0
  },
  "mark113": {
    "inheritFrom": {
      "mark53": "*"
    },
    "type": "card",
    "id": "mark113",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup38",
    "activeFace": 0
  },
  "mark114": {
    "inheritFrom": {
      "mark54": "*"
    },
    "type": "card",
    "id": "mark114",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup38",
    "activeFace": 0
  },
  "markGroup39": {
    "inheritFrom": {
      "markGroup19": "*"
    },
    "id": "markGroup39",
    "parent": "sheetBack2",
    "checkColor": 2,
    "color": "white"
  },
  "mark115": {
    "inheritFrom": {
      "mark55": "*"
    },
    "type": "card",
    "id": "mark115",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup39",
    "activeFace": 0
  },
  "mark116": {
    "inheritFrom": {
      "mark56": "*"
    },
    "type": "card",
    "id": "mark116",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup39",
    "activeFace": 0
  },
  "mark117": {
    "inheritFrom": {
      "mark57": "*"
    },
    "type": "card",
    "id": "mark117",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup39",
    "activeFace": 0
  },
  "markGroup40": {
    "inheritFrom": {
      "markGroup20": "*"
    },
    "id": "markGroup40",
    "parent": "sheetBack2",
    "scale": 0.6,
    "checkColor": 2,
    "color": "white"
  },
  "mark118": {
    "inheritFrom": {
      "mark58": "*"
    },
    "type": "card",
    "id": "mark118",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup40",
    "activeFace": 0
  },
  "mark119": {
    "inheritFrom": {
      "mark59": "*"
    },
    "type": "card",
    "id": "mark119",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup40",
    "activeFace": 0
  },
  "mark120": {
    "inheritFrom": {
      "mark60": "*"
    },
    "type": "card",
    "id": "mark120",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup40",
    "activeFace": 0
  },
  "answerLabel6": {
    "inheritFrom": {
      "answerLabel1": "*"
    },
    "type": "label",
    "id": "answerLabel6",
    "parent": "sheetBack2",
    "text": "",
    "checkNumber": 2,
    "color": "grey"
  },
  "answerLabel7": {
    "inheritFrom": {
      "answerLabel2": "*"
    },
    "type": "label",
    "id": "answerLabel7",
    "parent": "sheetBack2",
    "text": "",
    "checkNumber": 2,
    "color": "grey"
  },
  "answerLabel8": {
    "inheritFrom": {
      "answerLabel3": "*"
    },
    "type": "label",
    "id": "answerLabel8",
    "parent": "sheetBack2",
    "text": "",
    "checkNumber": 2,
    "color": "grey"
  },
  "answerLabel9": {
    "inheritFrom": {
      "answerLabel4": "*"
    },
    "type": "label",
    "id": "answerLabel9",
    "parent": "sheetBack2",
    "text": "",
    "checkNumber": 2,
    "color": "grey"
  },
  "answerLabel10": {
    "inheritFrom": {
      "answerLabel5": "*"
    },
    "type": "label",
    "id": "answerLabel10",
    "parent": "sheetBack2",
    "scale": 1,
    "text": "",
    "checkNumber": 2,
    "color": "grey"
  },
  "answerLetterLabelE2": {
    "inheritFrom": {
      "answerLetterLabelE1": "*"
    },
    "id": "answerLetterLabelE2",
    "parent": "sheetBack2",
    "scale": 1
  },
  "notesHeader2": {
    "inheritFrom": {
      "notesHeader1": "*"
    },
    "id": "notesHeader2",
    "parent": "sheetBack2",
    "scale": 1
  },
  "819o": {
    "inheritFrom": {
      "817o": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "5b",
    "id": "819o",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "4kmj": {
    "inheritFrom": {
      "3kmj": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "0b",
    "id": "4kmj",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "siwx1": {
    "inheritFrom": {
      "siwx": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "1b",
    "id": "siwx1",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "4hch": {
    "inheritFrom": {
      "3hch": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "2b",
    "id": "4hch",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "8vq4": {
    "inheritFrom": {
      "8vq3": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "3b",
    "id": "8vq4",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "cr6x": {
    "inheritFrom": {
      "cr5x": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "4b",
    "id": "cr6x",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "7l1m": {
    "inheritFrom": {
      "7l0m": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "6b",
    "id": "7l1m",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "faz3": {
    "inheritFrom": {
      "faz2": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "7b",
    "id": "faz3",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "100sa": {
    "inheritFrom": {
      "99sa": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "8b",
    "id": "100sa",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "67xx": {
    "inheritFrom": {
      "66xx": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "9b",
    "id": "67xx",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "va5g": {
    "inheritFrom": {
      "va4g": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "0w",
    "id": "va5g",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "uggx1": {
    "inheritFrom": {
      "uggx": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "1w",
    "id": "uggx1",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "i10js": {
    "inheritFrom": {
      "i9js": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "2w",
    "id": "i10js",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "f9j7": {
    "inheritFrom": {
      "f9j6": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "3w",
    "id": "f9j7",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "c91u": {
    "inheritFrom": {
      "c90u": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "4w",
    "id": "c91u",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "q0m5": {
    "inheritFrom": {
      "q0m4": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "6w",
    "id": "q0m5",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "ngwn1": {
    "inheritFrom": {
      "ngwn": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "7w",
    "id": "ngwn1",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "3fh8": {
    "inheritFrom": {
      "3fh7": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "8w",
    "id": "3fh8",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "9v14": {
    "inheritFrom": {
      "9v13": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "9w",
    "id": "9v14",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "820o": {
    "inheritFrom": {
      "818o": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "5w",
    "id": "820o",
    "parent": "sheetBack2",
    "activeFace": 0
  },
  "sheetBack3": {
    "inheritFrom": {
      "sheetBack1": "*"
    },
    "id": "sheetBack3",
    "x": 302,
    "y": 226,
    "onlyVisibleForSeat": "seat3"
  },
  "name7": {
    "inheritFrom": {
      "name1": "*"
    },
    "id": "name7",
    "parent": "sheetBack3",
    "player": "",
    "pid": 3
  },
  "name8": {
    "inheritFrom": {
      "name2": "*"
    },
    "id": "name8",
    "parent": "sheetBack3",
    "scale": 1,
    "player": "",
    "pid": 3
  },
  "name9": {
    "inheritFrom": {
      "name3": "*"
    },
    "id": "name9",
    "parent": "sheetBack3",
    "scale": 1,
    "player": "",
    "pid": 3
  },
  "letterLabel3": {
    "inheritFrom": {
      "letterLabel1": "*"
    },
    "id": "letterLabel3",
    "parent": "sheetBack3"
  },
  "markGroup41": {
    "inheritFrom": {
      "markGroup1": "*"
    },
    "id": "markGroup41",
    "parent": "sheetBack3"
  },
  "mark121": {
    "inheritFrom": {
      "mark1": "*"
    },
    "type": "card",
    "id": "mark121",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup41",
    "activeFace": 0
  },
  "mark122": {
    "inheritFrom": {
      "mark2": "*"
    },
    "type": "card",
    "id": "mark122",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup41",
    "activeFace": 0
  },
  "mark123": {
    "inheritFrom": {
      "mark3": "*"
    },
    "type": "card",
    "id": "mark123",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup41",
    "activeFace": 0
  },
  "markGroup42": {
    "inheritFrom": {
      "markGroup2": "*"
    },
    "id": "markGroup42",
    "parent": "sheetBack3"
  },
  "mark124": {
    "inheritFrom": {
      "mark4": "*"
    },
    "type": "card",
    "id": "mark124",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup42",
    "activeFace": 0
  },
  "mark125": {
    "inheritFrom": {
      "mark5": "*"
    },
    "type": "card",
    "id": "mark125",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup42",
    "activeFace": 0
  },
  "mark126": {
    "inheritFrom": {
      "mark6": "*"
    },
    "type": "card",
    "id": "mark126",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup42",
    "activeFace": 0
  },
  "markGroup43": {
    "inheritFrom": {
      "markGroup3": "*"
    },
    "id": "markGroup43",
    "parent": "sheetBack3"
  },
  "mark127": {
    "inheritFrom": {
      "mark7": "*"
    },
    "type": "card",
    "id": "mark127",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup43",
    "activeFace": 0
  },
  "mark128": {
    "inheritFrom": {
      "mark8": "*"
    },
    "type": "card",
    "id": "mark128",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup43",
    "activeFace": 0
  },
  "mark129": {
    "inheritFrom": {
      "mark9": "*"
    },
    "type": "card",
    "id": "mark129",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup43",
    "activeFace": 0
  },
  "markGroup44": {
    "inheritFrom": {
      "markGroup4": "*"
    },
    "id": "markGroup44",
    "parent": "sheetBack3"
  },
  "mark130": {
    "inheritFrom": {
      "mark10": "*"
    },
    "type": "card",
    "id": "mark130",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup44",
    "activeFace": 0
  },
  "mark131": {
    "inheritFrom": {
      "mark11": "*"
    },
    "type": "card",
    "id": "mark131",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup44",
    "activeFace": 0
  },
  "mark132": {
    "inheritFrom": {
      "mark12": "*"
    },
    "type": "card",
    "id": "mark132",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup44",
    "activeFace": 0
  },
  "markGroup45": {
    "inheritFrom": {
      "markGroup5": "*"
    },
    "id": "markGroup45",
    "parent": "sheetBack3",
    "scale": 1
  },
  "mark133": {
    "inheritFrom": {
      "mark13": "*"
    },
    "type": "card",
    "id": "mark133",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup45",
    "activeFace": 0
  },
  "mark134": {
    "inheritFrom": {
      "mark14": "*"
    },
    "type": "card",
    "id": "mark134",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup45",
    "activeFace": 0
  },
  "mark135": {
    "inheritFrom": {
      "mark15": "*"
    },
    "type": "card",
    "id": "mark135",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup45",
    "activeFace": 0
  },
  "line19": {
    "inheritFrom": {
      "line1": "*"
    },
    "id": "line19",
    "parent": "sheetBack3"
  },
  "line20": {
    "inheritFrom": {
      "line2": "*"
    },
    "id": "line20",
    "parent": "sheetBack3"
  },
  "line21": {
    "inheritFrom": {
      "line3": "*"
    },
    "id": "line21",
    "parent": "sheetBack3"
  },
  "line22": {
    "inheritFrom": {
      "line4": "*"
    },
    "id": "line22",
    "parent": "sheetBack3"
  },
  "line23": {
    "inheritFrom": {
      "line5": "*"
    },
    "id": "line23",
    "parent": "sheetBack3"
  },
  "line24": {
    "inheritFrom": {
      "line6": "*"
    },
    "id": "line24",
    "parent": "sheetBack3"
  },
  "markGroup46": {
    "inheritFrom": {
      "markGroup6": "*"
    },
    "id": "markGroup46",
    "parent": "sheetBack3",
    "scale": 1
  },
  "mark136": {
    "inheritFrom": {
      "mark16": "*"
    },
    "type": "card",
    "id": "mark136",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup46",
    "activeFace": 0
  },
  "mark137": {
    "inheritFrom": {
      "mark17": "*"
    },
    "type": "card",
    "id": "mark137",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup46",
    "activeFace": 0
  },
  "mark138": {
    "inheritFrom": {
      "mark18": "*"
    },
    "type": "card",
    "id": "mark138",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup46",
    "activeFace": 0
  },
  "markGroup47": {
    "inheritFrom": {
      "markGroup7": "*"
    },
    "id": "markGroup47",
    "parent": "sheetBack3",
    "scale": 1
  },
  "mark139": {
    "inheritFrom": {
      "mark19": "*"
    },
    "type": "card",
    "id": "mark139",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup47",
    "activeFace": 0
  },
  "mark140": {
    "inheritFrom": {
      "mark20": "*"
    },
    "type": "card",
    "id": "mark140",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup47",
    "activeFace": 0
  },
  "mark141": {
    "inheritFrom": {
      "mark21": "*"
    },
    "type": "card",
    "id": "mark141",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup47",
    "activeFace": 0
  },
  "markGroup48": {
    "inheritFrom": {
      "markGroup8": "*"
    },
    "id": "markGroup48",
    "parent": "sheetBack3",
    "scale": 1
  },
  "mark142": {
    "inheritFrom": {
      "mark22": "*"
    },
    "type": "card",
    "id": "mark142",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup48",
    "activeFace": 0
  },
  "mark143": {
    "inheritFrom": {
      "mark23": "*"
    },
    "type": "card",
    "id": "mark143",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup48",
    "activeFace": 0
  },
  "mark144": {
    "inheritFrom": {
      "mark24": "*"
    },
    "type": "card",
    "id": "mark144",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup48",
    "activeFace": 0
  },
  "markGroup49": {
    "inheritFrom": {
      "markGroup9": "*"
    },
    "id": "markGroup49",
    "parent": "sheetBack3",
    "scale": 1
  },
  "mark145": {
    "inheritFrom": {
      "mark25": "*"
    },
    "type": "card",
    "id": "mark145",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup49",
    "activeFace": 0
  },
  "mark146": {
    "inheritFrom": {
      "mark26": "*"
    },
    "type": "card",
    "id": "mark146",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup49",
    "activeFace": 0
  },
  "mark147": {
    "inheritFrom": {
      "mark27": "*"
    },
    "type": "card",
    "id": "mark147",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup49",
    "activeFace": 0
  },
  "markGroup50": {
    "inheritFrom": {
      "markGroup10": "*"
    },
    "id": "markGroup50",
    "parent": "sheetBack3",
    "scale": 1
  },
  "mark148": {
    "inheritFrom": {
      "mark28": "*"
    },
    "type": "card",
    "id": "mark148",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup50",
    "activeFace": 0
  },
  "mark149": {
    "inheritFrom": {
      "mark29": "*"
    },
    "type": "card",
    "id": "mark149",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup50",
    "activeFace": 0
  },
  "mark150": {
    "inheritFrom": {
      "mark30": "*"
    },
    "type": "card",
    "id": "mark150",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup50",
    "activeFace": 0
  },
  "markGroup51": {
    "inheritFrom": {
      "markGroup11": "*"
    },
    "id": "markGroup51",
    "parent": "sheetBack3",
    "scale": 1
  },
  "mark151": {
    "inheritFrom": {
      "mark31": "*"
    },
    "type": "card",
    "id": "mark151",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup51",
    "activeFace": 0
  },
  "mark152": {
    "inheritFrom": {
      "mark32": "*"
    },
    "type": "card",
    "id": "mark152",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup51",
    "activeFace": 0
  },
  "mark153": {
    "inheritFrom": {
      "mark33": "*"
    },
    "type": "card",
    "id": "mark153",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup51",
    "activeFace": 0
  },
  "markGroup52": {
    "inheritFrom": {
      "markGroup12": "*"
    },
    "id": "markGroup52",
    "parent": "sheetBack3",
    "scale": 1
  },
  "mark154": {
    "inheritFrom": {
      "mark34": "*"
    },
    "type": "card",
    "id": "mark154",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup52",
    "activeFace": 0
  },
  "mark155": {
    "inheritFrom": {
      "mark35": "*"
    },
    "type": "card",
    "id": "mark155",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup52",
    "activeFace": 0
  },
  "mark156": {
    "inheritFrom": {
      "mark36": "*"
    },
    "type": "card",
    "id": "mark156",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup52",
    "activeFace": 0
  },
  "markGroup53": {
    "inheritFrom": {
      "markGroup13": "*"
    },
    "id": "markGroup53",
    "parent": "sheetBack3",
    "scale": 1
  },
  "mark157": {
    "inheritFrom": {
      "mark37": "*"
    },
    "type": "card",
    "id": "mark157",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup53",
    "activeFace": 0
  },
  "mark158": {
    "inheritFrom": {
      "mark38": "*"
    },
    "type": "card",
    "id": "mark158",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup53",
    "activeFace": 0
  },
  "mark159": {
    "inheritFrom": {
      "mark39": "*"
    },
    "type": "card",
    "id": "mark159",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup53",
    "activeFace": 0
  },
  "markGroup54": {
    "inheritFrom": {
      "markGroup14": "*"
    },
    "id": "markGroup54",
    "parent": "sheetBack3",
    "scale": 1
  },
  "mark160": {
    "inheritFrom": {
      "mark40": "*"
    },
    "type": "card",
    "id": "mark160",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup54",
    "activeFace": 0
  },
  "mark161": {
    "inheritFrom": {
      "mark41": "*"
    },
    "type": "card",
    "id": "mark161",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup54",
    "activeFace": 0
  },
  "mark162": {
    "inheritFrom": {
      "mark42": "*"
    },
    "type": "card",
    "id": "mark162",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup54",
    "activeFace": 0
  },
  "markGroup55": {
    "inheritFrom": {
      "markGroup15": "*"
    },
    "id": "markGroup55",
    "parent": "sheetBack3",
    "scale": 1
  },
  "mark163": {
    "inheritFrom": {
      "mark43": "*"
    },
    "type": "card",
    "id": "mark163",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup55",
    "activeFace": 0
  },
  "mark164": {
    "inheritFrom": {
      "mark44": "*"
    },
    "type": "card",
    "id": "mark164",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup55",
    "activeFace": 0
  },
  "mark165": {
    "inheritFrom": {
      "mark45": "*"
    },
    "type": "card",
    "id": "mark165",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup55",
    "activeFace": 0
  },
  "line25": {
    "inheritFrom": {
      "line7": "*"
    },
    "id": "line25",
    "parent": "sheetBack3"
  },
  "line26": {
    "inheritFrom": {
      "line8": "*"
    },
    "id": "line26",
    "parent": "sheetBack3"
  },
  "line27": {
    "inheritFrom": {
      "line9": "*"
    },
    "id": "line27",
    "parent": "sheetBack3"
  },
  "gridLabel31": {
    "inheritFrom": {
      "gridLabel1": "*"
    },
    "type": "label",
    "id": "gridLabel31",
    "parent": "sheetBack3",
    "text": ""
  },
  "gridLabel32": {
    "inheritFrom": {
      "gridLabel2": "*"
    },
    "type": "label",
    "id": "gridLabel32",
    "parent": "sheetBack3",
    "text": ""
  },
  "gridLabel33": {
    "inheritFrom": {
      "gridLabel3": "*"
    },
    "type": "label",
    "id": "gridLabel33",
    "parent": "sheetBack3",
    "text": ""
  },
  "gridLabel34": {
    "inheritFrom": {
      "gridLabel4": "*"
    },
    "type": "label",
    "id": "gridLabel34",
    "parent": "sheetBack3",
    "text": ""
  },
  "gridLabel35": {
    "inheritFrom": {
      "gridLabel5": "*"
    },
    "type": "label",
    "id": "gridLabel35",
    "parent": "sheetBack3",
    "scale": 1,
    "text": ""
  },
  "gridLabel36": {
    "inheritFrom": {
      "gridLabel6": "*"
    },
    "type": "label",
    "id": "gridLabel36",
    "parent": "sheetBack3",
    "scale": 1,
    "text": ""
  },
  "gridLabel37": {
    "inheritFrom": {
      "gridLabel7": "*"
    },
    "type": "label",
    "id": "gridLabel37",
    "parent": "sheetBack3",
    "scale": 1,
    "text": ""
  },
  "gridLabel38": {
    "inheritFrom": {
      "gridLabel8": "*"
    },
    "type": "label",
    "id": "gridLabel38",
    "parent": "sheetBack3",
    "scale": 1,
    "text": ""
  },
  "gridLabel39": {
    "inheritFrom": {
      "gridLabel9": "*"
    },
    "type": "label",
    "id": "gridLabel39",
    "parent": "sheetBack3",
    "scale": 1,
    "text": ""
  },
  "gridLabel40": {
    "inheritFrom": {
      "gridLabel10": "*"
    },
    "type": "label",
    "id": "gridLabel40",
    "parent": "sheetBack3",
    "scale": 1,
    "text": ""
  },
  "gridLabel41": {
    "inheritFrom": {
      "gridLabel11": "*"
    },
    "type": "label",
    "id": "gridLabel41",
    "parent": "sheetBack3",
    "scale": 1,
    "text": ""
  },
  "gridLabel42": {
    "inheritFrom": {
      "gridLabel12": "*"
    },
    "type": "label",
    "id": "gridLabel42",
    "parent": "sheetBack3",
    "scale": 1,
    "text": ""
  },
  "gridLabel43": {
    "inheritFrom": {
      "gridLabel13": "*"
    },
    "type": "label",
    "id": "gridLabel43",
    "parent": "sheetBack3",
    "scale": 1,
    "text": ""
  },
  "gridLabel44": {
    "inheritFrom": {
      "gridLabel14": "*"
    },
    "type": "label",
    "id": "gridLabel44",
    "parent": "sheetBack3",
    "scale": 1,
    "text": ""
  },
  "gridLabel45": {
    "inheritFrom": {
      "gridLabel15": "*"
    },
    "type": "label",
    "id": "gridLabel45",
    "parent": "sheetBack3",
    "scale": 1,
    "text": ""
  },
  "notesLabel7": {
    "inheritFrom": {
      "notesLabel1": "*"
    },
    "type": "label",
    "id": "notesLabel7",
    "parent": "sheetBack3",
    "text": ""
  },
  "notesLabel8": {
    "inheritFrom": {
      "notesLabel2": "*"
    },
    "type": "label",
    "id": "notesLabel8",
    "parent": "sheetBack3",
    "scale": 1,
    "text": ""
  },
  "notesLabel9": {
    "inheritFrom": {
      "notesLabel3": "*"
    },
    "type": "label",
    "id": "notesLabel9",
    "parent": "sheetBack3",
    "scale": 1,
    "text": ""
  },
  "letterLabelE3": {
    "inheritFrom": {
      "letterLabelE1": "*"
    },
    "id": "letterLabelE3",
    "parent": "sheetBack3",
    "scale": 1
  },
  "answerLetterLabel3": {
    "inheritFrom": {
      "answerLetterLabel1": "*"
    },
    "id": "answerLetterLabel3",
    "parent": "sheetBack3"
  },
  "markGroup56": {
    "inheritFrom": {
      "markGroup16": "*"
    },
    "id": "markGroup56",
    "parent": "sheetBack3",
    "checkColor": 3,
    "color": "white"
  },
  "mark166": {
    "inheritFrom": {
      "mark46": "*"
    },
    "type": "card",
    "id": "mark166",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup56",
    "activeFace": 0
  },
  "mark167": {
    "inheritFrom": {
      "mark47": "*"
    },
    "type": "card",
    "id": "mark167",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup56",
    "activeFace": 0
  },
  "mark168": {
    "inheritFrom": {
      "mark48": "*"
    },
    "type": "card",
    "id": "mark168",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup56",
    "activeFace": 0
  },
  "markGroup57": {
    "inheritFrom": {
      "markGroup17": "*"
    },
    "id": "markGroup57",
    "parent": "sheetBack3",
    "checkColor": 3,
    "color": "black"
  },
  "mark169": {
    "inheritFrom": {
      "mark49": "*"
    },
    "type": "card",
    "id": "mark169",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup57",
    "activeFace": 0
  },
  "mark170": {
    "inheritFrom": {
      "mark50": "*"
    },
    "type": "card",
    "id": "mark170",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup57",
    "activeFace": 0
  },
  "mark171": {
    "inheritFrom": {
      "mark51": "*"
    },
    "type": "card",
    "id": "mark171",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup57",
    "activeFace": 0
  },
  "markGroup58": {
    "inheritFrom": {
      "markGroup18": "*"
    },
    "id": "markGroup58",
    "parent": "sheetBack3",
    "checkColor": 3,
    "color": "black"
  },
  "mark172": {
    "inheritFrom": {
      "mark52": "*"
    },
    "type": "card",
    "id": "mark172",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup58",
    "activeFace": 0
  },
  "mark173": {
    "inheritFrom": {
      "mark53": "*"
    },
    "type": "card",
    "id": "mark173",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup58",
    "activeFace": 0
  },
  "mark174": {
    "inheritFrom": {
      "mark54": "*"
    },
    "type": "card",
    "id": "mark174",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup58",
    "activeFace": 0
  },
  "markGroup59": {
    "inheritFrom": {
      "markGroup19": "*"
    },
    "id": "markGroup59",
    "parent": "sheetBack3",
    "checkColor": 3,
    "color": "black"
  },
  "mark175": {
    "inheritFrom": {
      "mark55": "*"
    },
    "type": "card",
    "id": "mark175",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup59",
    "activeFace": 0
  },
  "mark176": {
    "inheritFrom": {
      "mark56": "*"
    },
    "type": "card",
    "id": "mark176",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup59",
    "activeFace": 0
  },
  "mark177": {
    "inheritFrom": {
      "mark57": "*"
    },
    "type": "card",
    "id": "mark177",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup59",
    "activeFace": 0
  },
  "markGroup60": {
    "inheritFrom": {
      "markGroup20": "*"
    },
    "id": "markGroup60",
    "parent": "sheetBack3",
    "scale": 0.6,
    "checkColor": 3,
    "color": "black"
  },
  "mark178": {
    "inheritFrom": {
      "mark58": "*"
    },
    "type": "card",
    "id": "mark178",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup60",
    "activeFace": 0
  },
  "mark179": {
    "inheritFrom": {
      "mark59": "*"
    },
    "type": "card",
    "id": "mark179",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup60",
    "activeFace": 0
  },
  "mark180": {
    "inheritFrom": {
      "mark60": "*"
    },
    "type": "card",
    "id": "mark180",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup60",
    "activeFace": 0
  },
  "answerLabel11": {
    "inheritFrom": {
      "answerLabel1": "*"
    },
    "type": "label",
    "id": "answerLabel11",
    "parent": "sheetBack3",
    "text": "",
    "checkNumber": 3,
    "color": "grey"
  },
  "answerLabel12": {
    "inheritFrom": {
      "answerLabel2": "*"
    },
    "type": "label",
    "id": "answerLabel12",
    "parent": "sheetBack3",
    "text": "",
    "checkNumber": 3,
    "color": "grey"
  },
  "answerLabel13": {
    "inheritFrom": {
      "answerLabel3": "*"
    },
    "type": "label",
    "id": "answerLabel13",
    "parent": "sheetBack3",
    "text": "",
    "checkNumber": 3,
    "color": "grey"
  },
  "answerLabel14": {
    "inheritFrom": {
      "answerLabel4": "*"
    },
    "type": "label",
    "id": "answerLabel14",
    "parent": "sheetBack3",
    "text": "",
    "checkNumber": 3,
    "color": "grey"
  },
  "answerLabel15": {
    "inheritFrom": {
      "answerLabel5": "*"
    },
    "type": "label",
    "id": "answerLabel15",
    "parent": "sheetBack3",
    "scale": 1,
    "text": "",
    "checkNumber": 3,
    "color": "grey"
  },
  "answerLetterLabelE3": {
    "inheritFrom": {
      "answerLetterLabelE1": "*"
    },
    "id": "answerLetterLabelE3",
    "parent": "sheetBack3",
    "scale": 1
  },
  "notesHeader3": {
    "inheritFrom": {
      "notesHeader1": "*"
    },
    "id": "notesHeader3",
    "parent": "sheetBack3",
    "scale": 1
  },
  "821o": {
    "inheritFrom": {
      "817o": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "5b",
    "id": "821o",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "5kmj": {
    "inheritFrom": {
      "3kmj": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "0b",
    "id": "5kmj",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "siwx2": {
    "inheritFrom": {
      "siwx": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "1b",
    "id": "siwx2",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "5hch": {
    "inheritFrom": {
      "3hch": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "2b",
    "id": "5hch",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "8vq5": {
    "inheritFrom": {
      "8vq3": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "3b",
    "id": "8vq5",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "cr7x": {
    "inheritFrom": {
      "cr5x": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "4b",
    "id": "cr7x",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "7l2m": {
    "inheritFrom": {
      "7l0m": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "6b",
    "id": "7l2m",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "faz4": {
    "inheritFrom": {
      "faz2": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "7b",
    "id": "faz4",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "101sa": {
    "inheritFrom": {
      "99sa": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "8b",
    "id": "101sa",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "68xx": {
    "inheritFrom": {
      "66xx": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "9b",
    "id": "68xx",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "va6g": {
    "inheritFrom": {
      "va4g": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "0w",
    "id": "va6g",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "uggx2": {
    "inheritFrom": {
      "uggx": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "1w",
    "id": "uggx2",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "i11js": {
    "inheritFrom": {
      "i9js": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "2w",
    "id": "i11js",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "f9j8": {
    "inheritFrom": {
      "f9j6": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "3w",
    "id": "f9j8",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "c92u": {
    "inheritFrom": {
      "c90u": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "4w",
    "id": "c92u",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "q0m6": {
    "inheritFrom": {
      "q0m4": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "6w",
    "id": "q0m6",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "ngwn2": {
    "inheritFrom": {
      "ngwn": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "7w",
    "id": "ngwn2",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "3fh9": {
    "inheritFrom": {
      "3fh7": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "8w",
    "id": "3fh9",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "9v15": {
    "inheritFrom": {
      "9v13": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "9w",
    "id": "9v15",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "822o": {
    "inheritFrom": {
      "818o": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "5w",
    "id": "822o",
    "parent": "sheetBack3",
    "activeFace": 0
  },
  "sheetBack4": {
    "inheritFrom": {
      "sheetBack1": "*"
    },
    "id": "sheetBack4",
    "x": 302,
    "y": 226,
    "onlyVisibleForSeat": "seat4",
    "activeFace": 0
  },
  "name10": {
    "inheritFrom": {
      "name1": "*"
    },
    "id": "name10",
    "parent": "sheetBack4",
    "player": "",
    "pid": 4
  },
  "name11": {
    "inheritFrom": {
      "name2": "*"
    },
    "id": "name11",
    "parent": "sheetBack4",
    "scale": 1,
    "player": "",
    "pid": 4
  },
  "name12": {
    "inheritFrom": {
      "name3": "*"
    },
    "id": "name12",
    "parent": "sheetBack4",
    "scale": 1,
    "player": "",
    "pid": 4
  },
  "letterLabel4": {
    "inheritFrom": {
      "letterLabel1": "*"
    },
    "id": "letterLabel4",
    "parent": "sheetBack4"
  },
  "markGroup61": {
    "inheritFrom": {
      "markGroup1": "*"
    },
    "id": "markGroup61",
    "parent": "sheetBack4"
  },
  "mark181": {
    "inheritFrom": {
      "mark1": "*"
    },
    "type": "card",
    "id": "mark181",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup61",
    "activeFace": 0
  },
  "mark182": {
    "inheritFrom": {
      "mark2": "*"
    },
    "type": "card",
    "id": "mark182",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup61",
    "activeFace": 0
  },
  "mark183": {
    "inheritFrom": {
      "mark3": "*"
    },
    "type": "card",
    "id": "mark183",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup61",
    "activeFace": 0
  },
  "markGroup62": {
    "inheritFrom": {
      "markGroup2": "*"
    },
    "id": "markGroup62",
    "parent": "sheetBack4"
  },
  "mark184": {
    "inheritFrom": {
      "mark4": "*"
    },
    "type": "card",
    "id": "mark184",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup62",
    "activeFace": 0
  },
  "mark185": {
    "inheritFrom": {
      "mark5": "*"
    },
    "type": "card",
    "id": "mark185",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup62",
    "activeFace": 0
  },
  "mark186": {
    "inheritFrom": {
      "mark6": "*"
    },
    "type": "card",
    "id": "mark186",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup62",
    "activeFace": 0
  },
  "markGroup63": {
    "inheritFrom": {
      "markGroup3": "*"
    },
    "id": "markGroup63",
    "parent": "sheetBack4"
  },
  "mark187": {
    "inheritFrom": {
      "mark7": "*"
    },
    "type": "card",
    "id": "mark187",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup63",
    "activeFace": 0
  },
  "mark188": {
    "inheritFrom": {
      "mark8": "*"
    },
    "type": "card",
    "id": "mark188",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup63",
    "activeFace": 0
  },
  "mark189": {
    "inheritFrom": {
      "mark9": "*"
    },
    "type": "card",
    "id": "mark189",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup63",
    "activeFace": 0
  },
  "markGroup64": {
    "inheritFrom": {
      "markGroup4": "*"
    },
    "id": "markGroup64",
    "parent": "sheetBack4"
  },
  "mark190": {
    "inheritFrom": {
      "mark10": "*"
    },
    "type": "card",
    "id": "mark190",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup64",
    "activeFace": 0
  },
  "mark191": {
    "inheritFrom": {
      "mark11": "*"
    },
    "type": "card",
    "id": "mark191",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup64",
    "activeFace": 0
  },
  "mark192": {
    "inheritFrom": {
      "mark12": "*"
    },
    "type": "card",
    "id": "mark192",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup64",
    "activeFace": 0
  },
  "markGroup65": {
    "inheritFrom": {
      "markGroup5": "*"
    },
    "id": "markGroup65",
    "parent": "sheetBack4",
    "scale": 1
  },
  "mark193": {
    "inheritFrom": {
      "mark13": "*"
    },
    "type": "card",
    "id": "mark193",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup65",
    "activeFace": 0
  },
  "mark194": {
    "inheritFrom": {
      "mark14": "*"
    },
    "type": "card",
    "id": "mark194",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup65",
    "activeFace": 0
  },
  "mark195": {
    "inheritFrom": {
      "mark15": "*"
    },
    "type": "card",
    "id": "mark195",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup65",
    "activeFace": 0
  },
  "line28": {
    "inheritFrom": {
      "line1": "*"
    },
    "id": "line28",
    "parent": "sheetBack4"
  },
  "line29": {
    "inheritFrom": {
      "line2": "*"
    },
    "id": "line29",
    "parent": "sheetBack4"
  },
  "line30": {
    "inheritFrom": {
      "line3": "*"
    },
    "id": "line30",
    "parent": "sheetBack4"
  },
  "line31": {
    "inheritFrom": {
      "line4": "*"
    },
    "id": "line31",
    "parent": "sheetBack4"
  },
  "line32": {
    "inheritFrom": {
      "line5": "*"
    },
    "id": "line32",
    "parent": "sheetBack4"
  },
  "line33": {
    "inheritFrom": {
      "line6": "*"
    },
    "id": "line33",
    "parent": "sheetBack4"
  },
  "markGroup66": {
    "inheritFrom": {
      "markGroup6": "*"
    },
    "id": "markGroup66",
    "parent": "sheetBack4",
    "scale": 1
  },
  "mark196": {
    "inheritFrom": {
      "mark16": "*"
    },
    "type": "card",
    "id": "mark196",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup66",
    "activeFace": 0
  },
  "mark197": {
    "inheritFrom": {
      "mark17": "*"
    },
    "type": "card",
    "id": "mark197",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup66",
    "activeFace": 0
  },
  "mark198": {
    "inheritFrom": {
      "mark18": "*"
    },
    "type": "card",
    "id": "mark198",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup66",
    "activeFace": 0
  },
  "markGroup67": {
    "inheritFrom": {
      "markGroup7": "*"
    },
    "id": "markGroup67",
    "parent": "sheetBack4",
    "scale": 1
  },
  "mark199": {
    "inheritFrom": {
      "mark19": "*"
    },
    "type": "card",
    "id": "mark199",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup67",
    "activeFace": 0
  },
  "mark200": {
    "inheritFrom": {
      "mark20": "*"
    },
    "type": "card",
    "id": "mark200",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup67",
    "activeFace": 0
  },
  "mark201": {
    "inheritFrom": {
      "mark21": "*"
    },
    "type": "card",
    "id": "mark201",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup67",
    "activeFace": 0
  },
  "markGroup68": {
    "inheritFrom": {
      "markGroup8": "*"
    },
    "id": "markGroup68",
    "parent": "sheetBack4",
    "scale": 1
  },
  "mark202": {
    "inheritFrom": {
      "mark22": "*"
    },
    "type": "card",
    "id": "mark202",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup68",
    "activeFace": 0
  },
  "mark203": {
    "inheritFrom": {
      "mark23": "*"
    },
    "type": "card",
    "id": "mark203",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup68",
    "activeFace": 0
  },
  "mark204": {
    "inheritFrom": {
      "mark24": "*"
    },
    "type": "card",
    "id": "mark204",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup68",
    "activeFace": 0
  },
  "markGroup69": {
    "inheritFrom": {
      "markGroup9": "*"
    },
    "id": "markGroup69",
    "parent": "sheetBack4",
    "scale": 1
  },
  "mark205": {
    "inheritFrom": {
      "mark25": "*"
    },
    "type": "card",
    "id": "mark205",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup69",
    "activeFace": 0
  },
  "mark206": {
    "inheritFrom": {
      "mark26": "*"
    },
    "type": "card",
    "id": "mark206",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup69",
    "activeFace": 0
  },
  "mark207": {
    "inheritFrom": {
      "mark27": "*"
    },
    "type": "card",
    "id": "mark207",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup69",
    "activeFace": 0
  },
  "markGroup70": {
    "inheritFrom": {
      "markGroup10": "*"
    },
    "id": "markGroup70",
    "parent": "sheetBack4",
    "scale": 1
  },
  "mark208": {
    "inheritFrom": {
      "mark28": "*"
    },
    "type": "card",
    "id": "mark208",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup70",
    "activeFace": 0
  },
  "mark209": {
    "inheritFrom": {
      "mark29": "*"
    },
    "type": "card",
    "id": "mark209",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup70",
    "activeFace": 0
  },
  "mark210": {
    "inheritFrom": {
      "mark30": "*"
    },
    "type": "card",
    "id": "mark210",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup70",
    "activeFace": 0
  },
  "markGroup71": {
    "inheritFrom": {
      "markGroup11": "*"
    },
    "id": "markGroup71",
    "parent": "sheetBack4",
    "scale": 1
  },
  "mark211": {
    "inheritFrom": {
      "mark31": "*"
    },
    "type": "card",
    "id": "mark211",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup71",
    "activeFace": 0
  },
  "mark212": {
    "inheritFrom": {
      "mark32": "*"
    },
    "type": "card",
    "id": "mark212",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup71",
    "activeFace": 0
  },
  "mark213": {
    "inheritFrom": {
      "mark33": "*"
    },
    "type": "card",
    "id": "mark213",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup71",
    "activeFace": 0
  },
  "markGroup72": {
    "inheritFrom": {
      "markGroup12": "*"
    },
    "id": "markGroup72",
    "parent": "sheetBack4",
    "scale": 1
  },
  "mark214": {
    "inheritFrom": {
      "mark34": "*"
    },
    "type": "card",
    "id": "mark214",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup72",
    "activeFace": 0
  },
  "mark215": {
    "inheritFrom": {
      "mark35": "*"
    },
    "type": "card",
    "id": "mark215",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup72",
    "activeFace": 0
  },
  "mark216": {
    "inheritFrom": {
      "mark36": "*"
    },
    "type": "card",
    "id": "mark216",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup72",
    "activeFace": 0
  },
  "markGroup73": {
    "inheritFrom": {
      "markGroup13": "*"
    },
    "id": "markGroup73",
    "parent": "sheetBack4",
    "scale": 1
  },
  "mark217": {
    "inheritFrom": {
      "mark37": "*"
    },
    "type": "card",
    "id": "mark217",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup73",
    "activeFace": 0
  },
  "mark218": {
    "inheritFrom": {
      "mark38": "*"
    },
    "type": "card",
    "id": "mark218",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup73",
    "activeFace": 0
  },
  "mark219": {
    "inheritFrom": {
      "mark39": "*"
    },
    "type": "card",
    "id": "mark219",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup73",
    "activeFace": 0
  },
  "markGroup74": {
    "inheritFrom": {
      "markGroup14": "*"
    },
    "id": "markGroup74",
    "parent": "sheetBack4",
    "scale": 1
  },
  "mark220": {
    "inheritFrom": {
      "mark40": "*"
    },
    "type": "card",
    "id": "mark220",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup74",
    "activeFace": 0
  },
  "mark221": {
    "inheritFrom": {
      "mark41": "*"
    },
    "type": "card",
    "id": "mark221",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup74",
    "activeFace": 0
  },
  "mark222": {
    "inheritFrom": {
      "mark42": "*"
    },
    "type": "card",
    "id": "mark222",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup74",
    "activeFace": 0
  },
  "markGroup75": {
    "inheritFrom": {
      "markGroup15": "*"
    },
    "id": "markGroup75",
    "parent": "sheetBack4",
    "scale": 1
  },
  "mark223": {
    "inheritFrom": {
      "mark43": "*"
    },
    "type": "card",
    "id": "mark223",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup75",
    "activeFace": 0
  },
  "mark224": {
    "inheritFrom": {
      "mark44": "*"
    },
    "type": "card",
    "id": "mark224",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup75",
    "activeFace": 0
  },
  "mark225": {
    "inheritFrom": {
      "mark45": "*"
    },
    "type": "card",
    "id": "mark225",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup75",
    "activeFace": 0
  },
  "line34": {
    "inheritFrom": {
      "line7": "*"
    },
    "id": "line34",
    "parent": "sheetBack4"
  },
  "line35": {
    "inheritFrom": {
      "line8": "*"
    },
    "id": "line35",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "line36": {
    "inheritFrom": {
      "line9": "*"
    },
    "id": "line36",
    "parent": "sheetBack4"
  },
  "gridLabel46": {
    "inheritFrom": {
      "gridLabel1": "*"
    },
    "type": "label",
    "id": "gridLabel46",
    "parent": "sheetBack4",
    "text": ""
  },
  "gridLabel47": {
    "inheritFrom": {
      "gridLabel2": "*"
    },
    "type": "label",
    "id": "gridLabel47",
    "parent": "sheetBack4",
    "text": ""
  },
  "gridLabel48": {
    "inheritFrom": {
      "gridLabel3": "*"
    },
    "type": "label",
    "id": "gridLabel48",
    "parent": "sheetBack4",
    "text": ""
  },
  "gridLabel49": {
    "inheritFrom": {
      "gridLabel4": "*"
    },
    "type": "label",
    "id": "gridLabel49",
    "parent": "sheetBack4",
    "text": ""
  },
  "gridLabel50": {
    "inheritFrom": {
      "gridLabel5": "*"
    },
    "type": "label",
    "id": "gridLabel50",
    "parent": "sheetBack4",
    "scale": 1,
    "text": ""
  },
  "gridLabel51": {
    "inheritFrom": {
      "gridLabel6": "*"
    },
    "type": "label",
    "id": "gridLabel51",
    "parent": "sheetBack4",
    "scale": 1,
    "text": ""
  },
  "gridLabel52": {
    "inheritFrom": {
      "gridLabel7": "*"
    },
    "type": "label",
    "id": "gridLabel52",
    "parent": "sheetBack4",
    "scale": 1,
    "text": ""
  },
  "gridLabel53": {
    "inheritFrom": {
      "gridLabel8": "*"
    },
    "type": "label",
    "id": "gridLabel53",
    "parent": "sheetBack4",
    "scale": 1,
    "text": ""
  },
  "gridLabel54": {
    "inheritFrom": {
      "gridLabel9": "*"
    },
    "type": "label",
    "id": "gridLabel54",
    "parent": "sheetBack4",
    "scale": 1,
    "text": ""
  },
  "gridLabel55": {
    "inheritFrom": {
      "gridLabel10": "*"
    },
    "type": "label",
    "id": "gridLabel55",
    "parent": "sheetBack4",
    "scale": 1,
    "text": ""
  },
  "gridLabel56": {
    "inheritFrom": {
      "gridLabel11": "*"
    },
    "type": "label",
    "id": "gridLabel56",
    "parent": "sheetBack4",
    "scale": 1,
    "text": ""
  },
  "gridLabel57": {
    "inheritFrom": {
      "gridLabel12": "*"
    },
    "type": "label",
    "id": "gridLabel57",
    "parent": "sheetBack4",
    "scale": 1,
    "text": ""
  },
  "gridLabel58": {
    "inheritFrom": {
      "gridLabel13": "*"
    },
    "type": "label",
    "id": "gridLabel58",
    "parent": "sheetBack4",
    "scale": 1,
    "text": ""
  },
  "gridLabel59": {
    "inheritFrom": {
      "gridLabel14": "*"
    },
    "type": "label",
    "id": "gridLabel59",
    "parent": "sheetBack4",
    "scale": 1,
    "text": ""
  },
  "gridLabel60": {
    "inheritFrom": {
      "gridLabel15": "*"
    },
    "type": "label",
    "id": "gridLabel60",
    "parent": "sheetBack4",
    "scale": 1,
    "text": ""
  },
  "notesLabel10": {
    "inheritFrom": {
      "notesLabel1": "*"
    },
    "type": "label",
    "id": "notesLabel10",
    "parent": "sheetBack4",
    "text": ""
  },
  "notesLabel11": {
    "inheritFrom": {
      "notesLabel2": "*"
    },
    "type": "label",
    "id": "notesLabel11",
    "parent": "sheetBack4",
    "scale": 1,
    "text": ""
  },
  "notesLabel12": {
    "inheritFrom": {
      "notesLabel3": "*"
    },
    "type": "label",
    "id": "notesLabel12",
    "parent": "sheetBack4",
    "scale": 1,
    "text": ""
  },
  "letterLabelE4": {
    "inheritFrom": {
      "letterLabelE1": "*"
    },
    "id": "letterLabelE4",
    "parent": "sheetBack4",
    "scale": 1
  },
  "answerLetterLabel4": {
    "inheritFrom": {
      "answerLetterLabel1": "*"
    },
    "id": "answerLetterLabel4",
    "parent": "sheetBack4"
  },
  "markGroup76": {
    "inheritFrom": {
      "markGroup16": "*"
    },
    "id": "markGroup76",
    "parent": "sheetBack4",
    "checkColor": 4,
    "color": "white"
  },
  "mark226": {
    "inheritFrom": {
      "mark46": "*"
    },
    "type": "card",
    "id": "mark226",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup76",
    "activeFace": 0
  },
  "mark227": {
    "inheritFrom": {
      "mark47": "*"
    },
    "type": "card",
    "id": "mark227",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup76",
    "activeFace": 0
  },
  "mark228": {
    "inheritFrom": {
      "mark48": "*"
    },
    "type": "card",
    "id": "mark228",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup76",
    "activeFace": 0
  },
  "markGroup77": {
    "inheritFrom": {
      "markGroup17": "*"
    },
    "id": "markGroup77",
    "parent": "sheetBack4",
    "checkColor": 4,
    "color": "white"
  },
  "mark229": {
    "inheritFrom": {
      "mark49": "*"
    },
    "type": "card",
    "id": "mark229",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup77",
    "activeFace": 0
  },
  "mark230": {
    "inheritFrom": {
      "mark50": "*"
    },
    "type": "card",
    "id": "mark230",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup77",
    "activeFace": 0
  },
  "mark231": {
    "inheritFrom": {
      "mark51": "*"
    },
    "type": "card",
    "id": "mark231",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup77",
    "activeFace": 0
  },
  "markGroup78": {
    "inheritFrom": {
      "markGroup18": "*"
    },
    "id": "markGroup78",
    "parent": "sheetBack4",
    "checkColor": 4,
    "color": "green"
  },
  "mark232": {
    "inheritFrom": {
      "mark52": "*"
    },
    "type": "card",
    "id": "mark232",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup78",
    "activeFace": 0
  },
  "mark233": {
    "inheritFrom": {
      "mark53": "*"
    },
    "type": "card",
    "id": "mark233",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup78",
    "activeFace": 0
  },
  "mark234": {
    "inheritFrom": {
      "mark54": "*"
    },
    "type": "card",
    "id": "mark234",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup78",
    "activeFace": 0
  },
  "markGroup79": {
    "inheritFrom": {
      "markGroup19": "*"
    },
    "id": "markGroup79",
    "parent": "sheetBack4",
    "checkColor": 4,
    "color": "white"
  },
  "mark235": {
    "inheritFrom": {
      "mark55": "*"
    },
    "type": "card",
    "id": "mark235",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup79",
    "activeFace": 0
  },
  "mark236": {
    "inheritFrom": {
      "mark56": "*"
    },
    "type": "card",
    "id": "mark236",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup79",
    "activeFace": 0
  },
  "mark237": {
    "inheritFrom": {
      "mark57": "*"
    },
    "type": "card",
    "id": "mark237",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup79",
    "activeFace": 0
  },
  "markGroup80": {
    "inheritFrom": {
      "markGroup20": "*"
    },
    "id": "markGroup80",
    "parent": "sheetBack4",
    "scale": 0.6,
    "checkColor": 4,
    "color": "black"
  },
  "mark238": {
    "inheritFrom": {
      "mark58": "*"
    },
    "type": "card",
    "id": "mark238",
    "deck": "sheetMarksDeck",
    "cardType": "blackSquare",
    "parent": "markGroup80",
    "activeFace": 0
  },
  "mark239": {
    "inheritFrom": {
      "mark59": "*"
    },
    "type": "card",
    "id": "mark239",
    "deck": "sheetMarksDeck",
    "cardType": "greenSquare",
    "parent": "markGroup80",
    "activeFace": 0
  },
  "mark240": {
    "inheritFrom": {
      "mark60": "*"
    },
    "type": "card",
    "id": "mark240",
    "deck": "sheetMarksDeck",
    "cardType": "whiteSquare",
    "parent": "markGroup80",
    "activeFace": 0
  },
  "answerLabel16": {
    "inheritFrom": {
      "answerLabel1": "*"
    },
    "type": "label",
    "id": "answerLabel16",
    "parent": "sheetBack4",
    "text": "",
    "checkNumber": 4,
    "color": "grey"
  },
  "answerLabel17": {
    "inheritFrom": {
      "answerLabel2": "*"
    },
    "type": "label",
    "id": "answerLabel17",
    "parent": "sheetBack4",
    "text": "",
    "checkNumber": 4,
    "color": "grey"
  },
  "answerLabel18": {
    "inheritFrom": {
      "answerLabel3": "*"
    },
    "type": "label",
    "id": "answerLabel18",
    "parent": "sheetBack4",
    "text": "",
    "checkNumber": 4,
    "color": "grey"
  },
  "answerLabel19": {
    "inheritFrom": {
      "answerLabel4": "*"
    },
    "type": "label",
    "id": "answerLabel19",
    "parent": "sheetBack4",
    "text": "",
    "checkNumber": 4,
    "color": "grey"
  },
  "answerLabel20": {
    "inheritFrom": {
      "answerLabel5": "*"
    },
    "type": "label",
    "id": "answerLabel20",
    "parent": "sheetBack4",
    "scale": 1,
    "text": "",
    "checkNumber": 4,
    "color": "grey"
  },
  "answerLetterLabelE4": {
    "inheritFrom": {
      "answerLetterLabelE1": "*"
    },
    "id": "answerLetterLabelE4",
    "parent": "sheetBack4",
    "scale": 1
  },
  "notesHeader4": {
    "inheritFrom": {
      "notesHeader1": "*"
    },
    "id": "notesHeader4",
    "parent": "sheetBack4",
    "scale": 1
  },
  "823o": {
    "inheritFrom": {
      "817o": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "5b",
    "id": "823o",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "6kmj": {
    "inheritFrom": {
      "3kmj": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "0b",
    "id": "6kmj",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "siwx3": {
    "inheritFrom": {
      "siwx": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "1b",
    "id": "siwx3",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "6hch": {
    "inheritFrom": {
      "3hch": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "2b",
    "id": "6hch",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "8vq6": {
    "inheritFrom": {
      "8vq3": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "3b",
    "id": "8vq6",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "cr8x": {
    "inheritFrom": {
      "cr5x": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "4b",
    "id": "cr8x",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "7l3m": {
    "inheritFrom": {
      "7l0m": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "6b",
    "id": "7l3m",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "faz5": {
    "inheritFrom": {
      "faz2": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "7b",
    "id": "faz5",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "102sa": {
    "inheritFrom": {
      "99sa": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "8b",
    "id": "102sa",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "69xx": {
    "inheritFrom": {
      "66xx": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "9b",
    "id": "69xx",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "va7g": {
    "inheritFrom": {
      "va4g": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "0w",
    "id": "va7g",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "uggx3": {
    "inheritFrom": {
      "uggx": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "1w",
    "id": "uggx3",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "i12js": {
    "inheritFrom": {
      "i9js": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "2w",
    "id": "i12js",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "f9j9": {
    "inheritFrom": {
      "f9j6": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "3w",
    "id": "f9j9",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "c93u": {
    "inheritFrom": {
      "c90u": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "4w",
    "id": "c93u",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "q0m7": {
    "inheritFrom": {
      "q0m4": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "6w",
    "id": "q0m7",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "ngwn3": {
    "inheritFrom": {
      "ngwn": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "7w",
    "id": "ngwn3",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "3fh10": {
    "inheritFrom": {
      "3fh7": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "8w",
    "id": "3fh10",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "9v16": {
    "inheritFrom": {
      "9v13": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "9w",
    "id": "9v16",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "824o": {
    "inheritFrom": {
      "818o": "*"
    },
    "deck": "sheetNumbersDeck",
    "type": "card",
    "cardType": "5w",
    "id": "824o",
    "parent": "sheetBack4",
    "activeFace": 0
  },
  "seat2": {
    "type": "seat",
    "id": "seat2",
    "x": 593,
    "y": 11,
    "width": 172,
    "height": 48,
    "borderRadius": 8,
    "css": {
      "default": {
        "cursor": "pointer",
        "gap": "5px",
        "font-size": "21px",
        "box-shadow": "0 2px 5px #00000066",
        "text-shadow": "${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, ${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}",
        "background": "${PROPERTY mainColor}",
        "color": "white",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY outlineColor}",
        "box-sizing": "border-box"
      },
      ".seated.turn": {
        "box-shadow": "0px 0px 20px 5px ${PROPERTY glowColor}"
      },
      ".seated.turn::after": {
        "xcontent": "'Active Player'",
        "content": "'!'",
        "font-size": "18px",
        "line-height": "1em",
        "white-space": "wrap",
        "background-color": "${PROPERTY outlineColor}",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY mainColor}",
        "background-size": "200% auto",
        "color": "${PROPERTY mainColor}",
        "text-shadow": "0 1px 5px #000000cc",
        "width": "1em",
        "height": "1em",
        "text-align": "center",
        "text-transform": "uppercase",
        "position": "absolute",
        "right": "-12px",
        "top": "-12px",
        "padding": "2px",
        "border-radius": "100px",
        "box-shadow": "0 0 5px #000000bb",
        "pointer-events": "none"
      }
    },
    "hideWhenUnused": true,
    "colorArray": [
      "#000000",
      "#dddddd",
      "#f44336",
      "#f06292",
      "#9c27b0",
      "#3f51b5",
      "#1976d2",
      "#00bcd4",
      "#009688",
      "#4caf50",
      "#8bc34a",
      "#cddc39",
      "#ffeb3b",
      "#ffc107",
      "#ff9800",
      "#bf360c",
      "#795548",
      "#607d8b"
    ],
    "colorContrast": "#000000",
    "outlineColor": "#000000bb",
    "score": [],
    "textColor": "#000000",
    "textShadowBlur": 2,
    "textShadowDistance": 2,
    "clickRoutine": [
      {
        "func": "CALL",
        "routine": "useSeatRoutine"
      },
      "var playerColor = ${result.0}",
      "var playerName = ${result.1}"
    ],
    "colorChangeRoutine": [
      {
        "func": "SET",
        "collection": [
          "marker${PROPERTY index}"
        ],
        "property": "color",
        "value": "${PROPERTY color}"
      }
    ],
    "useSeatRoutine": [
      "// Customized seat color and options routine",
      "var leaveSeat = false",
      "var name = ${PROPERTY player}",
      "var color = ${PROPERTY color}",
      "var result = []",
      "var colorArray = ${PROPERTY colorArray}",
      "var colorList = ${colorArray} indexOf ${playerColor}",
      {
        "func": "IF",
        "operand1": "${colorList}",
        "relation": ">",
        "operand2": "-1",
        "elseRoutine": [
          "var playerColor = ${colorArray.0}"
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "INPUT",
            "header": "Enter your name and choice of player color.",
            "fields": [
              {
                "type": "string",
                "label": "Your Name:",
                "variable": "name",
                "value": "${playerName}"
              },
              {
                "type": "palette",
                "label": "Your Color:",
                "colors": "${PROPERTY colorArray}",
                "variable": "color",
                "value": "${playerColor}"
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              {
                "func": "INPUT",
                "header": "Enter your name and choice of player color.",
                "fields": [
                  {
                    "type": "string",
                    "label": "Your Name:",
                    "variable": "name",
                    "value": "${playerName}"
                  },
                  {
                    "type": "palette",
                    "label": "Your Color:",
                    "colors": "${PROPERTY colorArray}",
                    "variable": "color",
                    "value": "${playerColor}"
                  },
                  {
                    "type": "subtitle",
                    "text": "All done?",
                    "css": "background-color: var(--VTTblue);color:white;"
                  },
                  {
                    "type": "checkbox",
                    "label": "Stand up from seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ],
            "elseRoutine": [
              {
                "func": "INPUT",
                "header": "Are you sure you want to remove ${PROPERTY player} from this seat?",
                "cancelButtonText": "Cancel",
                "confirmButtonText": "Okay",
                "fields": [
                  {
                    "type": "checkbox",
                    "label": "Remove this player from their seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "condition": "${leaveSeat}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "color",
            "value": null
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "player",
            "value": ""
          }
        ],
        "elseRoutine": [
          "var updatePlayerandColor = false",
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "condition": "${name}",
            "elseRoutine": [
              "var updatePlayerandColor = false"
            ]
          },
          {
            "func": "IF",
            "condition": "${updatePlayerandColor}",
            "thenRoutine": [
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "color",
                "value": "${color}"
              },
              "var result = push ${color}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "player",
                "value": "${name}"
              },
              "var result = push ${name}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "mainColor",
                "value": "${result.0}"
              },
              "var newText = colorContrast ${PROPERTY mainColor}",
              "var newGlow = colorContrast ${PROPERTY mainColor} 0.3",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "textColor",
                "value": "${newText}"
              },
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "glowColor",
                "value": "${newGlow}"
              },
              {
                "func": "CALL",
                "routine": "markerColorRoutine"
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "mainColor",
            "value": "#dddddd"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "textColor",
            "value": "#000000"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "glowColor",
            "value": null
          },
          {
            "func": "CALL",
            "routine": "markerColorRoutine"
          }
        ],
        "elseRoutine": []
      }
    ],
    "hand": "hand2",
    "index": 2,
    "markerColorRoutine": [
      "// Sets the colors on the markers and climbers",
      "var markerContrast = ${PROPERTY mainColor} colorContrast 0.15",
      {
        "func": "SELECT",
        "property": "parent",
        "value": "climberHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor1",
        "value": "${PROPERTY mainColor}"
      },
      {
        "func": "SET",
        "property": "bgColor2",
        "value": "${markerContrast}"
      },
      {
        "func": "SELECT",
        "property": "parent",
        "value": "markerHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor",
        "value": "${PROPERTY mainColor}"
      }
    ],
    "mainColor": "#dddddd"
  },
  "seat3": {
    "type": "seat",
    "id": "seat3",
    "x": 844,
    "y": 11,
    "width": 172,
    "height": 48,
    "borderRadius": 8,
    "css": {
      "default": {
        "cursor": "pointer",
        "gap": "5px",
        "font-size": "21px",
        "box-shadow": "0 2px 5px #00000066",
        "text-shadow": "${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, ${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}",
        "background": "${PROPERTY mainColor}",
        "color": "white",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY outlineColor}",
        "box-sizing": "border-box"
      },
      ".seated.turn": {
        "box-shadow": "0px 0px 20px 5px ${PROPERTY glowColor}"
      },
      ".seated.turn::after": {
        "xcontent": "'Active Player'",
        "content": "'!'",
        "font-size": "18px",
        "line-height": "1em",
        "white-space": "wrap",
        "background-color": "${PROPERTY outlineColor}",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY mainColor}",
        "background-size": "200% auto",
        "color": "${PROPERTY mainColor}",
        "text-shadow": "0 1px 5px #000000cc",
        "width": "1em",
        "height": "1em",
        "text-align": "center",
        "text-transform": "uppercase",
        "position": "absolute",
        "right": "-12px",
        "top": "-12px",
        "padding": "2px",
        "border-radius": "100px",
        "box-shadow": "0 0 5px #000000bb",
        "pointer-events": "none"
      }
    },
    "hideWhenUnused": true,
    "colorArray": [
      "#000000",
      "#dddddd",
      "#f44336",
      "#f06292",
      "#9c27b0",
      "#3f51b5",
      "#1976d2",
      "#00bcd4",
      "#009688",
      "#4caf50",
      "#8bc34a",
      "#cddc39",
      "#ffeb3b",
      "#ffc107",
      "#ff9800",
      "#bf360c",
      "#795548",
      "#607d8b"
    ],
    "colorContrast": "#000000",
    "outlineColor": "#000000bb",
    "score": [],
    "textColor": "#000000",
    "textShadowBlur": 2,
    "textShadowDistance": 2,
    "clickRoutine": [
      {
        "func": "CALL",
        "routine": "useSeatRoutine"
      },
      "var playerColor = ${result.0}",
      "var playerName = ${result.1}"
    ],
    "colorChangeRoutine": [
      {
        "func": "SET",
        "collection": [
          "marker${PROPERTY index}"
        ],
        "property": "color",
        "value": "${PROPERTY color}"
      }
    ],
    "useSeatRoutine": [
      "// Customized seat color and options routine",
      "var leaveSeat = false",
      "var name = ${PROPERTY player}",
      "var color = ${PROPERTY color}",
      "var result = []",
      "var colorArray = ${PROPERTY colorArray}",
      "var colorList = ${colorArray} indexOf ${playerColor}",
      {
        "func": "IF",
        "operand1": "${colorList}",
        "relation": ">",
        "operand2": "-1",
        "elseRoutine": [
          "var playerColor = ${colorArray.0}"
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "INPUT",
            "header": "Enter your name and choice of player color.",
            "fields": [
              {
                "type": "string",
                "label": "Your Name:",
                "variable": "name",
                "value": "${playerName}"
              },
              {
                "type": "palette",
                "label": "Your Color:",
                "colors": "${PROPERTY colorArray}",
                "variable": "color",
                "value": "${playerColor}"
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              {
                "func": "INPUT",
                "header": "Enter your name and choice of player color.",
                "fields": [
                  {
                    "type": "string",
                    "label": "Your Name:",
                    "variable": "name",
                    "value": "${playerName}"
                  },
                  {
                    "type": "palette",
                    "label": "Your Color:",
                    "colors": "${PROPERTY colorArray}",
                    "variable": "color",
                    "value": "${playerColor}"
                  },
                  {
                    "type": "subtitle",
                    "text": "All done?",
                    "css": "background-color: var(--VTTblue);color:white;"
                  },
                  {
                    "type": "checkbox",
                    "label": "Stand up from seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ],
            "elseRoutine": [
              {
                "func": "INPUT",
                "header": "Are you sure you want to remove ${PROPERTY player} from this seat?",
                "cancelButtonText": "Cancel",
                "confirmButtonText": "Okay",
                "fields": [
                  {
                    "type": "checkbox",
                    "label": "Remove this player from their seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "condition": "${leaveSeat}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "color",
            "value": null
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "player",
            "value": ""
          }
        ],
        "elseRoutine": [
          "var updatePlayerandColor = false",
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "condition": "${name}",
            "elseRoutine": [
              "var updatePlayerandColor = false"
            ]
          },
          {
            "func": "IF",
            "condition": "${updatePlayerandColor}",
            "thenRoutine": [
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "color",
                "value": "${color}"
              },
              "var result = push ${color}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "player",
                "value": "${name}"
              },
              "var result = push ${name}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "mainColor",
                "value": "${result.0}"
              },
              "var newText = colorContrast ${PROPERTY mainColor}",
              "var newGlow = colorContrast ${PROPERTY mainColor} 0.3",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "textColor",
                "value": "${newText}"
              },
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "glowColor",
                "value": "${newGlow}"
              },
              {
                "func": "CALL",
                "routine": "markerColorRoutine"
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "mainColor",
            "value": "#dddddd"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "textColor",
            "value": "#000000"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "glowColor",
            "value": null
          },
          {
            "func": "CALL",
            "routine": "markerColorRoutine"
          }
        ],
        "elseRoutine": []
      }
    ],
    "hand": "hand3",
    "index": 3,
    "markerColorRoutine": [
      "// Sets the colors on the markers and climbers",
      "var markerContrast = ${PROPERTY mainColor} colorContrast 0.15",
      {
        "func": "SELECT",
        "property": "parent",
        "value": "climberHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor1",
        "value": "${PROPERTY mainColor}"
      },
      {
        "func": "SET",
        "property": "bgColor2",
        "value": "${markerContrast}"
      },
      {
        "func": "SELECT",
        "property": "parent",
        "value": "markerHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor",
        "value": "${PROPERTY mainColor}"
      }
    ],
    "mainColor": "#dddddd"
  },
  "seat4": {
    "type": "seat",
    "id": "seat4",
    "x": 1094,
    "width": 172,
    "height": 48,
    "borderRadius": 8,
    "css": {
      "default": {
        "cursor": "pointer",
        "gap": "5px",
        "font-size": "21px",
        "box-shadow": "0 2px 5px #00000066",
        "text-shadow": "${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px ${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, ${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}, -${PROPERTY textShadowDistance}px -${PROPERTY textShadowDistance}px ${PROPERTY textShadowBlur}px ${PROPERTY outlineColor}",
        "background": "${PROPERTY mainColor}",
        "color": "white",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY outlineColor}",
        "box-sizing": "border-box"
      },
      ".seated.turn": {
        "box-shadow": "0px 0px 20px 5px ${PROPERTY glowColor}"
      },
      ".seated.turn::after": {
        "xcontent": "'Active Player'",
        "content": "'!'",
        "font-size": "18px",
        "line-height": "1em",
        "white-space": "wrap",
        "background-color": "${PROPERTY outlineColor}",
        "border": "${PROPERTY textShadowDistance}px solid ${PROPERTY mainColor}",
        "background-size": "200% auto",
        "color": "${PROPERTY mainColor}",
        "text-shadow": "0 1px 5px #000000cc",
        "width": "1em",
        "height": "1em",
        "text-align": "center",
        "text-transform": "uppercase",
        "position": "absolute",
        "right": "-12px",
        "top": "-12px",
        "padding": "2px",
        "border-radius": "100px",
        "box-shadow": "0 0 5px #000000bb",
        "pointer-events": "none"
      }
    },
    "hideWhenUnused": true,
    "colorArray": [
      "#000000",
      "#dddddd",
      "#f44336",
      "#f06292",
      "#9c27b0",
      "#3f51b5",
      "#1976d2",
      "#00bcd4",
      "#009688",
      "#4caf50",
      "#8bc34a",
      "#cddc39",
      "#ffeb3b",
      "#ffc107",
      "#ff9800",
      "#bf360c",
      "#795548",
      "#607d8b"
    ],
    "colorContrast": "#000000",
    "outlineColor": "#000000bb",
    "score": [],
    "textColor": "#000000",
    "textShadowBlur": 2,
    "textShadowDistance": 2,
    "clickRoutine": [
      {
        "func": "CALL",
        "routine": "useSeatRoutine"
      },
      "var playerColor = ${result.0}",
      "var playerName = ${result.1}"
    ],
    "colorChangeRoutine": [
      {
        "func": "SET",
        "collection": [
          "marker${PROPERTY index}"
        ],
        "property": "color",
        "value": "${PROPERTY color}"
      }
    ],
    "useSeatRoutine": [
      "// Customized seat color and options routine",
      "var leaveSeat = false",
      "var name = ${PROPERTY player}",
      "var color = ${PROPERTY color}",
      "var result = []",
      "var colorArray = ${PROPERTY colorArray}",
      "var colorList = ${colorArray} indexOf ${playerColor}",
      {
        "func": "IF",
        "operand1": "${colorList}",
        "relation": ">",
        "operand2": "-1",
        "elseRoutine": [
          "var playerColor = ${colorArray.0}"
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "INPUT",
            "header": "Enter your name and choice of player color.",
            "fields": [
              {
                "type": "string",
                "label": "Your Name:",
                "variable": "name",
                "value": "${playerName}"
              },
              {
                "type": "palette",
                "label": "Your Color:",
                "colors": "${PROPERTY colorArray}",
                "variable": "color",
                "value": "${playerColor}"
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              {
                "func": "INPUT",
                "header": "Enter your name and choice of player color.",
                "fields": [
                  {
                    "type": "string",
                    "label": "Your Name:",
                    "variable": "name",
                    "value": "${playerName}"
                  },
                  {
                    "type": "palette",
                    "label": "Your Color:",
                    "colors": "${PROPERTY colorArray}",
                    "variable": "color",
                    "value": "${playerColor}"
                  },
                  {
                    "type": "subtitle",
                    "text": "All done?",
                    "css": "background-color: var(--VTTblue);color:white;"
                  },
                  {
                    "type": "checkbox",
                    "label": "Stand up from seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ],
            "elseRoutine": [
              {
                "func": "INPUT",
                "header": "Are you sure you want to remove ${PROPERTY player} from this seat?",
                "cancelButtonText": "Cancel",
                "confirmButtonText": "Okay",
                "fields": [
                  {
                    "type": "checkbox",
                    "label": "Remove this player from their seat",
                    "variable": "leaveSeat",
                    "value": false
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "condition": "${leaveSeat}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "color",
            "value": null
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "player",
            "value": ""
          }
        ],
        "elseRoutine": [
          "var updatePlayerandColor = false",
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "${playerName}",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY player}",
            "relation": "==",
            "operand2": "",
            "thenRoutine": [
              "var updatePlayerandColor = true"
            ]
          },
          {
            "func": "IF",
            "condition": "${name}",
            "elseRoutine": [
              "var updatePlayerandColor = false"
            ]
          },
          {
            "func": "IF",
            "condition": "${updatePlayerandColor}",
            "thenRoutine": [
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "color",
                "value": "${color}"
              },
              "var result = push ${color}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "player",
                "value": "${name}"
              },
              "var result = push ${name}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "mainColor",
                "value": "${result.0}"
              },
              "var newText = colorContrast ${PROPERTY mainColor}",
              "var newGlow = colorContrast ${PROPERTY mainColor} 0.3",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "textColor",
                "value": "${newText}"
              },
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "glowColor",
                "value": "${newGlow}"
              },
              {
                "func": "CALL",
                "routine": "markerColorRoutine"
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "relation": "==",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "mainColor",
            "value": "#dddddd"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "textColor",
            "value": "#000000"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "glowColor",
            "value": null
          },
          {
            "func": "CALL",
            "routine": "markerColorRoutine"
          }
        ],
        "elseRoutine": []
      }
    ],
    "hand": "hand4",
    "index": 4,
    "y": 11,
    "markerColorRoutine": [
      "// Sets the colors on the markers and climbers",
      "var markerContrast = ${PROPERTY mainColor} colorContrast 0.15",
      {
        "func": "SELECT",
        "property": "parent",
        "value": "climberHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor1",
        "value": "${PROPERTY mainColor}"
      },
      {
        "func": "SET",
        "property": "bgColor2",
        "value": "${markerContrast}"
      },
      {
        "func": "SELECT",
        "property": "parent",
        "value": "markerHolder${PROPERTY index}"
      },
      {
        "func": "SET",
        "property": "bgColor",
        "value": "${PROPERTY mainColor}"
      }
    ],
    "mainColor": "#dddddd"
  },
  "guess3": {
    "type": "button",
    "id": "guess3",
    "x": 122,
    "y": 795,
    "width": 50,
    "height": 50,
    "z": 2,
    "text": "Guess",
    "hide2": true,
    "clickRoutine": [
      {
        "func": "CALL",
        "routine": "input1Routine",
        "arguments": {
          "mode": "${PROPERTY mode OF solo}"
        }
      },
      {
        "func": "SELECT",
        "type": "card",
        "property": "parent",
        "value": "boardTiles",
        "sortBy": {
          "key": "z",
          "reverse": false
        },
        "collection": "hiddenTiles"
      },
      {
        "func": "SET",
        "collection": [
          "guessGroup"
        ],
        "property": "scale",
        "value": 1
      },
      "var check = true",
      {
        "func": "SELECT",
        "property": "checkNumber",
        "value": "${seatIndex}",
        "collection": "guessNumber",
        "sortBy": {
          "key": "checkTile",
          "reverse": false
        }
      },
      {
        "func": "GET",
        "collection": "guessNumber",
        "property": "text",
        "aggregation": "array",
        "variable": "guessNumberArray"
      },
      {
        "func": "SELECT",
        "property": "checkColor",
        "value": "${seatIndex}",
        "collection": "guessColor",
        "sortBy": {
          "key": "checkTile",
          "reverse": false
        }
      },
      {
        "func": "GET",
        "collection": "guessColor",
        "property": "color",
        "aggregation": "array",
        "variable": "guessColorArray"
      },
      "var key = 0",
      {
        "func": "FOREACH",
        "collection": "hiddenTiles",
        "loopRoutine": [
          {
            "func": "GET",
            "collection": "DEFAULT",
            "property": "text",
            "variable": "thisNumber"
          },
          {
            "func": "GET",
            "collection": "DEFAULT",
            "property": "color",
            "variable": "thisColor"
          },
          "var checkNumber = ${thisNumber} == ${guessNumberArray.$key}",
          "var checkColor = ${thisColor} == ${guessColorArray.$key}",
          "var check = ${check} && ${checkNumber}",
          "var check = ${check} && ${checkColor}",
          "var key = ${key} + 1"
        ]
      },
      "var newCorrect = ${PROPERTY text OF correct} + ${playerName}",
      "var newCorrect = ${newCorrect} + '\\u000a'",
      "var newIncorrect = ${PROPERTY text OF incorrect} + ${playerName}",
      "var newIncorrect = ${newIncorrect} + '\\u000a'",
      {
        "func": "IF",
        "condition": "${check}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "correct"
            ],
            "property": "text",
            "value": "${newCorrect}"
          },
          {
            "func": "IF",
            "condition": "${PROPERTY mode OF solo}",
            "thenRoutine": [
              {
                "func": "CALL",
                "routine": "input2Routine",
                "arguments": {
                  "mode": 0
                }
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "incorrect"
            ],
            "property": "text",
            "value": "${newIncorrect}"
          }
        ]
      },
      {
        "func": "IF",
        "condition": "${PROPERTY mode OF solo}",
        "thenRoutine": [
          {
            "func": "IF",
            "condition": "${check}",
            "elseRoutine": [
              {
                "func": "CALL",
                "routine": "input2Routine",
                "arguments": {
                  "mode": "${PROPERTY mode OF solo}"
                }
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "CALL",
            "routine": "input2Routine",
            "arguments": {
              "mode": "${PROPERTY mode OF solo}"
            }
          }
        ]
      }
    ],
    "checkTilesArray": [
      "A",
      "B",
      "C",
      "D",
      "E"
    ],
    "input1Routine": [
      {
        "func": "IF",
        "condition": "${mode}",
        "thenRoutine": [
          {
            "func": "INPUT",
            "fields": [
              {
                "type": "title",
                "text": "This will submit your guess"
              },
              {
                "type": "subtitle",
                "text": "You can only do this when you are ready to guess. Be sure your answers, including numbers and colors, are entered into the spaces in the upper right of your answer sheet."
              },
              {
                "type": "subtitle",
                "text": "Remember, if the answer includes a pair of the same number (other than 5), then you must have black first and white second. Are you ready to guess?"
              }
            ],
            "confirmButtonText": "Yes",
            "cancelButtonText": "No"
          }
        ],
        "elseRoutine": [
          {
            "func": "INPUT",
            "fields": [
              {
                "type": "title",
                "text": "This will reveal the hidden tiles"
              },
              {
                "type": "subtitle",
                "text": "You can only do this when you are ready to guess. Be sure your answers, including numbers and colors, are entered into the spaces in the upper right of your answer sheet."
              },
              {
                "type": "subtitle",
                "text": "Remember, if the answer includes a pair of the same number (other than 5), then you must have black first and white second. Are you ready to guess?"
              }
            ],
            "confirmButtonText": "Yes",
            "cancelButtonText": "No"
          }
        ]
      }
    ],
    "input2Routine": [
      {
        "func": "IF",
        "condition": "${check}",
        "thenRoutine": [
          "var guessText = 'Your guess was correct.'"
        ],
        "elseRoutine": [
          "var guessText = 'Your guess was incorrect.'"
        ]
      },
      {
        "func": "IF",
        "condition": "${mode}",
        "thenRoutine": [
          {
            "func": "INPUT",
            "fields": [
              {
                "type": "title",
                "text": "Your guess was incorrect"
              },
              {
                "type": "checkbox",
                "label": "Do you want to see the answer? Check the box and press Yes to see the hidden tiles.",
                "value": false,
                "variable": "seeFinal"
              }
            ],
            "cancelButtonText": "No",
            "confirmButtonText": "Yes"
          },
          {
            "func": "IF",
            "condition": "${seeFinal}",
            "thenRoutine": [
              {
                "func": "CALL",
                "routine": "input2Routine",
                "arguments": {
                  "mode": 0
                }
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "COUNT",
            "holder": "questionHolder"
          },
          "var questionsText = ${COUNT} + ' questions have been asked.'",
          {
            "func": "INPUT",
            "fields": [
              {
                "type": "title",
                "text": "These are the hidden tiles"
              },
              {
                "type": "subtitle",
                "text": "${guessText}"
              },
              {
                "type": "subtitle",
                "text": "${questionsText}"
              },
              {
                "type": "choose",
                "source": "hiddenTiles",
                "max": 0,
                "propertyOverride": {
                  "activeFace": 1
                }
              }
            ],
            "cancelButtonIcon": null,
            "cancelButtonText": null,
            "confirmButtonText": "Finished"
          }
        ]
      }
    ]
  },
  "answerLabel1": {
    "type": "label",
    "id": "answerLabel1",
    "parent": "sheetBack1",
    "fixedParent": true,
    "x": 622,
    "y": 44,
    "width": 65,
    "height": 70,
    "z": 1,
    "css": {
      "color": "${PROPERTY color}",
      "border": "1px solid green",
      "font-size": "60px"
    },
    "editable": true,
    "borderRadius": 8,
    "checkNumber": 1,
    "checkTile": "A",
    "color": "grey"
  },
  "guess2": {
    "type": "button",
    "id": "guess2",
    "x": 122,
    "y": 795,
    "width": 50,
    "height": 50,
    "z": 2,
    "text": "Guess",
    "checkTilesArray": [
      "A",
      "B",
      "C",
      "D",
      "E"
    ],
    "clickRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "You are about to make a guess"
          },
          {
            "type": "subtitle",
            "text": "Do this when you are ready to guess. Be sure your answers, including numbers and colors, are entered into the spaces in the upper right of your answer sheet."
          },
          {
            "type": "subtitle",
            "text": "Remember, if the answer includes a pair of the same number (other than 5), then you must have black first and white second. Are you ready to guess?"
          }
        ],
        "confirmButtonText": "Yes",
        "cancelButtonText": "No"
      },
      {
        "func": "SET",
        "collection": [
          "guessGroup"
        ],
        "property": "scale",
        "value": 1
      },
      {
        "func": "SELECT",
        "type": "seat",
        "property": "player",
        "relation": "!=",
        "value": ""
      },
      {
        "func": "SELECT",
        "mode": "intersect",
        "property": "id",
        "relation": "!=",
        "value": "${seatID}"
      },
      {
        "func": "GET",
        "property": "index"
      },
      {
        "func": "SELECT",
        "type": "card",
        "property": "parent",
        "value": "hand${index}",
        "sortBy": {
          "key": "z",
          "reverse": false
        },
        "collection": "hiddenTiles"
      },
      "var check = true",
      {
        "func": "SELECT",
        "property": "checkNumber",
        "value": "${seatIndex}",
        "collection": "guessNumber",
        "sortBy": {
          "key": "checkTile",
          "reverse": false
        }
      },
      {
        "func": "GET",
        "collection": "guessNumber",
        "property": "text",
        "aggregation": "array",
        "variable": "guessNumberArray"
      },
      {
        "func": "SELECT",
        "property": "checkColor",
        "value": "${seatIndex}",
        "collection": "guessColor",
        "sortBy": {
          "key": "checkTile",
          "reverse": false
        }
      },
      {
        "func": "GET",
        "collection": "guessColor",
        "property": "color",
        "aggregation": "array",
        "variable": "guessColorArray"
      },
      "var key = 0",
      {
        "func": "FOREACH",
        "collection": "hiddenTiles",
        "loopRoutine": [
          {
            "func": "GET",
            "collection": "DEFAULT",
            "property": "text",
            "variable": "thisNumber"
          },
          {
            "func": "GET",
            "collection": "DEFAULT",
            "property": "color",
            "variable": "thisColor"
          },
          "var checkNumber = ${thisNumber} == ${guessNumberArray.$key}",
          "var checkColor = ${thisColor} == ${guessColorArray.$key}",
          "var check = ${check} && ${checkNumber}",
          "var check = ${check} && ${checkColor}",
          "var key = ${key} + 1"
        ]
      },
      "var newCorrect = ${PROPERTY text OF correct} + ${playerName}",
      "var newCorrect = ${newCorrect} + '\\u000a'",
      "var newIncorrect = ${PROPERTY text OF incorrect} + ${playerName}",
      "var newIncorrect = ${newIncorrect} + '\\u000a'",
      {
        "func": "COUNT",
        "holder": "questionHolder"
      },
      {
        "func": "IF",
        "condition": "${check}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "correct"
            ],
            "property": "text",
            "value": "${newCorrect}"
          },
          "var questionsText = ${COUNT} + ' questions have been asked.'",
          {
            "func": "INPUT",
            "fields": [
              {
                "type": "title",
                "text": "These are the other player's tiles"
              },
              {
                "type": "subtitle",
                "text": "You guessed correctly."
              },
              {
                "type": "subtitle",
                "text": "${questionsText}"
              },
              {
                "type": "choose",
                "source": "hiddenTiles",
                "max": 0,
                "propertyOverride": {
                  "activeFace": 1
                }
              }
            ],
            "cancelButtonIcon": null,
            "cancelButtonText": null,
            "confirmButtonText": "Finished"
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "incorrect"
            ],
            "property": "text",
            "value": "${newIncorrect}"
          },
          {
            "func": "IF",
            "condition": "${PROPERTY mode OF solo}",
            "thenRoutine": [
              {
                "func": "INPUT",
                "fields": [
                  {
                    "type": "title",
                    "text": "Your guess was incorrect"
                  },
                  {
                    "type": "checkbox",
                    "label": "Do you want to see the answer? Check the box and press Yes to see the hidden tiles.",
                    "value": false,
                    "variable": "seeFinal"
                  }
                ],
                "cancelButtonText": "No",
                "confirmButtonText": "Yes"
              },
              {
                "func": "IF",
                "condition": "${seeFinal}",
                "thenRoutine": [
                  "var questionsText = ${COUNT} + ' questions have been asked.'",
                  {
                    "func": "INPUT",
                    "fields": [
                      {
                        "type": "title",
                        "text": "These are the other player's tiles"
                      },
                      {
                        "type": "subtitle",
                        "text": "${questionsText}"
                      },
                      {
                        "type": "choose",
                        "source": "hiddenTiles",
                        "max": 0,
                        "propertyOverride": {
                          "activeFace": 1
                        }
                      }
                    ],
                    "cancelButtonIcon": null,
                    "cancelButtonText": null,
                    "confirmButtonText": "Finished"
                  }
                ]
              }
            ],
            "elseRoutine": [
              {
                "func": "INPUT",
                "fields": [
                  {
                    "type": "title",
                    "text": "You guessed incorrectly."
                  },
                  {
                    "type": "subtitle",
                    "text": "Keep playing."
                  }
                ],
                "cancelButtonIcon": null,
                "cancelButtonText": null,
                "confirmButtonText": "Ok"
              }
            ]
          }
        ]
      }
    ],
    "hide3": true,
    "hide4": true
  },
  "correct": {
    "id": "correct",
    "y": 60,
    "css": {
      "font-size": "18px",
      "background": "#ffffffaa",
      "border": "1px solid black",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "movable": false,
    "height": 200,
    "width": 130,
    "borderRadius": 8,
    "parent": "guessGroup"
  },
  "incorrect": {
    "id": "incorrect",
    "x": 150,
    "y": 60,
    "inheritFrom": {
      "correct": "*"
    },
    "text": "",
    "parent": "guessGroup",
    "z": 0
  },
  "correctLabel": {
    "id": "correctLabel",
    "x": 23,
    "y": 27,
    "height": 30,
    "layer": -2,
    "movable": false,
    "css": {
      "font-size": "22px"
    },
    "text": "correct",
    "parent": "guessGroup"
  },
  "incorrectLabel": {
    "id": "incorrectLabel",
    "x": 169,
    "y": 27,
    "height": 30,
    "layer": -2,
    "movable": false,
    "css": {
      "font-size": "22px"
    },
    "text": "incorrect",
    "parent": "guessGroup"
  },
  "guessLabel": {
    "id": "guessLabel",
    "x": 65,
    "height": 30,
    "layer": -2,
    "movable": false,
    "css": {
      "font-size": "22px"
    },
    "text": "guess results",
    "width": 150,
    "parent": "guessGroup"
  },
  "guessGroup": {
    "id": "guessGroup",
    "x": 7,
    "y": 513,
    "width": 280,
    "height": 260,
    "layer": -3,
    "movable": false,
    "scale": 0
  },
  "solo": {
    "type": "button",
    "id": "solo",
    "x": 1485,
    "y": 5,
    "width": 50,
    "height": 50,
    "z": 1,
    "clickRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Setting up solo play mode..."
          },
          {
            "type": "subtitle",
            "text": "Sit in the first seat (farthest to the left) and choose the number of computer opponents."
          },
          {
            "type": "number",
            "min": 1,
            "max": 3,
            "value": "${PROPERTY soloCount}",
            "variable": "soloCount"
          },
          {
            "type": "subtitle",
            "text": "Choose the level of difficulty"
          },
          {
            "type": "select",
            "options": [
              {
                "value": "easy",
                "text": "Easy"
              },
              {
                "value": "normal",
                "text": "Normal"
              }
            ],
            "variable": "level",
            "value": "${PROPERTY level}"
          }
        ],
        "confirmButtonText": "Start"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "soloCount",
        "value": "${soloCount}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "level",
        "value": "${level}"
      },
      {
        "func": "SET",
        "collection": [
          "seat2",
          "seat3",
          "seat4"
        ],
        "property": "player",
        "value": ""
      },
      "var colorArray = ${PROPERTY colorArray OF seat1}",
      "var colorArray = remove 0 1",
      "var colorArray = remove 0 1",
      "var colorIndex = ${colorArray} indexOf ${mainColor}",
      "var colorArray = remove ${colorIndex} 1",
      {
        "func": "FOREACH",
        "range": [
          "${PROPERTY soloCount}"
        ],
        "loopRoutine": [
          "var valuePlus = ${value} + 1",
          "var thisSeat = 'seat' + ${valuePlus}",
          {
            "func": "SET",
            "collection": [
              "${thisSeat}"
            ],
            "property": "player",
            "value": "Comp${value}"
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY mainColor OF $thisSeat}",
            "operand2": "#dddddd",
            "thenRoutine": [
              {
                "func": "GET",
                "collection": [
                  "seat1"
                ],
                "property": "mainColor"
              },
              "var length = ${colorArray} length",
              "var length = ${length} - 1",
              "var random = randInt 0 ${length}",
              "var seatColor = ${colorArray} getIndex ${random}",
              {
                "func": "SET",
                "collection": [
                  "${thisSeat}"
                ],
                "property": "mainColor",
                "value": "${seatColor}"
              },
              "var colorArray = remove ${random} 1"
            ]
          }
        ]
      },
      {
        "func": "CALL",
        "routine": "resetRoutine",
        "widget": "reset"
      },
      {
        "func": "IF",
        "operand1": "${level}",
        "operand2": "normal",
        "thenRoutine": [
          {
            "func": "IF",
            "operand1": "${soloCount}",
            "relation": "<=",
            "operand2": 2,
            "thenRoutine": [
              {
                "func": "SET",
                "collection": [
                  "discardHolder"
                ],
                "property": "scale",
                "value": 1
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "discardHolder"
            ],
            "property": "scale",
            "value": 0
          }
        ]
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "mode",
        "value": true
      },
      {
        "func": "TURN",
        "turnCycle": "seat",
        "turn": "seat1"
      },
      {
        "func": "SET",
        "collection": [
          "answer1"
        ],
        "property": "scale",
        "value": 0
      },
      {
        "func": "FOREACH",
        "range": [
          "${PROPERTY soloCount}"
        ],
        "loopRoutine": [
          "var pid = ${value} + 1",
          {
            "func": "SET",
            "collection": [
              "answer${pid}"
            ],
            "property": "onlyVisibleForSeat",
            "value": "seat1"
          },
          {
            "func": "SET",
            "collection": [
              "answerTab${pid}"
            ],
            "property": "scale",
            "value": 1
          }
        ]
      },
      {
        "func": "SET",
        "collection": [
          "answer2"
        ],
        "property": "scale",
        "value": 1
      },
      {
        "func": "SET",
        "collection": [
          "answerTab2"
        ],
        "property": "bgColor",
        "value": "${PROPERTY mainColor OF seat2}"
      },
      {
        "func": "SET",
        "collection": [
          "answerTab3",
          "answerTab4"
        ],
        "property": "bgColor",
        "value": "#888888"
      },
      {
        "func": "SET",
        "collection": [
          "answer3",
          "answer4"
        ],
        "property": "scale",
        "value": 0
      }
    ],
    "text": "Solo",
    "mode": false,
    "soloCount": "1",
    "level": "normal"
  },
  "_meta": {
    "version": 15,
    "info": {
      "name": "Code Numbers",
      "image": "/assets/1507661345_223300",
      "rules": "",
      "bgg": "https://boardgamegeek.com/boardgame/227466/break-the-code",
      "year": "2017",
      "mode": "solo; vs",
      "time": "15",
      "attribution": "<div>The room layout and game design are by LawDawg96 and are released to the Public Domain under CC0.\n\nThe following items are available under the Pixabay license:<div><ul><li>Question cards background by geralt, https://pixabay.com/illustrations/question-mark-question-note-request-5987748/&nbsp;</li><li>Room background by BiancaVanDijk, https://pixabay.com/illustrations/background-digital-background-photo-7349298/</li></ul><div>The number tiles back pattern was generated using&nbsp;<span style=\"color: var(--overlayFontColor);\">https://pattern.monster/concentric-circles-3/.</span><br></div></div></div><div><span style=\"color: var(--overlayFontColor);\"><br></span></div><div>The library image was created&nbsp;<span style=\"color: var(--overlayFontColor);\">using the Midjourney artificial intelligence image generator, https://www.midjourney.com/home/, using the following prompt: \"green and white code numbers abstract painting\".</span><span style=\"color: var(--overlayFontColor);\"><br></span></div>",
      "lastUpdate": 1712873397435,
      "showName": true,
      "skill": "",
      "description": "Choose from the available questions and use logical deduction to determine the numbers, colors, and sequence on the hidden cards.",
      "similarImage": "",
      "similarName": "Break the Code",
      "similarDesigner": "Ryohei Kurahashi",
      "similarAwards": "2020 UK Games Expo Best New Card Game (Strategic) Nominee",
      "ruleText": "",
      "helpText": "<h4><b>Multiplayer (2-4)</b></h4>Players take seats. Press Reset button to begin. A random player is automatically selected to start and number tiles are dealt to each player's hand at the bottom of the screen. If playing with more than two players, the cards that are to be guessed are displayed face down in the lower left corner.<div><div><br></div><div>Select a question card from the row of available question cards at the top and drag it to the \"question\" holder. The answer to the question is calculated automatically and displayed in the black box in the bottom right for the players that will be prompted to respond. For some questions, the player asking the question is prompted to select between two numbers.</div><div><br></div><div>After questions are answered, update the note taking sheet.&nbsp; The sheet has several areas for players to use.</div><div><img src=\"/assets/-347155024_15535\" class=\"richtextAsset\"></div><div>Click on the numbered tiles to x them out when they cannot be part of the solution. The values for the cards in each player's hand are automatically x'd out when the game starts.</div><div><a href=\"/assets/1530689051_9255\"><img src=\"/assets/1530689051_9255\" class=\"richtextAsset\"></a></div><div>There is a row for each opposing player. Use the space above the colored squares and the space to the right to type notes. Click on the colored squares to cycle each one through a checkmark, an x, and a question mark.</div></div><div><img src=\"/assets/-2074017750_7349\" class=\"richtextAsset\"></div><div>In the upper right, players enter what they believe the values and the colors are for the hidden tiles. Enter one number and select one color for each of the spaces before using the Guess button.</div><div><br></div><div>When players have finished entering notes, press the Turn button to add another question to the pool and the next player chooses the question to ask.</div><div><br></div><div>When players are ready to guess, be sure the values and colors are entered into the note sheet in the area on the top right. Then press the guess button. The result of the guess (correct or incorrect) will be displayed on the left side of the screen and depending on the game mode and the number of players, the answer may be displayed.</div><h4><b>Solo</b></h4><span style=\"font-weight: 400;\"><div><span style=\"font-weight: 400;\">While solo play is not possible in a physical implementation of this game, in this online version, solo play works almost identically to playing with other people.</span></div><div><span style=\"font-weight: 400;\"><br></span></div>To begin solo play, sit in the far-left seat and press the solo button. Choose the number of computer opponents (1-3) and the level of play (easy or normal).</span><div><br></div><div>In normal mode, when playing with one or two computer opponents, one question from the pool is randomly removed from play each time you ask a question to approximate what happens when playing in multiplayer mode. In easy mode, or when playing with three computer opponents, all questions remain available.<br><div><span style=\"font-weight: 400;\"><br></span></div><div><span style=\"font-weight: 400;\">There are only three other differences between solo mode and multiplayer mode. First, instead of seeing your own answers to the questions, you see the computer player(s) answers. To switch between them, click on the tabs to the left of the black answer area.</span></div><div><span style=\"font-weight: 400;\"><br></span></div><div><img src=\"/assets/1361858855_11530\" class=\"richtextAsset\"></div><div>Second, only you ask questions. The computer will not ask questions or make guesses. Press the Turn button to refill the pool of questions after making notes.</div><div><br></div><div>Third, no matter how many computer opponents you are playing against, you have the option to continue playing even after making an incorrect guess.</div></div>",
      "variantImage": "",
      "variant": "",
      "language": "en-US",
      "players": "1-4"
    }
  },
  "answerTab2": {
    "id": "answerTab2",
    "width": 70,
    "height": 30,
    "borderRadius": "30% 0% 0% 30%",
    "css": {
      "border": "1px solid black",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center",
      "background": "${PROPERTY bgColor}",
      "font-size": "16px"
    },
    "text": "Comp1",
    "movable": false,
    "clickRoutine": [
      "var compSeat = 'seat' + ${PROPERTY index}",
      {
        "func": "SET",
        "collection": [
          "answerTab2",
          "answerTab3",
          "answerTab4"
        ],
        "property": "bgColor",
        "value": "#888888"
      },
      {
        "func": "SET",
        "collection": [
          "answer2",
          "answer3",
          "answer4"
        ],
        "property": "scale",
        "value": 0
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "bgColor",
        "value": "${PROPERTY mainColor OF $compSeat}"
      },
      {
        "func": "SET",
        "collection": [
          "answer${PROPERTY index}"
        ],
        "property": "scale",
        "value": 1
      }
    ],
    "tab": true,
    "index": 2,
    "bgColor": "#1976d2",
    "y": 859,
    "x": 1292,
    "scale": 0
  },
  "answerTab3": {
    "inheritFrom": {
      "answerTab2": "*"
    },
    "id": "answerTab3",
    "index": 3,
    "scale": 0,
    "text": "Comp2",
    "bgColor": "#888888",
    "x": 1292,
    "y": 898
  },
  "answerTab4": {
    "inheritFrom": {
      "answerTab2": "*"
    },
    "id": "answerTab4",
    "activeFace": 0,
    "scale": 0,
    "text": "Comp3",
    "index": 4,
    "bgColor": "#888888",
    "x": 1292,
    "y": 936
  },
  "background": {
    "id": "background",
    "x": -200,
    "width": 2000,
    "height": 1200,
    "layer": -4,
    "movable": false,
    "css": {
      "opacity": 0.4
    },
    "image": "/assets/-241149892_8880"
  },
  "holderCover3": {
    "id": "holderCover3",
    "x": 618,
    "y": 857,
    "width": 365,
    "height": 120,
    "movable": false
  },
  "2db1": {
    "type": "pile",
    "parent": "questionsDeckHolder",
    "x": 0,
    "y": 0,
    "width": 248,
    "height": 148,
    "id": "2db1"
  },
  "aakb": {
    "type": "pile",
    "parent": "numbersDeckHolder",
    "x": 0,
    "y": 0,
    "width": 70,
    "height": 110,
    "id": "aakb"
  },
  "discardHolder": {
    "type": "holder",
    "id": "discardHolder",
    "x": 1318,
    "y": 455,
    "width": 250,
    "height": 150,
    "css": {
      "background": "#ffffff80"
    },
    "dropOffsetX": 0,
    "dropOffsetY": 0,
    "dropTarget": {
      "type": "card"
    },
    "onEnter": {
      "activeFace": 1
    },
    "scale": 0
  },
  "discardLabel": {
    "id": "discardLabel",
    "parent": "discardHolder",
    "x": 92,
    "y": 155,
    "height": 30,
    "layer": -2,
    "movable": false,
    "css": {
      "font-size": "22px"
    },
    "text": "discard"
  }
}