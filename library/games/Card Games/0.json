{
  "4424": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "19",
    "id": "4424",
    "staged": false,
    "parent": "pile2"
  },
  "7724": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "2 yellow",
    "id": "7724",
    "staged": false,
    "parent": "pile2"
  },
  "hand": {
    "type": "holder",
    "id": "hand",
    "y": 820,
    "width": 604,
    "height": 180,
    "dropOffsetX": 10,
    "dropOffsetY": 14,
    "onEnter": {
      "activeFace": 1
    },
    "onLeave": {
      "activeFace": 0
    },
    "x": 498,
    "movableInEdit": false,
    "dropShadow": true,
    "stackOffsetX": 35,
    "css": {
      "background": "#ffffffaa"
    },
    "enterRoutine": [
      {
        "func": "SET",
        "collection": "child",
        "property": "activeFace",
        "value": 1
      },
      {
        "func": "SET",
        "collection": "child",
        "property": "shadow",
        "value": "0px 0px 10px 5px #1f5ca6 inset"
      },
      {
        "func": "SET",
        "collection": "child",
        "property": "staged",
        "value": false
      },
      {
        "func": "IF",
        "condition": "${PROPERTY showing OF $seatID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "showHandButton",
            "routine": "showHandRoutine",
            "arguments": {
              "thisSeatIndex": "${PROPERTY index OF $seatID}",
              "thisPlayerName": "${PROPERTY player OF $seatID}"
            }
          }
        ]
      }
    ],
    "leaveRoutine": [
      {
        "func": "SET",
        "collection": "child",
        "property": "shadow",
        "value": null
      },
      {
        "func": "IF",
        "condition": "${PROPERTY showing OF $seatID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "showHandButton",
            "routine": "showHandRoutine",
            "arguments": {
              "thisSeatIndex": "${PROPERTY index OF $seatID}",
              "thisPlayerName": "${PROPERTY player OF $seatID}"
            }
          }
        ]
      }
    ],
    "childrenPerOwner": true
  },
  "fate_A_C": {
    "id": "fate_A_C",
    "deck": "deck1",
    "type": "card",
    "cardType": "C 01",
    "staged": false,
    "parent": "zxzg",
    "z": 19218
  },
  "fate_2_C": {
    "id": "fate_2_C",
    "deck": "deck1",
    "type": "card",
    "cardType": "C 02",
    "staged": false,
    "parent": "zxzg",
    "z": 19217
  },
  "fate_3_C": {
    "id": "fate_3_C",
    "deck": "deck1",
    "type": "card",
    "cardType": "C 03",
    "staged": false,
    "parent": "zxzg",
    "z": 19224
  },
  "fate_4_C": {
    "id": "fate_4_C",
    "deck": "deck1",
    "type": "card",
    "cardType": "C 04",
    "staged": false,
    "parent": "zxzg",
    "z": 19240
  },
  "fate_5_C": {
    "id": "fate_5_C",
    "deck": "deck1",
    "type": "card",
    "cardType": "C 05",
    "staged": false,
    "parent": "zxzg",
    "z": 19248
  },
  "fate_6_C": {
    "id": "fate_6_C",
    "deck": "deck1",
    "type": "card",
    "cardType": "C 06",
    "staged": false,
    "parent": "zxzg",
    "z": 19230
  },
  "fate_7_C": {
    "id": "fate_7_C",
    "deck": "deck1",
    "type": "card",
    "cardType": "C 07",
    "staged": false,
    "parent": "zxzg",
    "z": 19227
  },
  "fate_8_C": {
    "id": "fate_8_C",
    "deck": "deck1",
    "type": "card",
    "cardType": "C 08",
    "staged": false,
    "parent": "zxzg",
    "z": 19216
  },
  "fate_9_C": {
    "id": "fate_9_C",
    "deck": "deck1",
    "type": "card",
    "cardType": "C 09",
    "staged": false,
    "parent": "zxzg",
    "z": 19212
  },
  "fate_T_C": {
    "id": "fate_T_C",
    "deck": "deck1",
    "type": "card",
    "cardType": "C 10",
    "staged": false,
    "parent": "zxzg",
    "z": 19235
  },
  "fate_J_C": {
    "id": "fate_J_C",
    "deck": "deck1",
    "type": "card",
    "cardType": "C 2J",
    "staged": false,
    "sortSuitSkat": 0,
    "parent": "zxzg",
    "z": 19246
  },
  "fate_Q_C": {
    "id": "fate_Q_C",
    "deck": "deck1",
    "type": "card",
    "cardType": "C 3Q",
    "staged": false,
    "parent": "zxzg",
    "z": 19205
  },
  "fate_K_C": {
    "id": "fate_K_C",
    "deck": "deck1",
    "type": "card",
    "cardType": "C 4K",
    "staged": false,
    "parent": "zxzg",
    "z": 19245
  },
  "fate_A_D": {
    "id": "fate_A_D",
    "deck": "deck1",
    "type": "card",
    "cardType": "D 01",
    "staged": false,
    "parent": "zxzg",
    "z": 19215
  },
  "fate_2_D": {
    "id": "fate_2_D",
    "deck": "deck1",
    "type": "card",
    "cardType": "D 02",
    "staged": false,
    "parent": "zxzg",
    "z": 19249
  },
  "fate_3_D": {
    "id": "fate_3_D",
    "deck": "deck1",
    "type": "card",
    "cardType": "D 03",
    "staged": false,
    "parent": "zxzg",
    "z": 19213
  },
  "fate_4_D": {
    "id": "fate_4_D",
    "deck": "deck1",
    "type": "card",
    "cardType": "D 04",
    "staged": false,
    "parent": "zxzg",
    "z": 19234
  },
  "fate_5_D": {
    "id": "fate_5_D",
    "deck": "deck1",
    "type": "card",
    "cardType": "D 05",
    "staged": false,
    "parent": "zxzg",
    "z": 19209
  },
  "fate_6_D": {
    "id": "fate_6_D",
    "deck": "deck1",
    "type": "card",
    "cardType": "D 06",
    "staged": false,
    "parent": "zxzg",
    "z": 19204
  },
  "fate_7_D": {
    "id": "fate_7_D",
    "deck": "deck1",
    "type": "card",
    "cardType": "D 07",
    "staged": false,
    "parent": "zxzg",
    "z": 19241
  },
  "fate_8_D": {
    "id": "fate_8_D",
    "deck": "deck1",
    "type": "card",
    "cardType": "D 08",
    "staged": false,
    "parent": "zxzg",
    "z": 19238
  },
  "fate_9_D": {
    "id": "fate_9_D",
    "deck": "deck1",
    "type": "card",
    "cardType": "D 09",
    "staged": false,
    "parent": "zxzg",
    "z": 19232
  },
  "fate_T_D": {
    "id": "fate_T_D",
    "deck": "deck1",
    "type": "card",
    "cardType": "D 10",
    "staged": false,
    "parent": "zxzg",
    "z": 19243
  },
  "fate_J_D": {
    "id": "fate_J_D",
    "deck": "deck1",
    "type": "card",
    "cardType": "D 2J",
    "staged": false,
    "sortSuitSkat": 0,
    "parent": "zxzg",
    "z": 19251
  },
  "fate_Q_D": {
    "id": "fate_Q_D",
    "deck": "deck1",
    "type": "card",
    "cardType": "D 3Q",
    "staged": false,
    "parent": "zxzg",
    "z": 19253
  },
  "fate_K_D": {
    "id": "fate_K_D",
    "deck": "deck1",
    "type": "card",
    "cardType": "D 4K",
    "staged": false,
    "parent": "zxzg",
    "z": 19229
  },
  "fate_A_H": {
    "id": "fate_A_H",
    "deck": "deck1",
    "type": "card",
    "cardType": "H 01",
    "staged": false,
    "parent": "zxzg",
    "z": 19247
  },
  "fate_2_H": {
    "id": "fate_2_H",
    "deck": "deck1",
    "type": "card",
    "cardType": "H 02",
    "staged": false,
    "parent": "zxzg",
    "z": 19233
  },
  "fate_3_H": {
    "id": "fate_3_H",
    "deck": "deck1",
    "type": "card",
    "cardType": "H 03",
    "staged": false,
    "parent": "zxzg",
    "z": 19214
  },
  "fate_4_H": {
    "id": "fate_4_H",
    "deck": "deck1",
    "type": "card",
    "cardType": "H 04",
    "staged": false,
    "parent": "zxzg",
    "z": 19207
  },
  "fate_5_H": {
    "id": "fate_5_H",
    "deck": "deck1",
    "type": "card",
    "cardType": "H 05",
    "staged": false,
    "parent": "zxzg",
    "z": 19222
  },
  "fate_6_H": {
    "id": "fate_6_H",
    "deck": "deck1",
    "type": "card",
    "cardType": "H 06",
    "staged": false,
    "parent": "zxzg",
    "z": 19220
  },
  "fate_7_H": {
    "id": "fate_7_H",
    "deck": "deck1",
    "type": "card",
    "cardType": "H 07",
    "staged": false,
    "parent": "zxzg",
    "z": 19231
  },
  "fate_8_H": {
    "id": "fate_8_H",
    "deck": "deck1",
    "type": "card",
    "cardType": "H 08",
    "staged": false,
    "parent": "zxzg",
    "z": 19208
  },
  "fate_9_H": {
    "id": "fate_9_H",
    "deck": "deck1",
    "type": "card",
    "cardType": "H 09",
    "staged": false,
    "parent": "zxzg",
    "z": 19219
  },
  "fate_T_H": {
    "id": "fate_T_H",
    "deck": "deck1",
    "type": "card",
    "cardType": "H 10",
    "staged": false,
    "parent": "zxzg",
    "z": 19250
  },
  "fate_J_H": {
    "id": "fate_J_H",
    "deck": "deck1",
    "type": "card",
    "cardType": "H 2J",
    "staged": false,
    "sortSuitSkat": 0,
    "parent": "zxzg",
    "z": 19223
  },
  "fate_Q_H": {
    "id": "fate_Q_H",
    "deck": "deck1",
    "type": "card",
    "cardType": "H 3Q",
    "staged": false,
    "parent": "zxzg",
    "z": 19202
  },
  "fate_K_H": {
    "id": "fate_K_H",
    "deck": "deck1",
    "type": "card",
    "cardType": "H 4K",
    "staged": false,
    "parent": "zxzg",
    "z": 19242
  },
  "fate_A_S": {
    "id": "fate_A_S",
    "deck": "deck1",
    "type": "card",
    "cardType": "S 01",
    "staged": false,
    "parent": "zxzg",
    "z": 19211
  },
  "fate_2_S": {
    "id": "fate_2_S",
    "deck": "deck1",
    "type": "card",
    "cardType": "S 02",
    "staged": false,
    "parent": "zxzg",
    "z": 19221
  },
  "fate_3_S": {
    "id": "fate_3_S",
    "deck": "deck1",
    "type": "card",
    "cardType": "S 03",
    "staged": false,
    "parent": "zxzg",
    "z": 19203
  },
  "fate_4_S": {
    "id": "fate_4_S",
    "deck": "deck1",
    "type": "card",
    "cardType": "S 04",
    "staged": false,
    "parent": "zxzg",
    "z": 19244
  },
  "fate_5_S": {
    "id": "fate_5_S",
    "deck": "deck1",
    "type": "card",
    "cardType": "S 05",
    "staged": false,
    "parent": "zxzg",
    "z": 19237
  },
  "fate_6_S": {
    "id": "fate_6_S",
    "deck": "deck1",
    "type": "card",
    "cardType": "S 06",
    "staged": false,
    "parent": "zxzg",
    "z": 19236
  },
  "fate_7_S": {
    "id": "fate_7_S",
    "deck": "deck1",
    "type": "card",
    "cardType": "S 07",
    "staged": false,
    "parent": "zxzg",
    "z": 19252
  },
  "fate_8_S": {
    "id": "fate_8_S",
    "deck": "deck1",
    "type": "card",
    "cardType": "S 08",
    "staged": false,
    "parent": "zxzg",
    "z": 19228
  },
  "fate_9_S": {
    "id": "fate_9_S",
    "deck": "deck1",
    "type": "card",
    "cardType": "S 09",
    "staged": false,
    "parent": "zxzg",
    "z": 19210
  },
  "fate_T_S": {
    "id": "fate_T_S",
    "deck": "deck1",
    "type": "card",
    "cardType": "S 10",
    "staged": false,
    "parent": "zxzg",
    "z": 19226
  },
  "fate_J_S": {
    "id": "fate_J_S",
    "deck": "deck1",
    "type": "card",
    "cardType": "S 2J",
    "staged": false,
    "sortSuitSkat": 0,
    "parent": "zxzg",
    "z": 19206
  },
  "fate_Q_S": {
    "id": "fate_Q_S",
    "deck": "deck1",
    "type": "card",
    "cardType": "S 3Q",
    "staged": false,
    "parent": "zxzg",
    "z": 19225
  },
  "fate_K_S": {
    "id": "fate_K_S",
    "deck": "deck1",
    "type": "card",
    "cardType": "S 4K",
    "staged": false,
    "parent": "zxzg",
    "z": 19239
  },
  "deckHolder": {
    "type": "holder",
    "id": "deckHolder",
    "x": 1375,
    "y": 20,
    "dropTarget": {
      "type": "card"
    },
    "css": {
      "background": "#ffffff80"
    },
    "enterRoutine": [
      {
        "func": "SET",
        "collection": "child",
        "property": "shadow",
        "value": null
      },
      {
        "func": "SET",
        "collection": "child",
        "property": "staged",
        "value": false
      },
      {
        "func": "SET",
        "collection": "child",
        "property": "y",
        "value": "${PROPERTY dropOffsetY}"
      },
      {
        "func": "SET",
        "collection": "child",
        "property": "clickable",
        "value": true
      },
      {
        "func": "SET",
        "collection": "child",
        "property": "movable",
        "value": true
      },
      {
        "func": "SET",
        "collection": "child",
        "property": "rotation",
        "value": 0
      },
      {
        "func": "FLIP",
        "collection": "child",
        "face": 0
      }
    ],
    "movableInEdit": false,
    "onEnter": {
      "rotation": 0
    }
  },
  "recallButton": {
    "type": "button",
    "id": "recallButton",
    "parent": "deckHolder",
    "fixedParent": true,
    "y": 171.36,
    "width": 111,
    "height": 40,
    "movableInEdit": false,
    "text": "Recall & Shuffle",
    "clickRoutine": [
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "CALL",
        "widget": "deckOptions",
        "routine": "cardsSetupRoutine"
      },
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "resetTricksRoutine"
      },
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "resetBidsRoutine"
      },
      {
        "func": "CALL",
        "widget": "settings",
        "routine": "showPublicBidChangeRoutine"
      },
      {
        "func": "SELECT",
        "type": "seat",
        "property": "id",
        "relation": "!=",
        "value": null
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY tempScoreReset OF $gameID}",
        "operand2": false,
        "thenRoutine": [],
        "elseRoutine": [
          {
            "func": "SET",
            "property": "tempScore",
            "value": []
          }
        ]
      },
      {
        "func": "SET",
        "property": "showing",
        "value": false
      },
      {
        "func": "SELECT",
        "property": "id",
        "value": "messages"
      },
      {
        "func": "SET",
        "property": "scale",
        "value": 0
      },
      {
        "func": "SET",
        "property": "text",
        "value": null
      },
      {
        "func": "SET",
        "collection": [
          "bids"
        ],
        "property": "text",
        "value": null
      },
      {
        "func": "SET",
        "collection": [
          "bids"
        ],
        "property": "message",
        "value": null
      },
      {
        "func": "SET",
        "collection": [
          "bidWinner"
        ],
        "property": "first",
        "value": false
      },
      {
        "func": "SET",
        "collection": [
          "centerHolder"
        ],
        "property": "lastCardBy",
        "value": null
      },
      {
        "func": "SELECT",
        "type": "seat",
        "property": "turn",
        "value": true
      },
      {
        "func": "SET",
        "property": "turn",
        "value": null
      },
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "checkRoundsRoutine",
        "variable": "result"
      },
      {
        "func": "IF",
        "condition": "${result}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "scoreboard"
            ],
            "property": "currentRound",
            "relation": "+",
            "value": 1
          }
        ]
      },
      {
        "func": "SELECT",
        "type": "card",
        "property": "tempClone",
        "value": true
      },
      {
        "func": "DELETE"
      },
      {
        "func": "SET",
        "collection": [
          "tricksCount"
        ],
        "property": "text",
        "value": 0
      },
      {
        "func": "SET",
        "collection": [
          "roundSlider"
        ],
        "property": "y",
        "value": 0
      },
      {
        "func": "SET",
        "collection": [
          "tempScoreboard"
        ],
        "property": "currentRound",
        "value": 0
      },
      {
        "func": "SET",
        "collection": [
          "takeButton"
        ],
        "property": "lastPressedBy",
        "value": null
      },
      {
        "func": "IF",
        "condition": "${PROPERTY recallRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "${gameID}",
            "routine": "recallRoutine"
          }
        ]
      },
      "//The following functions erase certain properties on cards used by specific games.",
      "//This is needed because of Truco",
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "value": "deckHolder"
      },
      {
        "func": "SET",
        "property": "sortTrucoPaulista",
        "value": null
      },
      "//This is needed because of Pitch and Agony Aunt",
      {
        "func": "SET",
        "property": "suit",
        "value": null
      },
      {
        "func": "SET",
        "property": "sortDefault",
        "value": null
      },
      {
        "func": "SET",
        "property": "order",
        "value": null
      },
      "//This is needed because of 99",
      {
        "func": "IF",
        "operand1": "${gameID}",
        "operand2": "gameID26",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "trump"
            ],
            "property": "customFace",
            "value": "${PROPERTY nextTrump OF $gameID}"
          }
        ]
      },
      "//This is needed because of Counterpoint",
      {
        "func": "SET",
        "property": "sortAceTen",
        "value": null
      }
    ],
    "activeFace": 1
  },
  "sortButton": {
    "type": "button",
    "id": "sortButton",
    "x": 440,
    "y": 820,
    "text": "Sort",
    "clickRoutine": [
      {
        "func": "IF",
        "operand1": "${PROPERTY sortDirection OF $seatID}",
        "operand2": null,
        "thenRoutine": [
          {
            "func": "INPUT",
            "fields": [
              {
                "type": "title",
                "text": "Choose sort direction ..."
              },
              {
                "type": "subtitle",
                "text": "Choose the direction that your cards will be sorted. You only have to make this choice one time per game."
              },
              {
                "type": "checkbox",
                "label": "Sort high to low left to right (uncheck to sort low to high left to right)?",
                "value": true,
                "variable": "sortDirection"
              }
            ]
          },
          {
            "func": "SET",
            "collection": [
              "${seatID}"
            ],
            "property": "sortDirection",
            "value": "${sortDirection}"
          }
        ]
      },
      {
        "func": "SELECT",
        "property": "parent",
        "value": "hand"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "owner",
        "value": "${playerName}"
      },
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "IF",
        "condition": "${PROPERTY sortPreExceptionsRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": [
              "${gameID}"
            ],
            "routine": "sortPreExceptionsRoutine",
            "arguments": {
              "thisPlayerName": "${playerName}"
            }
          }
        ]
      },
      {
        "func": "CALL",
        "routine": "sortRoutine",
        "arguments": {
          "thisPlayerName": "${playerName}"
        }
      },
      {
        "func": "IF",
        "condition": "${PROPERTY sortExceptionsRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": [
              "${gameID}"
            ],
            "routine": "sortExceptionsRoutine",
            "arguments": {
              "thisPlayerName": "${playerName}",
              "reverseSort": false
            }
          }
        ]
      }
    ],
    "movableInEdit": false,
    "width": 60,
    "height": 35,
    "sortRoutine": [
      {
        "func": "SORT",
        "collection": "DEFAULT",
        "key": "${PROPERTY sort1 OF $gameID}",
        "reverse": "${PROPERTY sortDirection OF $seatID}"
      },
      {
        "func": "SORT",
        "collection": "DEFAULT",
        "key": "${PROPERTY sort2 OF $gameID}"
      },
      {
        "func": "SELECT",
        "type": "card",
        "property": "parent",
        "value": "hand"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "staged",
        "value": true
      },
      {
        "func": "SET",
        "property": "y",
        "relation": "-",
        "value": 20
      }
    ],
    "css": {
      "border-radius": "10px 4px 4px 10px"
    }
  },
  "bidValue1": {
    "id": "bidValue1",
    "css": {
      "background": "#ffffff",
      "border": "1px solid black",
      "font-size": "${PROPERTY fontSize}",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center",
      "color": "black"
    },
    "textChangeRoutine": [
      "var count = 0",
      {
        "func": "FOREACH",
        "in": "${PROPERTY text}",
        "loopRoutine": [
          "var count = ${count} + 1"
        ]
      },
      {
        "func": "IF",
        "operand1": "${count}",
        "relation": ">",
        "operand2": 2,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "fontSize",
            "value": "30px"
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "fontSize",
            "value": "40px"
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY text}",
        "operand2": "Pass",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "fontSize",
            "value": "22px"
          }
        ]
      }
    ],
    "fontSize": "40px",
    "fixedParent": true,
    "parent": "seat1",
    "movableInEdit": false,
    "clickRoutine": [
      {
        "func": "SELECT",
        "property": "clonedBy",
        "value": "${playerName}"
      },
      {
        "func": "COUNT"
      },
      {
        "func": "IF",
        "operand1": "${COUNT}",
        "operand2": 0,
        "thenRoutine": [
          {
            "func": "CLONE",
            "source": [
              "chooseValue"
            ],
            "collection": "bidClones",
            "recursive": true,
            "properties": {
              "clonedBy": "${playerName}",
              "tempClone": true
            }
          },
          {
            "func": "SET",
            "collection": "bidClones",
            "property": "owner",
            "value": "${playerName}"
          },
          {
            "func": "SET",
            "collection": [
              "bidValue${seatIndex}",
              "bidSuit${seatIndex}"
            ],
            "property": "text",
            "value": ""
          },
          {
            "func": "SET",
            "collection": [
              "bidSuit${seatIndex}"
            ],
            "property": "image",
            "value": ""
          },
          {
            "func": "SET",
            "collection": [
              "bidSuit${seatIndex}"
            ],
            "property": "deckSuitsColor",
            "value": ""
          },
          {
            "func": "SET",
            "collection": [
              "bidSuit${seatIndex}"
            ],
            "property": "deckSuitsUni",
            "value": ""
          },
          {
            "func": "SET",
            "collection": [
              "bidSuit${seatIndex}"
            ],
            "property": "deckSuits",
            "value": ""
          },
          {
            "func": "SET",
            "collection": [
              "bidSuit${seatIndex}"
            ],
            "property": "chooser",
            "value": ""
          }
        ],
        "elseRoutine": [
          {
            "func": "DELETE"
          }
        ]
      }
    ],
    "width": 50,
    "height": 50,
    "borderRadius": 8,
    "movable": false,
    "y": 48
  },
  "choose0": {
    "type": "button",
    "id": "choose0",
    "parent": "chooseValue",
    "fixedParent": true,
    "x": 10,
    "y": 10,
    "width": 50,
    "height": 50,
    "borderRadius": 8,
    "css": {
      "font-size": "40px"
    },
    "text": 0,
    "clickRoutine": [
      "var bidWidget = 'bidValue' concat ${seatIndex}",
      {
        "func": "IF",
        "operand1": "${PROPERTY text OF $bidWidget}",
        "operand2": "Pass",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "${bidWidget}"
            ],
            "property": "text",
            "value": ""
          }
        ]
      },
      "var bid = ' ' + ${PROPERTY text OF $bidWidget}",
      "var bid = ${bid} + ${PROPERTY text}",
      "var bid = ${bid} trimStart",
      {
        "func": "SET",
        "collection": [
          "${bidWidget}"
        ],
        "property": "text",
        "value": "${bid}"
      }
    ],
    "movableInEdit": false
  },
  "choose1": {
    "inheritFrom": {
      "choose0": "*"
    },
    "type": "button",
    "id": "choose1",
    "x": 70,
    "y": 10,
    "text": 1,
    "parent": "chooseValue"
  },
  "choose2": {
    "inheritFrom": {
      "choose0": "*"
    },
    "type": "button",
    "id": "choose2",
    "x": 130,
    "y": 10,
    "text": 2,
    "parent": "chooseValue"
  },
  "choose3": {
    "inheritFrom": {
      "choose0": "*"
    },
    "type": "button",
    "id": "choose3",
    "x": 190,
    "y": 10,
    "text": 3,
    "parent": "chooseValue"
  },
  "choose4": {
    "inheritFrom": {
      "choose0": "*"
    },
    "type": "button",
    "id": "choose4",
    "x": 250,
    "y": 10,
    "text": 4,
    "parent": "chooseValue"
  },
  "choose5": {
    "inheritFrom": {
      "choose0": "*"
    },
    "type": "button",
    "id": "choose5",
    "x": 10,
    "y": 70,
    "text": 5,
    "parent": "chooseValue"
  },
  "choose6": {
    "inheritFrom": {
      "choose0": "*"
    },
    "type": "button",
    "id": "choose6",
    "x": 70,
    "y": 70,
    "text": 6,
    "parent": "chooseValue"
  },
  "choose7": {
    "inheritFrom": {
      "choose0": "*"
    },
    "type": "button",
    "id": "choose7",
    "x": 130,
    "y": 70,
    "text": 7,
    "parent": "chooseValue"
  },
  "choose8": {
    "inheritFrom": {
      "choose0": "*"
    },
    "type": "button",
    "id": "choose8",
    "x": 190,
    "y": 70,
    "text": 8,
    "parent": "chooseValue"
  },
  "choose9": {
    "inheritFrom": {
      "choose0": "*"
    },
    "type": "button",
    "id": "choose9",
    "x": 250,
    "y": 70,
    "text": 9,
    "parent": "chooseValue"
  },
  "choose10": {
    "type": "button",
    "id": "choose10",
    "clickRoutine": [
      "var bidWidget = 'bidSuit' concat ${seatIndex}",
      {
        "func": "SET",
        "collection": [
          "${bidWidget}"
        ],
        "property": "text",
        "value": "${PROPERTY text}"
      },
      {
        "func": "SET",
        "collection": [
          "${bidWidget}"
        ],
        "property": "image",
        "value": "${PROPERTY image}"
      },
      {
        "func": "SET",
        "collection": [
          "${bidWidget}"
        ],
        "property": "deckSuitsColor",
        "value": "${PROPERTY deckSuitsColor}"
      },
      {
        "func": "SET",
        "collection": [
          "${bidWidget}"
        ],
        "property": "deckSuitsUni",
        "value": "${PROPERTY deckSuitsUni}"
      },
      {
        "func": "SET",
        "collection": [
          "${bidWidget}"
        ],
        "property": "deckSuits",
        "value": "${PROPERTY deckSuits}"
      },
      {
        "func": "SET",
        "collection": [
          "${bidWidget}"
        ],
        "property": "chooser",
        "value": "${PROPERTY chooser}"
      },
      {
        "func": "SET",
        "collection": [
          "bids"
        ],
        "property": "message",
        "value": "${PROPERTY deckSuits}"
      }
    ],
    "parent": "chooseSuit",
    "css": {
      "background-size": "contain",
      "background-repeat": "no-repeat",
      "background-position": "center",
      "font-size": "15px",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "chooser": 10,
    "width": 50,
    "height": 50,
    "borderRadius": 8,
    "x": 10,
    "y": 12,
    "svgReplaces": {
      "currentColor": "deckSuitsColor"
    },
    "deckSuitsColor": "",
    "deckSuitsUni": "♣",
    "deckSuits": "clubs",
    "image": "i/icons/clubs.svg"
  },
  "choose11": {
    "inheritFrom": {
      "choose10": "*"
    },
    "type": "button",
    "id": "choose11",
    "x": 70,
    "y": 10,
    "parent": "chooseSuit",
    "chooser": 11,
    "deckSuit": "clubs",
    "image": "i/icons/diamonds.svg",
    "text": "",
    "deckSuitsColor": "#e50932",
    "deckSuitsUni": "♦",
    "deckSuits": "diamonds"
  },
  "choose12": {
    "inheritFrom": {
      "choose10": "*"
    },
    "type": "button",
    "id": "choose12",
    "x": 10,
    "y": 70,
    "parent": "chooseSuit",
    "newColor": "#e50932",
    "chooser": 12,
    "deckSuit": "coins",
    "image": "i/icons/spades.svg",
    "text": "",
    "deckSuitsColor": "",
    "deckSuitsUni": "♠",
    "deckSuits": "spades"
  },
  "choose13": {
    "inheritFrom": {
      "choose10": "*"
    },
    "type": "button",
    "id": "choose13",
    "x": 70,
    "y": 70,
    "parent": "chooseSuit",
    "chooser": 13,
    "deckSuit": "cups",
    "image": "i/icons/hearts.svg",
    "text": "",
    "deckSuitsColor": "#e50932",
    "deckSuitsUni": "♥",
    "deckSuits": "hearts"
  },
  "choose14": {
    "inheritFrom": {
      "choose10": "*"
    },
    "type": "button",
    "id": "choose14",
    "x": 10,
    "y": 130,
    "chooser": 14,
    "deckSuit": "swords",
    "image": "",
    "text": "No\nTrump",
    "deckSuitsColor": "",
    "deckSuitsUni": "NT"
  },
  "bidSuit1": {
    "id": "bidSuit1",
    "borderRadius": 8,
    "css": {
      "background": "#ffffff",
      "background-size": "contain",
      "background-repeat": "no-repeat",
      "background-position": "center",
      "border": "1px solid black",
      "color": "black",
      "font-size": "15px",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "classes": "",
    "parent": "seat1",
    "fixedParent": true,
    "width": 50,
    "height": 50,
    "x": 100,
    "y": 48,
    "text": "",
    "movable": false,
    "movableInEdit": false,
    "inheritFrom": {
      "bidValue1": "clickRoutine"
    },
    "scale": 1,
    "svgReplaces": {
      "currentColor": "deckSuitsColor"
    },
    "chooser": "",
    "deckSuitsUni": "",
    "deckSuits": "",
    "chooserChangeRoutine": [
      {
        "func": "IF",
        "operand1": "${PROPERTY chooser}",
        "operand2": "",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "trump"
            ],
            "property": "customFace",
            "value": 0
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY chooser}",
        "operand2": 10,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "trump"
            ],
            "property": "customFace",
            "value": 1
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY chooser}",
        "operand2": 11,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "trump"
            ],
            "property": "customFace",
            "value": 2
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY chooser}",
        "operand2": 12,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "trump"
            ],
            "property": "customFace",
            "value": 3
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY chooser}",
        "operand2": 13,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "trump"
            ],
            "property": "customFace",
            "value": 4
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY chooser}",
        "operand2": 14,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "trump"
            ],
            "property": "customFace",
            "value": 5
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY chooser}",
        "operand2": 15,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "trump"
            ],
            "property": "customFace",
            "value": 6
          }
        ]
      },
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "image",
        "value": "${PROPERTY image}"
      },
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "text",
        "value": "${PROPERTY text}"
      },
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "deckSuitsColor",
        "value": "${PROPERTY deckSuitsColor}"
      }
    ],
    "deckSuitsColor": "",
    "image": ""
  },
  "chooseSuit": {
    "id": "chooseSuit",
    "fixedParent": true,
    "x": 310,
    "width": 130,
    "height": 190,
    "borderRadius": 8,
    "css": {
      "background": "#8ea7cc",
      "border": "3px solid #0d2f5e"
    },
    "parent": "chooseValue",
    "y": -3,
    "movable": false,
    "movableInEdit": false
  },
  "chooseValue": {
    "id": "chooseValue",
    "x": 595,
    "y": 320,
    "width": 310,
    "height": 190,
    "borderRadius": 8,
    "css": {
      "background": "#8ea7cc",
      "border": "3px solid #0d2f5e"
    },
    "movable": false,
    "movableInEdit": false,
    "scale": 0.8,
    "owner": []
  },
  "closeButton": {
    "type": "button",
    "id": "closeButton",
    "x": 312,
    "y": -52,
    "width": 130,
    "css": {
      "default": {
        "font-size": "30px",
        "background": "#0d2f5e",
        "border-color": "white"
      },
      ":hover": {
        "background": "#a9c6e8",
        "border-color": "black",
        "color": "black"
      }
    },
    "inheritFrom": {
      "choose0": "*"
    },
    "text": "Close",
    "clickRoutine": [
      {
        "func": "SELECT",
        "property": "clonedBy",
        "value": "${playerName}"
      },
      {
        "func": "DELETE"
      }
    ]
  },
  "scoreboard": {
    "type": "scoreboard",
    "id": "scoreboard",
    "x": 5,
    "y": 85,
    "height": 840,
    "autosizeColumns": false,
    "css": {
      ".scoreboard td:first-child": {
        "--firstColWidth": "10px"
      },
      ".scoreboard tbody tr:nth-child(1) td": {
        "border-top": "1px solid black"
      },
      ".scoreboard": {
        "background": "#FFFAF0"
      }
    },
    "movable": false,
    "movableInEdit": false,
    "currentRound": 1,
    "roundsCoiffeur": [
      "S",
      "C",
      "D",
      "H",
      "O",
      "U",
      "S",
      "G",
      "J1",
      "J2",
      "Match"
    ],
    "showAllRounds": true,
    "cssCoiffeur": {
      ".scoreboard td:first-child": {
        "--firstColWidth": "10px"
      },
      ".scoreboard tbody tr:nth-child(1) td": {
        "border-top": "1px solid black"
      },
      ".scoreboard tbody tr:nth-child(6) td": {
        "border-top": "1px solid black"
      },
      ".scoreboard tbody tr:nth-child(9) td": {
        "border-top": "1px solid black"
      },
      ".scoreboard tbody tr:nth-child(12) td": {
        "border-top": "1px solid black"
      },
      ".scoreboard": {
        "background": "#FFFAF0"
      }
    },
    "cssDefault": {
      ".scoreboard td:first-child": {
        "--firstColWidth": "10px"
      },
      ".scoreboard tbody tr:nth-child(1) td": {
        "border-top": "1px solid black"
      },
      ".scoreboard": {
        "background": "#FFFAF0"
      }
    },
    "verticalHeader": true,
    "seats": [
      "seat1",
      "seat2",
      "seat3",
      "seat4",
      "seat5",
      "seat6",
      "seat7",
      "seat8"
    ],
    "3pDeal": [
      0,
      7,
      8,
      9,
      10,
      11,
      12,
      12,
      11,
      10,
      9,
      8,
      7
    ]
  },
  "settings": {
    "type": "button",
    "id": "settings",
    "x": 1500,
    "y": 940,
    "width": 90,
    "height": 50,
    "movableInEdit": false,
    "css": "font-size: 17px; line-height:1.05",
    "text": "Visuals & Other",
    "clickRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Choose settings ..."
          },
          {
            "type": "subtitle",
            "text": "Play Holder"
          },
          {
            "type": "checkbox",
            "label": "Click cards in hand to send to play holder (uncheck to deactive click)?",
            "variable": "clickPlay",
            "value": "${PROPERTY clickPlay}"
          },
          {
            "type": "checkbox",
            "label": "Show common holder (uncheck to hide)?",
            "variable": "centerShow",
            "value": "${PROPERTY centerShow}"
          },
          {
            "type": "checkbox",
            "label": "Spread out cards in common holder (uncheck to make a pile)?",
            "variable": "centerSpread",
            "value": "${PROPERTY centerSpread}"
          },
          {
            "type": "checkbox",
            "label": "Play cards face up in play area (uncheck to make face down)?",
            "variable": "centerFace",
            "value": "${PROPERTY centerFace}"
          },
          {
            "type": "checkbox",
            "label": "Show face-up minature captured cards holder (check to display)?",
            "variable": "capturedHolder",
            "value": "${PROPERTY capturedHolder}"
          },
          {
            "type": "subtitle",
            "text": "Bid & Score Displays"
          },
          {
            "type": "checkbox",
            "label": "Show scoreboard (uncheck to hide)?",
            "variable": "showScore",
            "value": "${PROPERTY showScore}"
          },
          {
            "type": "checkbox",
            "label": "Show count of tricks taken per player (uncheck to hide)?",
            "variable": "showTricks",
            "value": "${PROPERTY showTricks}"
          },
          {
            "type": "checkbox",
            "label": "Show bid value (uncheck to hide)?",
            "variable": "showBidValue",
            "value": "${PROPERTY showBidValue}"
          },
          {
            "type": "checkbox",
            "label": "Show bid suit (uncheck to hide)?",
            "variable": "showBidSuit",
            "value": "${PROPERTY showBidSuit}"
          },
          {
            "type": "checkbox",
            "label": "Show discard holder (uncheck to hide)?",
            "variable": "showDiscard",
            "value": "${PROPERTY showDiscard}"
          },
          {
            "type": "checkbox",
            "label": "Show bid history (uncheck to hide)?",
            "variable": "showBidHistory",
            "value": "${PROPERTY showBidHistory}"
          },
          {
            "type": "checkbox",
            "label": "Show bids to everyone (uncheck for secret bidding)?",
            "variable": "showPublicBid",
            "value": "${PROPERTY showPublicBid}"
          },
          {
            "type": "subtitle",
            "text": "Other"
          },
          {
            "type": "checkbox",
            "label": "Turn moves clockwise (uncheck for counter-clockwise)?",
            "variable": "turnDirection",
            "value": "${PROPERTY turnDirection}"
          },
          {
            "type": "color",
            "label": "Choose background color",
            "variable": "bgColor",
            "value": "#deeaf0"
          }
        ],
        "confirmButtonText": "Confirm",
        "cancelButtonText": "Cancel"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "clickPlay",
        "value": "${clickPlay}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "centerShow",
        "value": "${centerShow}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "centerSpread",
        "value": "${centerSpread}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "centerFace",
        "value": "${centerFace}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "capturedHolder",
        "value": "${capturedHolder}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "showScore",
        "value": "${showScore}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "showTricks",
        "value": "${showTricks}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "showBidValue",
        "value": "${showBidValue}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "showBidSuit",
        "value": "${showBidSuit}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "showDiscard",
        "value": "${showDiscard}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "turnDirection",
        "value": "${turnDirection}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "showBidHistory",
        "value": "${showBidHistory}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "showPublicBid",
        "value": "${showPublicBid}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "bgColor",
        "value": "${bgColor}"
      },
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "playerAidRoutine"
      },
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "messageButtonRoutine"
      }
    ],
    "centerFaceChangeRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY centerFace}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "centerHolder",
              "holder1",
              "holder2",
              "holder3",
              "holder4",
              "holder5",
              "holder6",
              "holder7",
              "holder8"
            ],
            "property": "onEnter",
            "value": {
              "activeFace": 1
            }
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "centerHolder",
              "holder1",
              "holder2",
              "holder3",
              "holder4",
              "holder5",
              "holder6",
              "holder7",
              "holder8"
            ],
            "property": "onEnter",
            "value": {
              "activeFace": 0
            }
          }
        ]
      }
    ],
    "centerSpread": true,
    "centerSpreadChangeRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY centerSpread}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "centerHolder"
            ],
            "property": "normalOffSet",
            "value": true
          },
          {
            "func": "SET",
            "collection": [
              "centerHolder"
            ],
            "property": "stackOffsetX",
            "value": 40
          },
          {
            "func": "SET",
            "collection": [
              "centerHolder"
            ],
            "property": "x",
            "value": 650
          },
          {
            "func": "SET",
            "collection": [
              "centerHolder"
            ],
            "property": "width",
            "value": 300
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "centerHolder"
            ],
            "property": "normalOffSet",
            "value": false
          },
          {
            "func": "SET",
            "collection": [
              "centerHolder"
            ],
            "property": "stackOffsetX",
            "value": 0
          },
          {
            "func": "SET",
            "collection": [
              "centerHolder"
            ],
            "property": "x",
            "value": 750
          },
          {
            "func": "SET",
            "collection": [
              "centerHolder"
            ],
            "property": "width",
            "value": 111
          }
        ]
      }
    ],
    "showScore": true,
    "showTricks": true,
    "showScoreChangeRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY showScore}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "scoreboard"
            ],
            "property": "scale",
            "value": 1
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "scoreboard"
            ],
            "property": "scale",
            "value": 0
          }
        ]
      }
    ],
    "showTricksChangeRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY showTricks}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "trickCount"
            ],
            "property": "scale",
            "value": 1
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "trickCount"
            ],
            "property": "scale",
            "value": 0
          }
        ]
      }
    ],
    "showBidValueChangeRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY showBidValue}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "bidValue1"
            ],
            "property": "scale",
            "value": 1
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "bidValue1"
            ],
            "property": "scale",
            "value": 0
          }
        ]
      }
    ],
    "showBidSuitChangeRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY showBidSuit}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "bidSuit1"
            ],
            "property": "scale",
            "value": 1
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "bidSuit1"
            ],
            "property": "scale",
            "value": 0
          }
        ]
      }
    ],
    "showBidValue": true,
    "showBidSuit": true,
    "turnDirectionChangeRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY turnDirection}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "turnButton"
            ],
            "property": "direction",
            "value": "forward"
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "turnButton"
            ],
            "property": "direction",
            "value": "backward"
          }
        ]
      }
    ],
    "turnDirection": true,
    "showDiscardChangeRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY showDiscard}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "discard"
            ],
            "property": "scale",
            "value": 1
          },
          {
            "func": "SET",
            "collection": [
              "discard"
            ],
            "property": "dropLimit",
            "value": null
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "discard"
            ],
            "property": "scale",
            "value": 0
          },
          {
            "func": "SET",
            "collection": [
              "discard"
            ],
            "property": "dropLimit",
            "value": 0
          },
          {
            "func": "SET",
            "collection": [
              "deleteButton"
            ],
            "property": "scale",
            "value": 0
          },
          {
            "func": "SET",
            "collection": [
              "cloneButton"
            ],
            "property": "scale",
            "value": 0
          },
          {
            "func": "SET",
            "collection": [
              "settingsDecks"
            ],
            "property": "showDelete",
            "value": false
          }
        ]
      }
    ],
    "showDiscard": false,
    "centerShow": false,
    "centerShowChangeRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY centerShow}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "centerHolder"
            ],
            "property": "scale",
            "value": 1
          },
          {
            "func": "SET",
            "collection": [
              "centerHolder"
            ],
            "property": "dropLimit",
            "value": null
          },
          {
            "func": "SET",
            "collection": [
              "holder1",
              "holder2",
              "holder3",
              "holder4",
              "holder5",
              "holder6",
              "holder7",
              "holder8"
            ],
            "property": "onEnter",
            "value": {
              "activeFace": 0
            }
          },
          {
            "func": "SET",
            "collection": [
              "backHolder1",
              "backHolder2",
              "backHolder3",
              "backHolder4",
              "backHolder5",
              "backHolder6",
              "backHolder7",
              "backHolder8"
            ],
            "property": "dropLimit",
            "value": 0
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "centerHolder"
            ],
            "property": "scale",
            "value": 0
          },
          {
            "func": "SET",
            "collection": [
              "centerHolder"
            ],
            "property": "dropLimit",
            "value": 0
          },
          {
            "func": "SET",
            "collection": [
              "holder1",
              "holder2",
              "holder3",
              "holder4",
              "holder5",
              "holder6",
              "holder7",
              "holder8"
            ],
            "property": "onEnter",
            "value": {
              "activeFace": 1
            }
          },
          {
            "func": "FOREACH",
            "range": [
              8
            ],
            "loopRoutine": [
              {
                "func": "GET",
                "collection": [
                  "seat${value}"
                ],
                "property": "scale"
              },
              {
                "func": "IF",
                "operand1": "${scale}",
                "operand2": 0,
                "thenRoutine": [
                  {
                    "func": "SET",
                    "collection": [
                      "backHolder${value}"
                    ],
                    "property": "dropLimit",
                    "value": 0
                  }
                ],
                "elseRoutine": [
                  {
                    "func": "SET",
                    "collection": [
                      "backHolder${value}"
                    ],
                    "property": "dropLimit",
                    "value": null
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "func": "CALL",
        "widget": "settingsDecks",
        "routine": "4PlayerPositionRoutine"
      }
    ],
    "clickPlay": true,
    "layer": -4,
    "showBidHistoryChangeRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY showBidHistory}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "bids"
            ],
            "property": "scale",
            "value": 1
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "bids"
            ],
            "property": "scale",
            "value": 0
          }
        ]
      }
    ],
    "showBidHistory": true,
    "showPublicBidChangeRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY showPublicBid}",
        "thenRoutine": [
          {
            "func": "FOREACH",
            "range": [
              8
            ],
            "loopRoutine": [
              {
                "func": "SET",
                "collection": [
                  "bidValue${value}",
                  "bidSuit${value}"
                ],
                "property": "onlyVisibleForSeat",
                "value": null
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "FOREACH",
            "range": [
              8
            ],
            "loopRoutine": [
              {
                "func": "SET",
                "collection": [
                  "bidValue${value}",
                  "bidSuit${value}"
                ],
                "property": "onlyVisibleForSeat",
                "value": "seat${value}"
              }
            ]
          }
        ]
      }
    ],
    "showPublicBid": true,
    "centerFace": true,
    "gameStartRoutine": [
      {
        "func": "SHUFFLE",
        "holder": "deckHolder"
      }
    ],
    "capturedHolderChangeRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY capturedHolder}",
        "thenRoutine": [
          {
            "func": "FOREACH",
            "range": [
              8
            ],
            "loopRoutine": [
              {
                "func": "GET",
                "collection": [
                  "seat${value}"
                ],
                "property": "scale"
              },
              {
                "func": "IF",
                "operand1": "${scale}",
                "operand2": 0,
                "thenRoutine": [
                  {
                    "func": "SET",
                    "collection": [
                      "capturedHolder${value}"
                    ],
                    "property": "dropLimit",
                    "value": 0
                  },
                  {
                    "func": "SET",
                    "collection": [
                      "capturedHolder${value}"
                    ],
                    "property": "scale",
                    "value": 0
                  }
                ],
                "elseRoutine": [
                  {
                    "func": "SET",
                    "collection": [
                      "capturedHolder${value}"
                    ],
                    "property": "dropLimit",
                    "value": null
                  },
                  {
                    "func": "SET",
                    "collection": [
                      "capturedHolder${value}"
                    ],
                    "property": "scale",
                    "value": 0.2
                  }
                ]
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "capturedHolder1",
              "capturedHolder2",
              "capturedHolder3",
              "capturedHolder4",
              "capturedHolder5",
              "capturedHolder6",
              "capturedHolder7",
              "capturedHolder8"
            ],
            "property": "scale",
            "value": 0
          },
          {
            "func": "SET",
            "collection": [
              "capturedHolder1",
              "capturedHolder2",
              "capturedHolder3",
              "capturedHolder4",
              "capturedHolder5",
              "capturedHolder6",
              "capturedHolder7",
              "capturedHolder8"
            ],
            "property": "dropLimit",
            "value": 0
          }
        ]
      }
    ],
    "capturedHolder": false,
    "bgColorChangeRoutine": [
      {
        "func": "SET",
        "collection": [
          "background"
        ],
        "property": "bgColor",
        "value": "${PROPERTY bgColor}"
      }
    ],
    "bgColor": "#deeaf0",
    "showbidHistory": false
  },
  "holder1": {
    "type": "holder",
    "id": "holder1",
    "x": 20,
    "fixedParent": true,
    "parent": "seat1",
    "movableInEdit": false,
    "y": -180,
    "onEnter": {
      "activeFace": 1
    },
    "enterRoutine": [
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "GET",
        "collection": "child",
        "property": "dropShadowOwner"
      },
      {
        "func": "IF",
        "operand1": "${dropShadowOwner}",
        "operand2": null,
        "thenRoutine": [
          {
            "func": "GET",
            "collection": "child",
            "property": "type"
          },
          {
            "func": "IF",
            "operand1": "${type}",
            "relation": "!=",
            "operand2": "pile",
            "thenRoutine": [
              {
                "func": "CALL",
                "widget": "routines",
                "routine": "bidWinnerRoutine",
                "arguments": {
                  "seat": "${PROPERTY parent}"
                }
              }
            ]
          },
          {
            "func": "CALL",
            "widget": "routines",
            "routine": "stagedPlayRoutine"
          }
        ]
      },
      {
        "func": "IF",
        "condition": "${PROPERTY playEnterRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "${gameID}",
            "routine": "playEnterRoutine"
          }
        ]
      }
    ],
    "dropShadow": true,
    "css": {
      "background": "#ffffffdd"
    },
    "leaveRoutine": [
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "IF",
        "condition": "${PROPERTY playLeaveRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "${gameID}",
            "routine": "playLeaveRoutine"
          }
        ]
      }
    ]
  },
  "seat2": {
    "inheritFrom": {
      "seat1": [
        "!player",
        "!color",
        "!textColor",
        "!mainColor",
        "!sortDirection"
      ]
    },
    "type": "seat",
    "id": "seat2",
    "index": 2,
    "x": 435,
    "y": 535,
    "scale": 0,
    "score": [],
    "tricks": 0,
    "tempScore": [],
    "scoreCoiffeur": [
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " "
    ],
    "showing": false,
    "player": "",
    "color": "#999999",
    "turn": false
  },
  "bidValue2": {
    "inheritFrom": {
      "bidValue1": "*"
    },
    "id": "bidValue2",
    "parent": "seat2",
    "text": "",
    "image": "",
    "deckSuitsColor": "",
    "deckSuitsUni": "",
    "deckSuits": ""
  },
  "bidSuit2": {
    "inheritFrom": {
      "bidSuit1": "*"
    },
    "id": "bidSuit2",
    "parent": "seat2",
    "text": "",
    "deckSuitsColor": "",
    "deckSuitsUni": "",
    "deckSuits": "",
    "chooser": "",
    "image": ""
  },
  "holder2": {
    "inheritFrom": {
      "holder1": "*"
    },
    "type": "holder",
    "id": "holder2",
    "parent": "seat2",
    "x": 170,
    "y": -45,
    "onEnter": {
      "activeFace": 1
    },
    "dropLimit": 0
  },
  "seat3": {
    "inheritFrom": {
      "seat1": [
        "!player",
        "!color",
        "!textColor",
        "!mainColor",
        "!sortDirection"
      ]
    },
    "type": "seat",
    "id": "seat3",
    "index": 3,
    "x": 440,
    "y": 348,
    "color": "#999999",
    "scale": 1,
    "score": [],
    "tricks": 0,
    "tempScore": [],
    "scoreCoiffeur": [
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " "
    ],
    "showing": false,
    "trickCount": [
      0,
      0
    ]
  },
  "bidValue3": {
    "inheritFrom": {
      "bidValue1": "*"
    },
    "id": "bidValue3",
    "parent": "seat3",
    "text": "",
    "fontSize": "40px",
    "image": "",
    "deckSuitsColor": "",
    "deckSuitsUni": "",
    "deckSuits": ""
  },
  "bidSuit3": {
    "inheritFrom": {
      "bidSuit1": "*"
    },
    "id": "bidSuit3",
    "parent": "seat3",
    "text": "",
    "deckSuitsColor": "",
    "deckSuitsUni": "",
    "deckSuits": "",
    "chooser": "",
    "image": ""
  },
  "holder3": {
    "inheritFrom": {
      "holder1": "*"
    },
    "type": "holder",
    "id": "holder3",
    "parent": "seat3",
    "x": 160,
    "y": -45,
    "onEnter": {
      "activeFace": 1
    },
    "dropLimit": -1
  },
  "seat4": {
    "inheritFrom": {
      "seat1": [
        "!player",
        "!color",
        "!textColor",
        "!mainColor",
        "!sortDirection"
      ]
    },
    "type": "seat",
    "id": "seat4",
    "index": 4,
    "x": 435,
    "y": 160,
    "scale": 0,
    "score": [],
    "tricks": 0,
    "turn": false,
    "tempScore": [],
    "scoreCoiffeur": [
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " "
    ],
    "showing": false,
    "player": "",
    "color": "#999999"
  },
  "bidValue4": {
    "inheritFrom": {
      "bidValue1": "*"
    },
    "id": "bidValue4",
    "parent": "seat4",
    "text": "",
    "image": "",
    "deckSuitsColor": "",
    "deckSuitsUni": "",
    "deckSuits": ""
  },
  "bidSuit4": {
    "inheritFrom": {
      "bidSuit1": "*"
    },
    "id": "bidSuit4",
    "parent": "seat4",
    "text": "",
    "deckSuitsColor": "",
    "deckSuitsUni": "",
    "deckSuits": "",
    "chooser": "",
    "image": ""
  },
  "holder4": {
    "inheritFrom": {
      "holder1": "*"
    },
    "type": "holder",
    "id": "holder4",
    "parent": "seat4",
    "x": 170,
    "y": -45,
    "onEnter": {
      "activeFace": 1
    },
    "dropLimit": 0
  },
  "seat5": {
    "inheritFrom": {
      "seat1": [
        "!player",
        "!color",
        "!textColor",
        "!mainColor",
        "!sortDirection"
      ]
    },
    "type": "seat",
    "id": "seat5",
    "index": 5,
    "x": 720,
    "y": 125,
    "color": "#999999",
    "scale": 1,
    "score": [],
    "tricks": 0,
    "tempScore": [],
    "scoreCoiffeur": [
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " "
    ],
    "showing": false,
    "turn": false
  },
  "bidValue5": {
    "inheritFrom": {
      "bidValue1": "*"
    },
    "id": "bidValue5",
    "parent": "seat5",
    "text": "",
    "fontSize": "40px",
    "y": -60,
    "image": "",
    "deckSuitsColor": "",
    "deckSuitsUni": "",
    "deckSuits": ""
  },
  "bidSuit5": {
    "inheritFrom": {
      "bidSuit1": "*"
    },
    "id": "bidSuit5",
    "parent": "seat5",
    "text": "",
    "y": -60,
    "deckSuitsColor": "",
    "deckSuitsUni": "",
    "deckSuits": "",
    "chooser": "",
    "image": ""
  },
  "holder5": {
    "inheritFrom": {
      "holder1": "*"
    },
    "type": "holder",
    "id": "holder5",
    "parent": "seat5",
    "x": 20,
    "y": 50,
    "onEnter": {
      "activeFace": 1
    },
    "dropLimit": -1
  },
  "seat6": {
    "inheritFrom": {
      "seat1": [
        "!player",
        "!color",
        "!textColor",
        "!mainColor",
        "!sortDirection"
      ]
    },
    "type": "seat",
    "id": "seat6",
    "index": 6,
    "x": 1010,
    "y": 160,
    "scale": 0,
    "score": [],
    "tricks": 0,
    "turn": false,
    "tempScore": [],
    "scoreCoiffeur": [
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " "
    ],
    "showing": false,
    "player": "",
    "mainColor": "#ffffff",
    "textColor": "#000000",
    "glowColor": "#000000",
    "color": "#999999"
  },
  "bidValue6": {
    "inheritFrom": {
      "bidValue1": "*"
    },
    "id": "bidValue6",
    "parent": "seat6",
    "text": "",
    "image": "",
    "deckSuitsColor": "",
    "deckSuitsUni": "",
    "deckSuits": ""
  },
  "bidSuit6": {
    "inheritFrom": {
      "bidSuit1": "*"
    },
    "id": "bidSuit6",
    "parent": "seat6",
    "text": "",
    "deckSuitsColor": "",
    "deckSuitsUni": "",
    "deckSuits": "",
    "chooser": "",
    "image": ""
  },
  "holder6": {
    "inheritFrom": {
      "holder1": "*"
    },
    "type": "holder",
    "id": "holder6",
    "parent": "seat6",
    "x": -135,
    "y": -45,
    "onEnter": {
      "activeFace": 1
    },
    "dropLimit": 0
  },
  "seat7": {
    "inheritFrom": {
      "seat1": [
        "!player",
        "!color",
        "!textColor",
        "!mainColor",
        "!sortDirection"
      ]
    },
    "type": "seat",
    "id": "seat7",
    "index": 7,
    "x": 1005,
    "y": 348,
    "color": "#999999",
    "scale": 1,
    "score": [],
    "tricks": 0,
    "tempScore": [],
    "scoreCoiffeur": [
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " "
    ],
    "showing": false,
    "turn": false
  },
  "bidValue7": {
    "inheritFrom": {
      "bidValue1": "*"
    },
    "id": "bidValue7",
    "parent": "seat7",
    "text": "",
    "fontSize": "40px",
    "image": "",
    "deckSuitsColor": "",
    "deckSuitsUni": "",
    "deckSuits": ""
  },
  "bidSuit7": {
    "inheritFrom": {
      "bidSuit1": "*"
    },
    "id": "bidSuit7",
    "parent": "seat7",
    "text": "",
    "deckSuitsColor": "",
    "deckSuitsUni": "",
    "deckSuits": "",
    "chooser": "",
    "image": ""
  },
  "holder7": {
    "inheritFrom": {
      "holder1": "*"
    },
    "type": "holder",
    "id": "holder7",
    "parent": "seat7",
    "x": -130,
    "y": -45,
    "onEnter": {
      "activeFace": 1
    },
    "dropLimit": -1
  },
  "seat8": {
    "inheritFrom": {
      "seat1": [
        "!player",
        "!color",
        "!textColor",
        "!mainColor",
        "!sortDirection"
      ]
    },
    "type": "seat",
    "id": "seat8",
    "index": 8,
    "x": 1010,
    "y": 535,
    "scale": 0,
    "score": [],
    "tricks": 0,
    "turn": false,
    "tempScore": [],
    "scoreCoiffeur": [
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " "
    ],
    "showing": false,
    "player": "",
    "color": "#999999"
  },
  "bidValue8": {
    "inheritFrom": {
      "bidValue1": "*"
    },
    "id": "bidValue8",
    "parent": "seat8",
    "text": "",
    "image": "",
    "deckSuitsColor": "",
    "deckSuitsUni": "",
    "deckSuits": ""
  },
  "bidSuit8": {
    "inheritFrom": {
      "bidSuit1": "*"
    },
    "id": "bidSuit8",
    "parent": "seat8",
    "text": "",
    "image": "",
    "deckSuitsColor": "",
    "deckSuitsUni": "",
    "deckSuits": "",
    "chooser": ""
  },
  "holder8": {
    "inheritFrom": {
      "holder1": "*"
    },
    "type": "holder",
    "id": "holder8",
    "parent": "seat8",
    "x": -135,
    "y": -45,
    "onEnter": {
      "activeFace": 1
    },
    "dropLimit": 0
  },
  "trickCount": {
    "type": "scoreboard",
    "id": "trickCount",
    "x": 1325,
    "y": 260,
    "playersInColumns": false,
    "roundLabel": "Players",
    "scoreProperty": "tricks",
    "showTotals": false,
    "rounds": [
      "Tricks"
    ],
    "css": {
      ".scoreboard table": {
        "height": "100%"
      },
      ".scoreboard td": {
        "text-align": "center"
      },
      ".scoreboard": {
        "background": "#FFFAF0"
      }
    },
    "height": 280,
    "movable": false,
    "movableInEdit": false,
    "width": 200,
    "seats": [
      "seat1",
      "seat2",
      "seat3",
      "seat4",
      "seat5",
      "seat6",
      "seat7",
      "seat8"
    ]
  },
  "dealButton": {
    "type": "button",
    "id": "dealButton",
    "x": 1300,
    "y": 70,
    "movableInEdit": false,
    "clickRoutine": [
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "IF",
        "condition": "${PROPERTY dealLimit OF $gameID}",
        "thenRoutine": [
          {
            "func": "FOREACH",
            "in": [
              "seat1",
              "seat2",
              "seat3",
              "seat4",
              "seat5",
              "seat6",
              "seat7",
              "seat8"
            ],
            "loopRoutine": [
              "var keyPlus = ${key} + 1",
              {
                "func": "GET",
                "collection": [
                  "count${keyPlus}"
                ],
                "property": "text",
                "variable": "cardCount"
              },
              "var cardNeed = ${PROPERTY dealLimit OF $gameID} - ${cardCount}",
              {
                "func": "IF",
                "operand1": "${cardNeed}",
                "relation": ">",
                "operand2": 0,
                "thenRoutine": [
                  {
                    "func": "MOVE",
                    "from": "deckHolder",
                    "to": "${value}",
                    "count": "${cardNeed}"
                  }
                ]
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "MOVE",
            "from": "deckHolder",
            "to": [
              "seat1",
              "seat2",
              "seat3",
              "seat4",
              "seat5",
              "seat6",
              "seat7",
              "seat8"
            ],
            "count": "${PROPERTY cardCount OF settingsDecks}"
          }
        ]
      },
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "setTrumpsRoutine"
      },
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "dummyDealRoutine"
      },
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "autoSortRoutine"
      },
      {
        "func": "IF",
        "condition": "${PROPERTY dealRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "${gameID}",
            "routine": "dealRoutine"
          }
        ]
      }
    ],
    "text": "Deal",
    "width": 60,
    "height": 60
  },
  "deck1": {
    "type": "deck",
    "id": "deck1",
    "parent": "offHolder",
    "x": 4,
    "y": 4,
    "cardTypes": {
      "C 01": {
        "rank": "A",
        "rankImage": "i/icons/clubs.svg",
        "suitImage": "i/icons/clubs.svg",
        "redOrBlack": "black",
        "suit": 1,
        "suitCounterpoint": 1,
        "suitTruco": 1,
        "order": 1,
        "sortDefault": 13,
        "sortJassTrump": 11,
        "sortDoppel": 4,
        "sortAceTen": 13,
        "sortCoincheTrump": 11,
        "sortTrucoMineiro": 7,
        "sortTrucoPaulista": 4,
        "sortSkat": 13,
        "sortSuitSkat": 1
      },
      "C 02": {
        "rank": "2",
        "suitImage": "i/icons/clubs.svg",
        "suit-P12": "i/icons/clubs.svg",
        "suit-P52": "i/icons/clubs.svg",
        "redOrBlack": "black",
        "suit": 1,
        "suitCounterpoint": 1,
        "suitTruco": 1,
        "order": 2,
        "sortDefault": 1,
        "sortJassTrump": 1,
        "sortAceTen": 1,
        "sortTrucoMineiro": 6,
        "sortTrucoPaulista": 3
      },
      "C 03": {
        "rank": "3",
        "suitImage": "i/icons/clubs.svg",
        "suit-P12": "i/icons/clubs.svg",
        "suit-P32": "i/icons/clubs.svg",
        "suit-P52": "i/icons/clubs.svg",
        "redOrBlack": "black",
        "suit": 1,
        "suitCounterpoint": 1,
        "suitTruco": 1,
        "order": 3,
        "sortDefault": 2,
        "sortJassTrump": 2,
        "sortAceTen": 2,
        "sortTrucoMineiro": 5,
        "sortTrucoPaulista": 2
      },
      "C 04": {
        "rank": "4",
        "suitImage": "i/icons/clubs.svg",
        "suit-P11": "i/icons/clubs.svg",
        "suit-P13": "i/icons/clubs.svg",
        "suit-P51": "i/icons/clubs.svg",
        "suit-P53": "i/icons/clubs.svg",
        "redOrBlack": "black",
        "suit": 1,
        "suitCounterpoint": 1,
        "suitTruco": 1,
        "order": 4,
        "sortDefault": 3,
        "sortJassTrump": 3,
        "sortAceTen": 3,
        "sortTrucoMineiro": 1,
        "sortTrucoPaulista": 11
      },
      "C 05": {
        "rank": "5",
        "suitImage": "i/icons/clubs.svg",
        "suit-P11": "i/icons/clubs.svg",
        "suit-P13": "i/icons/clubs.svg",
        "suit-P32": "i/icons/clubs.svg",
        "suit-P51": "i/icons/clubs.svg",
        "suit-P53": "i/icons/clubs.svg",
        "redOrBlack": "black",
        "suit": 1,
        "suitCounterpoint": 1,
        "suitTruco": 1,
        "order": 5,
        "sortDefault": 4,
        "sortJassTrump": 4,
        "sortAceTen": 4,
        "sortTrucoMineiro": 13,
        "sortTrucoPaulista": 10
      },
      "C 06": {
        "rank": "6",
        "suitImage": "i/icons/clubs.svg",
        "suit-P11": "i/icons/clubs.svg",
        "suit-P13": "i/icons/clubs.svg",
        "suit-P31": "i/icons/clubs.svg",
        "suit-P33": "i/icons/clubs.svg",
        "suit-P51": "i/icons/clubs.svg",
        "suit-P53": "i/icons/clubs.svg",
        "redOrBlack": "black",
        "suit": 1,
        "suitCounterpoint": 1,
        "suitTruco": 1,
        "order": 6,
        "sortDefault": 5,
        "sortJassTrump": 5,
        "sortAceTen": 5,
        "sortTrucoMineiro": 12,
        "sortTrucoPaulista": 9,
        "sortBatardeTrump": 1
      },
      "C 07": {
        "rank": "7",
        "suitImage": "i/icons/clubs.svg",
        "suit-P11": "i/icons/clubs.svg",
        "suit-P13": "i/icons/clubs.svg",
        "suit-P22": "i/icons/clubs.svg",
        "suit-P31": "i/icons/clubs.svg",
        "suit-P33": "i/icons/clubs.svg",
        "suit-P51": "i/icons/clubs.svg",
        "suit-P53": "i/icons/clubs.svg",
        "redOrBlack": "black",
        "suit": 1,
        "suitCounterpoint": 1,
        "suitTruco": 1,
        "order": 7,
        "sortDefault": 6,
        "sortJassTrump": 6,
        "sortAceTen": 6,
        "sortCoincheTrump": 6,
        "sortTrucoMineiro": 11,
        "sortTrucoPaulista": 8,
        "sortSkat": 6,
        "sortSuitSkat": 1,
        "sortBatardeTrump": 2
      },
      "C 08": {
        "rank": "8",
        "suitImage": "i/icons/clubs.svg",
        "suit-P11": "i/icons/clubs.svg",
        "suit-P13": "i/icons/clubs.svg",
        "suit-P22": "i/icons/clubs.svg",
        "suit-P31": "i/icons/clubs.svg",
        "suit-P33": "i/icons/clubs.svg",
        "suit-P42": "i/icons/clubs.svg",
        "suit-P51": "i/icons/clubs.svg",
        "suit-P53": "i/icons/clubs.svg",
        "redOrBlack": "black",
        "suit": 1,
        "suitCounterpoint": 1,
        "suitTruco": 1,
        "order": 8,
        "sortDefault": 7,
        "sortJassTrump": 7,
        "sortAceTen": 7,
        "sortCoincheTrump": 7,
        "sortSkat": 7,
        "sortSuitSkat": 1,
        "sortBatardeTrump": 7
      },
      "C 09": {
        "rank": "9",
        "suitImage": "i/icons/clubs.svg",
        "suit-P11": "i/icons/clubs.svg",
        "suit-P13": "i/icons/clubs.svg",
        "suit-P32": "i/icons/clubs.svg",
        "suit-P51": "i/icons/clubs.svg",
        "suit-P53": "i/icons/clubs.svg",
        "suit-S21": "i/icons/clubs.svg",
        "suit-S23": "i/icons/clubs.svg",
        "suit-S31": "i/icons/clubs.svg",
        "suit-S33": "i/icons/clubs.svg",
        "redOrBlack": "black",
        "suit": 1,
        "suitCounterpoint": 1,
        "suitTruco": 1,
        "order": 9,
        "sortDefault": 8,
        "sortJassTrump": 12,
        "sortAceTen": 8,
        "sortCoincheTrump": 12,
        "sortSkat": 8,
        "sortSuitSkat": 1,
        "sortBatardeTrump": 8
      },
      "C 10": {
        "rank": "10",
        "suitImage": "i/icons/clubs.svg",
        "suit-P11": "i/icons/clubs.svg",
        "suit-P13": "i/icons/clubs.svg",
        "suit-P51": "i/icons/clubs.svg",
        "suit-P53": "i/icons/clubs.svg",
        "suit-S12": "i/icons/clubs.svg",
        "suit-S21": "i/icons/clubs.svg",
        "suit-S23": "i/icons/clubs.svg",
        "suit-S31": "i/icons/clubs.svg",
        "suit-S33": "i/icons/clubs.svg",
        "suit-S42": "i/icons/clubs.svg",
        "redOrBlack": "black",
        "suit": 1,
        "suitCounterpoint": 1,
        "suitTruco": 1,
        "order": 10,
        "sortDefault": 9,
        "sortJassTrump": 8,
        "sortDoppel": 3,
        "sortAceTen": 12,
        "sortCoincheTrump": 10,
        "sortSkat": 12,
        "sortSuitSkat": 1,
        "sortBatardeTrump": 9
      },
      "C 2J": {
        "rank": "J",
        "rankImage": "/assets/-1936516067_36132",
        "suitImage": "i/icons/clubs.svg",
        "redOrBlack": "black",
        "suit": 1,
        "suitCounterpoint": 1,
        "suitTruco": 1,
        "order": 11,
        "sortDefault": 10,
        "sortJassTrump": 13,
        "sortDoppel": 19,
        "sortAceTen": 9,
        "sortCoincheTrump": 13,
        "sortTrucoMineiro": 9,
        "sortTrucoPaulista": 6,
        "sortSkat": 17,
        "sortSuitSkat": 1,
        "sortBatardeTrump": 3
      },
      "C 3Q": {
        "rank": "Q",
        "rankImage": "/assets/-359721987_40577",
        "suitImage": "i/icons/clubs.svg",
        "redOrBlack": "black",
        "suit": 1,
        "suitCounterpoint": 1,
        "suitTruco": 1,
        "order": 12,
        "sortDefault": 11,
        "sortJassTrump": 9,
        "sortDoppel": 23,
        "sortAceTen": 10,
        "sortCoincheTrump": 8,
        "sortTrucoMineiro": 10,
        "sortTrucoPaulista": 7,
        "sortSkat": 10,
        "sortSuitSkat": 1,
        "sortBatardeTrump": 5
      },
      "C 4K": {
        "rank": "K",
        "rankImage": "/assets/-604240792_36033",
        "suitImage": "i/icons/clubs.svg",
        "redOrBlack": "black",
        "suit": 1,
        "suitCounterpoint": 1,
        "suitTruco": 1,
        "order": 13,
        "sortDefault": 12,
        "sortJassTrump": 10,
        "sortDoppel": 2,
        "sortAceTen": 11,
        "sortCoincheTrump": 9,
        "sortTrucoMineiro": 8,
        "sortTrucoPaulista": 5,
        "sortSkat": 11,
        "sortSuitSkat": 1,
        "sortBatardeTrump": 6
      },
      "D 01": {
        "rank": "A",
        "rankImage": "i/icons/diamonds.svg",
        "suitImage": "i/icons/diamonds.svg",
        "suitColor": "#e50932",
        "redOrBlack": "red",
        "suit": 2,
        "suitCounterpoint": 4,
        "suitTruco": 4,
        "order": 1,
        "sortDefault": 13,
        "sortJassTrump": 11,
        "sortDoppel": 15,
        "sortAceTen": 13,
        "sortCoincheTrump": 11,
        "sortTrucoMineiro": 7,
        "sortTrucoPaulista": 4,
        "sortSkat": 13,
        "sortSuitSkat": 4
      },
      "D 02": {
        "rank": "2",
        "suitImage": "i/icons/diamonds.svg",
        "suitColor": "#e50932",
        "suit-P12": "i/icons/diamonds.svg",
        "suit-P52": "i/icons/diamonds.svg",
        "redOrBlack": "red",
        "suit": 2,
        "suitCounterpoint": 4,
        "suitTruco": 4,
        "order": 2,
        "sortDefault": 1,
        "sortJassTrump": 1,
        "sortAceTen": 1,
        "sortTrucoMineiro": 6,
        "sortTrucoPaulista": 3
      },
      "D 03": {
        "rank": "3",
        "suitImage": "i/icons/diamonds.svg",
        "suitColor": "#e50932",
        "suit-P12": "i/icons/diamonds.svg",
        "suit-P32": "i/icons/diamonds.svg",
        "suit-P52": "i/icons/diamonds.svg",
        "redOrBlack": "red",
        "suit": 2,
        "suitCounterpoint": 4,
        "suitTruco": 4,
        "order": 3,
        "sortDefault": 2,
        "sortJassTrump": 21,
        "sortAceTen": 2,
        "sortTrucoMineiro": 5,
        "sortTrucoPaulista": 2
      },
      "D 04": {
        "rank": "4",
        "suitImage": "i/icons/diamonds.svg",
        "suitColor": "#e50932",
        "suit-P11": "i/icons/diamonds.svg",
        "suit-P13": "i/icons/diamonds.svg",
        "suit-P51": "i/icons/diamonds.svg",
        "suit-P53": "i/icons/diamonds.svg",
        "redOrBlack": "red",
        "suit": 2,
        "suitCounterpoint": 4,
        "suitTruco": 4,
        "order": 4,
        "sortDefault": 3,
        "sortJassTrump": 3,
        "sortAceTen": 3,
        "sortTrucoMineiro": 14,
        "sortTrucoPaulista": 11
      },
      "D 05": {
        "rank": "5",
        "suitImage": "i/icons/diamonds.svg",
        "suitColor": "#e50932",
        "suit-P11": "i/icons/diamonds.svg",
        "suit-P13": "i/icons/diamonds.svg",
        "suit-P32": "i/icons/diamonds.svg",
        "suit-P51": "i/icons/diamonds.svg",
        "suit-P53": "i/icons/diamonds.svg",
        "redOrBlack": "red",
        "suit": 2,
        "suitCounterpoint": 4,
        "suitTruco": 4,
        "order": 5,
        "sortDefault": 4,
        "sortJassTrump": 4,
        "sortAceTen": 4,
        "sortTrucoMineiro": 13,
        "sortTrucoPaulista": 10
      },
      "D 06": {
        "rank": "6",
        "suitImage": "i/icons/diamonds.svg",
        "suitColor": "#e50932",
        "suit-P11": "i/icons/diamonds.svg",
        "suit-P13": "i/icons/diamonds.svg",
        "suit-P31": "i/icons/diamonds.svg",
        "suit-P33": "i/icons/diamonds.svg",
        "suit-P51": "i/icons/diamonds.svg",
        "suit-P53": "i/icons/diamonds.svg",
        "redOrBlack": "red",
        "suit": 2,
        "suitCounterpoint": 4,
        "suitTruco": 4,
        "order": 6,
        "sortDefault": 5,
        "sortJassTrump": 5,
        "sortAceTen": 5,
        "sortTrucoMineiro": 12,
        "sortTrucoPaulista": 9,
        "sortBatardeTrump": 1
      },
      "D 07": {
        "rank": "7",
        "suitImage": "i/icons/diamonds.svg",
        "suitColor": "#e50932",
        "suit-P11": "i/icons/diamonds.svg",
        "suit-P13": "i/icons/diamonds.svg",
        "suit-P22": "i/icons/diamonds.svg",
        "suit-P31": "i/icons/diamonds.svg",
        "suit-P33": "i/icons/diamonds.svg",
        "suit-P51": "i/icons/diamonds.svg",
        "suit-P53": "i/icons/diamonds.svg",
        "redOrBlack": "red",
        "suit": 2,
        "suitCounterpoint": 4,
        "suitTruco": 4,
        "order": 7,
        "sortDefault": 6,
        "sortJassTrump": 6,
        "sortAceTen": 6,
        "sortCoincheTrump": 6,
        "sortTrucoMineiro": 4,
        "sortTrucoPaulista": 8,
        "sortSkat": 6,
        "sortSuitSkat": 4,
        "sortBatardeTrump": 2
      },
      "D 08": {
        "rank": "8",
        "suitImage": "i/icons/diamonds.svg",
        "suitColor": "#e50932",
        "suit-P11": "i/icons/diamonds.svg",
        "suit-P13": "i/icons/diamonds.svg",
        "suit-P22": "i/icons/diamonds.svg",
        "suit-P31": "i/icons/diamonds.svg",
        "suit-P33": "i/icons/diamonds.svg",
        "suit-P42": "i/icons/diamonds.svg",
        "suit-P51": "i/icons/diamonds.svg",
        "suit-P53": "i/icons/diamonds.svg",
        "redOrBlack": "red",
        "suit": 2,
        "suitCounterpoint": 4,
        "suitTruco": 4,
        "order": 8,
        "sortDefault": 7,
        "sortJassTrump": 7,
        "sortAceTen": 7,
        "sortCoincheTrump": 7,
        "sortSkat": 7,
        "sortSuitSkat": 4,
        "sortBatardeTrump": 7
      },
      "D 09": {
        "rank": "9",
        "suitImage": "i/icons/diamonds.svg",
        "suitColor": "#e50932",
        "suit-P11": "i/icons/diamonds.svg",
        "suit-P13": "i/icons/diamonds.svg",
        "suit-P32": "i/icons/diamonds.svg",
        "suit-P51": "i/icons/diamonds.svg",
        "suit-P53": "i/icons/diamonds.svg",
        "suit-S21": "i/icons/diamonds.svg",
        "suit-S23": "i/icons/diamonds.svg",
        "suit-S31": "i/icons/diamonds.svg",
        "suit-S33": "i/icons/diamonds.svg",
        "redOrBlack": "red",
        "suit": 2,
        "suitCounterpoint": 4,
        "suitTruco": 4,
        "order": 9,
        "sortDefault": 8,
        "sortJassTrump": 11,
        "sortDoppel": 12,
        "sortAceTen": 8,
        "sortCoincheTrump": 12,
        "sortSkat": 8,
        "sortSuitSkat": 4,
        "sortBatardeTrump": 8
      },
      "D 10": {
        "rank": "10",
        "suitImage": "i/icons/diamonds.svg",
        "suitColor": "#e50932",
        "suit-P11": "i/icons/diamonds.svg",
        "suit-P13": "i/icons/diamonds.svg",
        "suit-P51": "i/icons/diamonds.svg",
        "suit-P53": "i/icons/diamonds.svg",
        "suit-S12": "i/icons/diamonds.svg",
        "suit-S21": "i/icons/diamonds.svg",
        "suit-S23": "i/icons/diamonds.svg",
        "suit-S31": "i/icons/diamonds.svg",
        "suit-S33": "i/icons/diamonds.svg",
        "suit-S42": "i/icons/diamonds.svg",
        "redOrBlack": "red",
        "suit": 2,
        "suitCounterpoint": 4,
        "suitTruco": 4,
        "order": 10,
        "sortDefault": 9,
        "sortJassTrump": 8,
        "sortDoppel": 14,
        "sortAceTen": 12,
        "sortCoincheTrump": 10,
        "sortSkat": 12,
        "sortSuitSkat": 4,
        "sortBatardeTrump": 9
      },
      "D 2J": {
        "rank": "J",
        "rankImage": "/assets/-696466837_31225",
        "suitImage": "i/icons/diamonds.svg",
        "redOrBlack": "red",
        "suitColor": "#e50932",
        "suit": 2,
        "suitCounterpoint": 4,
        "suitTruco": 4,
        "order": 11,
        "sortDefault": 10,
        "sortJassTrump": 13,
        "sortDoppel": 16,
        "sortAceTen": 9,
        "sortCoincheTrump": 13,
        "sortTrucoMineiro": 9,
        "sortTrucoPaulista": 6,
        "sortSkat": 14,
        "sortSuitSkat": 4,
        "sortBatardeTrump": 3
      },
      "D 3Q": {
        "rank": "Q",
        "rankImage": "/assets/-132931377_41422",
        "suitImage": "i/icons/diamonds.svg",
        "suitColor": "#e50932",
        "redOrBlack": "red",
        "suit": 2,
        "suitCounterpoint": 4,
        "suitTruco": 4,
        "order": 12,
        "sortDefault": 11,
        "sortJassTrump": 9,
        "sortDoppel": 20,
        "sortAceTen": 10,
        "sortCoincheTrump": 8,
        "sortTrucoMineiro": 10,
        "sortTrucoPaulista": 7,
        "sortSkat": 10,
        "sortSuitSkat": 4,
        "sortBatardeTrump": 5
      },
      "D 4K": {
        "rank": "K",
        "rankImage": "/assets/-862690059_30988",
        "suitImage": "i/icons/diamonds.svg",
        "suitColor": "#e50932",
        "redOrBlack": "red",
        "suit": 2,
        "suitCounterpoint": 4,
        "suitTruco": 4,
        "order": 13,
        "sortDefault": 12,
        "sortJassTrump": 10,
        "sortDoppel": 13,
        "sortAceTen": 11,
        "sortCoincheTrump": 9,
        "sortTrucoMineiro": 8,
        "sortTrucoPaulista": 5,
        "sortSkat": 11,
        "sortSuitSkat": 4,
        "sortBatardeTrump": 6
      },
      "S 01": {
        "rank": "A",
        "rankImage": "i/icons/spades.svg",
        "suitImage": "i/icons/spades.svg",
        "redOrBlack": "black",
        "suit": 3,
        "suitCounterpoint": 3,
        "suitTruco": 3,
        "order": 1,
        "sortDefault": 13,
        "sortJassTrump": 11,
        "sortDoppel": 11,
        "sortAceTen": 13,
        "sortCoincheTrump": 11,
        "sortTrucoMineiro": 3,
        "sortTrucoPaulista": 4,
        "sortSkat": 13,
        "sortSuitSkat": 2
      },
      "S 02": {
        "rank": "2",
        "suitImage": "i/icons/spades.svg",
        "suit-P12": "i/icons/spades.svg",
        "suit-P52": "i/icons/spades.svg",
        "redOrBlack": "black",
        "suit": 3,
        "suitCounterpoint": 3,
        "suitTruco": 3,
        "order": 2,
        "sortDefault": 1,
        "sortJassTrump": 1,
        "sortAceTen": 1,
        "sortTrucoMineiro": 6,
        "sortTrucoPaulista": 3
      },
      "S 03": {
        "rank": "3",
        "suitImage": "i/icons/spades.svg",
        "suit-P12": "i/icons/spades.svg",
        "suit-P32": "i/icons/spades.svg",
        "suit-P52": "i/icons/spades.svg",
        "redOrBlack": "black",
        "suit": 3,
        "suitCounterpoint": 3,
        "suitTruco": 3,
        "order": 3,
        "sortDefault": 2,
        "sortJassTrump": 2,
        "sortAceTen": 2,
        "sortTrucoMineiro": 5,
        "sortTrucoPaulista": 2
      },
      "S 04": {
        "rank": "4",
        "suitImage": "i/icons/spades.svg",
        "suit-P11": "i/icons/spades.svg",
        "suit-P13": "i/icons/spades.svg",
        "suit-P51": "i/icons/spades.svg",
        "suit-P53": "i/icons/spades.svg",
        "redOrBlack": "black",
        "suit": 3,
        "suitCounterpoint": 3,
        "suitTruco": 3,
        "order": 4,
        "sortDefault": 3,
        "sortJassTrump": 3,
        "sortAceTen": 3,
        "sortTrucoMineiro": 14,
        "sortTrucoPaulista": 11
      },
      "S 05": {
        "rank": "5",
        "suitImage": "i/icons/spades.svg",
        "suit-P11": "i/icons/spades.svg",
        "suit-P13": "i/icons/spades.svg",
        "suit-P32": "i/icons/spades.svg",
        "suit-P51": "i/icons/spades.svg",
        "suit-P53": "i/icons/spades.svg",
        "redOrBlack": "black",
        "suit": 3,
        "suitCounterpoint": 3,
        "suitTruco": 3,
        "order": 5,
        "sortDefault": 4,
        "sortJassTrump": 4,
        "sortAceTen": 4,
        "sortTrucoMineiro": 13,
        "sortTrucoPaulista": 10
      },
      "S 06": {
        "rank": "6",
        "suitImage": "i/icons/spades.svg",
        "suit-P11": "i/icons/spades.svg",
        "suit-P13": "i/icons/spades.svg",
        "suit-P31": "i/icons/spades.svg",
        "suit-P33": "i/icons/spades.svg",
        "suit-P51": "i/icons/spades.svg",
        "suit-P53": "i/icons/spades.svg",
        "redOrBlack": "black",
        "suit": 3,
        "suitCounterpoint": 3,
        "suitTruco": 3,
        "order": 6,
        "sortDefault": 5,
        "sortJassTrump": 5,
        "sortAceTen": 5,
        "sortTrucoMineiro": 12,
        "sortTrucoPaulista": 9,
        "sortBatardeTrump": 1
      },
      "S 07": {
        "rank": "7",
        "suitImage": "i/icons/spades.svg",
        "suit-P11": "i/icons/spades.svg",
        "suit-P13": "i/icons/spades.svg",
        "suit-P22": "i/icons/spades.svg",
        "suit-P31": "i/icons/spades.svg",
        "suit-P33": "i/icons/spades.svg",
        "suit-P51": "i/icons/spades.svg",
        "suit-P53": "i/icons/spades.svg",
        "redOrBlack": "black",
        "suit": 3,
        "suitCounterpoint": 3,
        "suitTruco": 3,
        "order": 7,
        "sortDefault": 6,
        "sortJassTrump": 6,
        "sortAceTen": 6,
        "sortCoincheTrump": 6,
        "sortTrucoMineiro": 11,
        "sortTrucoPaulista": 8,
        "sortSkat": 6,
        "sortSuitSkat": 2,
        "sortBatardeTrump": 2
      },
      "S 08": {
        "rank": "8",
        "suitImage": "i/icons/spades.svg",
        "suit-P11": "i/icons/spades.svg",
        "suit-P13": "i/icons/spades.svg",
        "suit-P22": "i/icons/spades.svg",
        "suit-P31": "i/icons/spades.svg",
        "suit-P33": "i/icons/spades.svg",
        "suit-P42": "i/icons/spades.svg",
        "suit-P51": "i/icons/spades.svg",
        "suit-P53": "i/icons/spades.svg",
        "redOrBlack": "black",
        "suit": 3,
        "suitCounterpoint": 3,
        "suitTruco": 3,
        "order": 8,
        "sortDefault": 7,
        "sortJassTrump": 7,
        "sortAceTen": 7,
        "sortCoincheTrump": 7,
        "sortSkat": 7,
        "sortSuitSkat": 2,
        "sortBatardeTrump": 7
      },
      "S 09": {
        "rank": "9",
        "suitImage": "i/icons/spades.svg",
        "suit-P11": "i/icons/spades.svg",
        "suit-P13": "i/icons/spades.svg",
        "suit-P32": "i/icons/spades.svg",
        "suit-P51": "i/icons/spades.svg",
        "suit-P53": "i/icons/spades.svg",
        "suit-S21": "i/icons/spades.svg",
        "suit-S23": "i/icons/spades.svg",
        "suit-S31": "i/icons/spades.svg",
        "suit-S33": "i/icons/spades.svg",
        "redOrBlack": "black",
        "suit": 3,
        "suitCounterpoint": 3,
        "suitTruco": 3,
        "order": 9,
        "sortDefault": 8,
        "sortJassTrump": 12,
        "sortDoppel": 8,
        "sortAceTen": 8,
        "sortCoincheTrump": 12,
        "sortSkat": 8,
        "sortSuitSkat": 2,
        "sortBatardeTrump": 8
      },
      "S 10": {
        "rank": "10",
        "suitImage": "i/icons/spades.svg",
        "suit-P11": "i/icons/spades.svg",
        "suit-P13": "i/icons/spades.svg",
        "suit-P51": "i/icons/spades.svg",
        "suit-P53": "i/icons/spades.svg",
        "suit-S12": "i/icons/spades.svg",
        "suit-S21": "i/icons/spades.svg",
        "suit-S23": "i/icons/spades.svg",
        "suit-S31": "i/icons/spades.svg",
        "suit-S33": "i/icons/spades.svg",
        "suit-S42": "i/icons/spades.svg",
        "redOrBlack": "black",
        "suit": 3,
        "suitCounterpoint": 3,
        "suitTruco": 3,
        "order": 10,
        "sortDefault": 9,
        "sortJassTrump": 8,
        "sortDoppel": 10,
        "sortAceTen": 12,
        "sortCoincheTrump": 10,
        "sortSkat": 12,
        "sortSuitSkat": 2,
        "sortBatardeTrump": 9
      },
      "S 2J": {
        "rank": "J",
        "rankImage": "/assets/2115758924_42014",
        "suitImage": "i/icons/spades.svg",
        "redOrBlack": "black",
        "suit": 3,
        "suitCounterpoint": 3,
        "suitTruco": 3,
        "order": 11,
        "sortDefault": 10,
        "sortJassTrump": 13,
        "sortDoppel": 18,
        "sortAceTen": 9,
        "sortCoincheTrump": 13,
        "sortTrucoMineiro": 9,
        "sortTrucoPaulista": 6,
        "sortSkat": 16,
        "sortSuitSkat": 2,
        "sortBatardeTrump": 3
      },
      "S 3Q": {
        "rank": "Q",
        "rankImage": "/assets/1085111785_36695",
        "suitImage": "i/icons/spades.svg",
        "redOrBlack": "black",
        "suit": 3,
        "suitCounterpoint": 3,
        "suitTruco": 3,
        "order": 12,
        "sortDefault": 11,
        "sortJassTrump": 9,
        "sortDoppel": 22,
        "sortAceTen": 10,
        "sortCoincheTrump": 8,
        "sortTrucoMineiro": 10,
        "sortTrucoPaulista": 7,
        "sortSkat": 10,
        "sortSuitSkat": 2,
        "sortBatardeTrump": 5
      },
      "S 4K": {
        "rank": "K",
        "rankImage": "/assets/-1882019559_61400",
        "suitImage": "i/icons/spades.svg",
        "redOrBlack": "black",
        "suit": 3,
        "suitCounterpoint": 3,
        "suitTruco": 3,
        "order": 13,
        "sortDefault": 12,
        "sortJassTrump": 10,
        "sortDoppel": 9,
        "sortAceTen": 11,
        "sortCoincheTrump": 9,
        "sortTrucoMineiro": 8,
        "sortTrucoPaulista": 5,
        "sortSkat": 11,
        "sortSuitSkat": 2,
        "sortBatardeTrump": 6
      },
      "H 01": {
        "rank": "A",
        "rankImage": "i/icons/hearts.svg",
        "suitImage": "i/icons/hearts.svg",
        "suitColor": "#e50932",
        "redOrBlack": "red",
        "suit": 4,
        "suitCounterpoint": 2,
        "suitTruco": 2,
        "order": 1,
        "sortDefault": 13,
        "sortJassTrump": 11,
        "sortDoppel": 7,
        "sortAceTen": 13,
        "sortCoincheTrump": 11,
        "sortTrucoMineiro": 7,
        "sortTrucoPaulista": 4,
        "sortSkat": 13,
        "sortSuitSkat": 3
      },
      "H 02": {
        "rank": "2",
        "suitImage": "i/icons/hearts.svg",
        "suitColor": "#e50932",
        "suit-P12": "i/icons/hearts.svg",
        "suit-P52": "i/icons/hearts.svg",
        "redOrBlack": "red",
        "suit": 4,
        "suitCounterpoint": 2,
        "suitTruco": 2,
        "order": 2,
        "sortDefault": 1,
        "sortJassTrump": 1,
        "sortAceTen": 1,
        "sortTrucoMineiro": 6,
        "sortTrucoPaulista": 3
      },
      "H 03": {
        "rank": "3",
        "suitImage": "i/icons/hearts.svg",
        "suitColor": "#e50932",
        "suit-P12": "i/icons/hearts.svg",
        "suit-P32": "i/icons/hearts.svg",
        "suit-P52": "i/icons/hearts.svg",
        "redOrBlack": "red",
        "suit": 4,
        "suitCounterpoint": 2,
        "suitTruco": 2,
        "order": 3,
        "sortDefault": 2,
        "sortJassTrump": 2,
        "sortAceTen": 2,
        "sortTrucoMineiro": 5,
        "sortTrucoPaulista": 2
      },
      "H 04": {
        "rank": "4",
        "suitImage": "i/icons/hearts.svg",
        "suitColor": "#e50932",
        "suit-P11": "i/icons/hearts.svg",
        "suit-P13": "i/icons/hearts.svg",
        "suit-P51": "i/icons/hearts.svg",
        "suit-P53": "i/icons/hearts.svg",
        "redOrBlack": "red",
        "suit": 4,
        "suitCounterpoint": 2,
        "suitTruco": 2,
        "order": 4,
        "sortDefault": 3,
        "sortJassTrump": 3,
        "sortAceTen": 3,
        "sortTrucoMineiro": 14,
        "sortTrucoPaulista": 11
      },
      "H 05": {
        "rank": "5",
        "suitImage": "i/icons/hearts.svg",
        "suitColor": "#e50932",
        "suit-P11": "i/icons/hearts.svg",
        "suit-P13": "i/icons/hearts.svg",
        "suit-P32": "i/icons/hearts.svg",
        "suit-P51": "i/icons/hearts.svg",
        "suit-P53": "i/icons/hearts.svg",
        "redOrBlack": "red",
        "suit": 4,
        "suitCounterpoint": 2,
        "suitTruco": 2,
        "order": 5,
        "sortDefault": 4,
        "sortJassTrump": 4,
        "sortAceTen": 4,
        "sortTrucoMineiro": 13,
        "sortTrucoPaulista": 10
      },
      "H 06": {
        "rank": "6",
        "suitImage": "i/icons/hearts.svg",
        "suitColor": "#e50932",
        "suit-P11": "i/icons/hearts.svg",
        "suit-P13": "i/icons/hearts.svg",
        "suit-P31": "i/icons/hearts.svg",
        "suit-P33": "i/icons/hearts.svg",
        "suit-P51": "i/icons/hearts.svg",
        "suit-P53": "i/icons/hearts.svg",
        "redOrBlack": "red",
        "suit": 4,
        "suitCounterpoint": 2,
        "suitTruco": 2,
        "order": 6,
        "sortDefault": 5,
        "sortJassTrump": 5,
        "sortAceTen": 5,
        "sortTrucoMineiro": 12,
        "sortTrucoPaulista": 9,
        "sortBatardeTrump": 1
      },
      "H 07": {
        "rank": "7",
        "suitImage": "i/icons/hearts.svg",
        "suitColor": "#e50932",
        "suit-P11": "i/icons/hearts.svg",
        "suit-P13": "i/icons/hearts.svg",
        "suit-P22": "i/icons/hearts.svg",
        "suit-P31": "i/icons/hearts.svg",
        "suit-P33": "i/icons/hearts.svg",
        "suit-P51": "i/icons/hearts.svg",
        "suit-P53": "i/icons/hearts.svg",
        "redOrBlack": "red",
        "suit": 4,
        "suitCounterpoint": 2,
        "suitTruco": 2,
        "order": 7,
        "sortDefault": 6,
        "sortJassTrump": 6,
        "sortAceTen": 6,
        "sortCoincheTrump": 6,
        "sortTrucoMineiro": 2,
        "sortTrucoPaulista": 8,
        "sortSkat": 6,
        "sortSuitSkat": 3,
        "sortBatardeTrump": 2
      },
      "H 08": {
        "rank": "8",
        "suitImage": "i/icons/hearts.svg",
        "suitColor": "#e50932",
        "suit-P11": "i/icons/hearts.svg",
        "suit-P13": "i/icons/hearts.svg",
        "suit-P22": "i/icons/hearts.svg",
        "suit-P31": "i/icons/hearts.svg",
        "suit-P33": "i/icons/hearts.svg",
        "suit-P42": "i/icons/hearts.svg",
        "suit-P51": "i/icons/hearts.svg",
        "suit-P53": "i/icons/hearts.svg",
        "redOrBlack": "red",
        "suit": 4,
        "suitCounterpoint": 2,
        "suitTruco": 2,
        "order": 8,
        "sortDefault": 7,
        "sortJassTrump": 7,
        "sortAceTen": 7,
        "sortCoincheTrump": 7,
        "sortSkat": 7,
        "sortSuitSkat": 3,
        "sortBatardeTrump": 7
      },
      "H 09": {
        "rank": "9",
        "suitImage": "i/icons/hearts.svg",
        "suitColor": "#e50932",
        "suit-P11": "i/icons/hearts.svg",
        "suit-P13": "i/icons/hearts.svg",
        "suit-P32": "i/icons/hearts.svg",
        "suit-P51": "i/icons/hearts.svg",
        "suit-P53": "i/icons/hearts.svg",
        "suit-S21": "i/icons/hearts.svg",
        "suit-S23": "i/icons/hearts.svg",
        "suit-S31": "i/icons/hearts.svg",
        "suit-S33": "i/icons/hearts.svg",
        "redOrBlack": "red",
        "suit": 4,
        "suitCounterpoint": 2,
        "suitTruco": 2,
        "order": 9,
        "sortDefault": 8,
        "sortJassTrump": 12,
        "sortDoppel": 5,
        "sortAceTen": 8,
        "sortCoincheTrump": 12,
        "sortSkat": 8,
        "sortSuitSkat": 3,
        "sortBatardeTrump": 8
      },
      "H 10": {
        "rank": "10",
        "suitImage": "i/icons/hearts.svg",
        "suitColor": "#e50932",
        "suit-P11": "i/icons/hearts.svg",
        "suit-P13": "i/icons/hearts.svg",
        "suit-P51": "i/icons/hearts.svg",
        "suit-P53": "i/icons/hearts.svg",
        "suit-S12": "i/icons/hearts.svg",
        "suit-S21": "i/icons/hearts.svg",
        "suit-S23": "i/icons/hearts.svg",
        "suit-S31": "i/icons/hearts.svg",
        "suit-S33": "i/icons/hearts.svg",
        "suit-S42": "i/icons/hearts.svg",
        "redOrBlack": "red",
        "suit": 4,
        "suitCounterpoint": 2,
        "suitTruco": 2,
        "order": 10,
        "sortDefault": 9,
        "sortJassTrump": 8,
        "sortDoppel": 24,
        "sortAceTen": 12,
        "sortCoincheTrump": 10,
        "sortSkat": 12,
        "sortSuitSkat": 3,
        "sortBatardeTrump": 9
      },
      "H 2J": {
        "rank": "J",
        "rankImage": "/assets/-560751544_37381",
        "suitImage": "i/icons/hearts.svg",
        "suitColor": "#e50932",
        "redOrBlack": "red",
        "suit": 4,
        "suitCounterpoint": 2,
        "suitTruco": 2,
        "order": 11,
        "sortDefault": 10,
        "sortJassTrump": 13,
        "sortDoppel": 17,
        "sortAceTen": 9,
        "sortCoincheTrump": 13,
        "sortTrucoMineiro": 9,
        "sortTrucoPaulista": 6,
        "sortSkat": 15,
        "sortSuitSkat": 3,
        "sortBatardeTrump": 3
      },
      "H 3Q": {
        "rank": "Q",
        "rankImage": "/assets/-1553973424_45799",
        "suitImage": "i/icons/hearts.svg",
        "suitColor": "#e50932",
        "redOrBlack": "red",
        "suit": 4,
        "suitCounterpoint": 2,
        "suitTruco": 2,
        "order": 12,
        "sortDefault": 11,
        "sortJassTrump": 9,
        "sortDoppel": 21,
        "sortAceTen": 10,
        "sortCoincheTrump": 8,
        "sortTrucoMineiro": 10,
        "sortTrucoPaulista": 7,
        "sortSkat": 10,
        "sortSuitSkat": 3,
        "sortBatardeTrump": 5
      },
      "H 4K": {
        "rank": "K",
        "rankImage": "/assets/-511606639_49182",
        "suitImage": "i/icons/hearts.svg",
        "suitColor": "#e50932",
        "redOrBlack": "red",
        "suit": 4,
        "suitCounterpoint": 2,
        "suitTruco": 2,
        "order": 13,
        "sortDefault": 12,
        "sortJassTrump": 10,
        "sortDoppel": 6,
        "sortAceTen": 11,
        "sortCoincheTrump": 9,
        "sortTrucoMineiro": 8,
        "sortTrucoPaulista": 5,
        "sortSkat": 11,
        "sortSuitSkat": 3,
        "sortBatardeTrump": 6
      }
    },
    "faceTemplates": [
      {
        "border": false,
        "radius": false,
        "objects": [
          {
            "type": "image",
            "x": 0,
            "y": 0,
            "width": 103,
            "height": 160,
            "color": "transparent",
            "value": "/i/cards-default/2B.svg"
          }
        ]
      },
      {
        "border": 1,
        "radius": 6,
        "objects": [
          {
            "type": "image",
            "width": 103,
            "height": 160,
            "color": "white"
          },
          {
            "type": "image",
            "x": 25,
            "y": 25,
            "width": 53,
            "height": 110,
            "color": "white",
            "dynamicProperties": {
              "value": "rankImage"
            },
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "css": {
              "background-size": "100% 100%"
            }
          },
          {
            "type": "text",
            "x": -3,
            "y": -2,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "rank",
              "color": "suitColor"
            },
            "css": {
              "letter-spacing": "-6px"
            }
          },
          {
            "type": "text",
            "x": -3,
            "y": 25,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "deck2Mark",
              "color": "suitColor"
            },
            "css": {
              "letter-spacing": "-6px"
            }
          },
          {
            "type": "text",
            "x": 81,
            "y": 127,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "rank",
              "color": "suitColor"
            },
            "rotation": 180,
            "css": {
              "letter-spacing": "-6px"
            }
          },
          {
            "type": "text",
            "x": 81,
            "y": 100,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "deck2Mark",
              "color": "suitColor"
            },
            "rotation": 180,
            "css": {
              "letter-spacing": "-6px"
            }
          },
          {
            "type": "image",
            "x": 1,
            "y": 28,
            "width": 23,
            "height": 23,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImage"
            }
          },
          {
            "type": "image",
            "x": 79,
            "y": 110,
            "width": 23,
            "height": 23,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImage"
            },
            "rotation": 180
          },
          {
            "type": "image",
            "x": 25,
            "y": 25,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P11"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 25,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P12"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 25,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P13"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 48.5,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P21"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 48.5,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P22"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 48.5,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P23"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 72,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P31"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 72,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P32"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 72,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P33"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 95.5,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P41"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 95.5,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P42"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 95.5,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P43"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 119,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P51"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 119,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P52"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 119,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P53"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 40.6,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S11"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 40.6,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S12"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 40.6,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S13"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 56.3,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S21"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 56.3,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S22"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 56.3,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S23"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 87.7,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S31"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 87.7,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S32"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 87.7,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S33"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 103.3,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S41"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 103.3,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S42"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 103.3,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S43"
            }
          }
        ]
      }
    ],
    "cardDefaults": {
      "classes": "transition",
      "css": {
        "default": {
          "font-weight": "normal",
          "color": "#000000"
        },
        ":hover::after": {
          "scale": 1,
          "display": "block"
        },
        "::after": {
          "content": "\" \"",
          "display": "none",
          "height": "160px",
          "box-shadow": "${PROPERTY shadow}",
          "border-radius": "8px"
        }
      },
      "stagedChangeRoutine": [
        {
          "func": "SET",
          "collection": "thisButton",
          "property": "y",
          "relation": "-",
          "value": 20
        }
      ],
      "clickRoutine": [
        {
          "func": "IF",
          "condition": "${PROPERTY shadow}",
          "thenRoutine": [
            {
              "func": "IF",
              "condition": "${PROPERTY clickPlay OF settings}",
              "thenRoutine": [
                {
                  "func": "CALL",
                  "widget": "routines",
                  "routine": "clickCardRoutine",
                  "arguments": {
                    "thisCard": "${PROPERTY id}",
                    "thisSeat": "${seatIndex}"
                  }
                }
              ]
            }
          ],
          "elseRoutine": [
            {
              "func": "CLICK",
              "collection": "thisButton",
              "mode": "ignoreClickRoutine"
            }
          ]
        }
      ]
    },
    "staged": false,
    "deckSuits": [
      "",
      "clubs",
      "diamonds",
      "spades",
      "hearts"
    ],
    "deckSuitsColor": [
      "",
      "",
      "#e50932",
      "",
      "#e50932",
      "",
      ""
    ],
    "deckSuitsImage": [
      "",
      "i/icons/clubs.svg",
      "i/icons/diamonds.svg",
      "i/icons/spades.svg",
      "i/icons/hearts.svg",
      "",
      ""
    ],
    "deckSuitsText": [
      "",
      "",
      "",
      "",
      "",
      "No\nTrump",
      "All\nTrump"
    ],
    "deckSuitsUni": [
      "",
      "♣",
      "♦",
      "♠",
      "♥",
      "NT",
      "AT"
    ],
    "deckType": 0,
    "deckDiceFaces": [
      {
        "image": "i/icons/clubs.svg"
      },
      {
        "image": "i/icons/diamonds.svg",
        "deckSuitColor": "#e50932"
      },
      {
        "image": "i/icons/spades.svg"
      },
      {
        "image": "i/icons/hearts.svg",
        "deckSuitColor": "#e50932"
      }
    ]
  },
  "6exv_A_C": {
    "id": "6exv_A_C",
    "deck": "deck2",
    "type": "card",
    "cardType": "C 01",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_2_C": {
    "id": "6exv_2_C",
    "deck": "deck2",
    "type": "card",
    "cardType": "C 02",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_3_C": {
    "id": "6exv_3_C",
    "deck": "deck2",
    "type": "card",
    "cardType": "C 03",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_4_C": {
    "id": "6exv_4_C",
    "deck": "deck2",
    "type": "card",
    "cardType": "C 04",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_5_C": {
    "id": "6exv_5_C",
    "deck": "deck2",
    "type": "card",
    "cardType": "C 05",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_6_C": {
    "id": "6exv_6_C",
    "deck": "deck2",
    "type": "card",
    "cardType": "C 06",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_7_C": {
    "id": "6exv_7_C",
    "deck": "deck2",
    "type": "card",
    "cardType": "C 07",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_8_C": {
    "id": "6exv_8_C",
    "deck": "deck2",
    "type": "card",
    "cardType": "C 08",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_9_C": {
    "id": "6exv_9_C",
    "deck": "deck2",
    "type": "card",
    "cardType": "C 09",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_T_C": {
    "id": "6exv_T_C",
    "deck": "deck2",
    "type": "card",
    "cardType": "C 10",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_J_C": {
    "id": "6exv_J_C",
    "deck": "deck2",
    "type": "card",
    "cardType": "C 2J",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_Q_C": {
    "id": "6exv_Q_C",
    "deck": "deck2",
    "type": "card",
    "cardType": "C 3Q",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_K_C": {
    "id": "6exv_K_C",
    "deck": "deck2",
    "type": "card",
    "cardType": "C 4K",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_A_D": {
    "id": "6exv_A_D",
    "deck": "deck2",
    "type": "card",
    "cardType": "D 01",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_2_D": {
    "id": "6exv_2_D",
    "deck": "deck2",
    "type": "card",
    "cardType": "D 02",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_3_D": {
    "id": "6exv_3_D",
    "deck": "deck2",
    "type": "card",
    "cardType": "D 03",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_4_D": {
    "id": "6exv_4_D",
    "deck": "deck2",
    "type": "card",
    "cardType": "D 04",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_5_D": {
    "id": "6exv_5_D",
    "deck": "deck2",
    "type": "card",
    "cardType": "D 05",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_6_D": {
    "id": "6exv_6_D",
    "deck": "deck2",
    "type": "card",
    "cardType": "D 06",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_7_D": {
    "id": "6exv_7_D",
    "deck": "deck2",
    "type": "card",
    "cardType": "D 07",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_8_D": {
    "id": "6exv_8_D",
    "deck": "deck2",
    "type": "card",
    "cardType": "D 08",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_9_D": {
    "id": "6exv_9_D",
    "deck": "deck2",
    "type": "card",
    "cardType": "D 09",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_T_D": {
    "id": "6exv_T_D",
    "deck": "deck2",
    "type": "card",
    "cardType": "D 10",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_J_D": {
    "id": "6exv_J_D",
    "deck": "deck2",
    "type": "card",
    "cardType": "D 2J",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_Q_D": {
    "id": "6exv_Q_D",
    "deck": "deck2",
    "type": "card",
    "cardType": "D 3Q",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_K_D": {
    "id": "6exv_K_D",
    "deck": "deck2",
    "type": "card",
    "cardType": "D 4K",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_A_H": {
    "id": "6exv_A_H",
    "deck": "deck2",
    "type": "card",
    "cardType": "H 01",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_2_H": {
    "id": "6exv_2_H",
    "deck": "deck2",
    "type": "card",
    "cardType": "H 02",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_3_H": {
    "id": "6exv_3_H",
    "deck": "deck2",
    "type": "card",
    "cardType": "H 03",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_4_H": {
    "id": "6exv_4_H",
    "deck": "deck2",
    "type": "card",
    "cardType": "H 04",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_5_H": {
    "id": "6exv_5_H",
    "deck": "deck2",
    "type": "card",
    "cardType": "H 05",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_6_H": {
    "id": "6exv_6_H",
    "deck": "deck2",
    "type": "card",
    "cardType": "H 06",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_7_H": {
    "id": "6exv_7_H",
    "deck": "deck2",
    "type": "card",
    "cardType": "H 07",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_8_H": {
    "id": "6exv_8_H",
    "deck": "deck2",
    "type": "card",
    "cardType": "H 08",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_9_H": {
    "id": "6exv_9_H",
    "deck": "deck2",
    "type": "card",
    "cardType": "H 09",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_T_H": {
    "id": "6exv_T_H",
    "deck": "deck2",
    "type": "card",
    "cardType": "H 10",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_J_H": {
    "id": "6exv_J_H",
    "parent": "pile2",
    "deck": "deck2",
    "type": "card",
    "cardType": "H 2J",
    "staged": false
  },
  "6exv_Q_H": {
    "id": "6exv_Q_H",
    "parent": "pile2",
    "deck": "deck2",
    "type": "card",
    "cardType": "H 3Q",
    "staged": false
  },
  "6exv_K_H": {
    "id": "6exv_K_H",
    "deck": "deck2",
    "type": "card",
    "cardType": "H 4K",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_A_S": {
    "id": "6exv_A_S",
    "deck": "deck2",
    "type": "card",
    "cardType": "S 01",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_2_S": {
    "id": "6exv_2_S",
    "deck": "deck2",
    "type": "card",
    "cardType": "S 02",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_3_S": {
    "id": "6exv_3_S",
    "deck": "deck2",
    "type": "card",
    "cardType": "S 03",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_4_S": {
    "id": "6exv_4_S",
    "deck": "deck2",
    "type": "card",
    "cardType": "S 04",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_5_S": {
    "id": "6exv_5_S",
    "deck": "deck2",
    "type": "card",
    "cardType": "S 05",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_6_S": {
    "id": "6exv_6_S",
    "deck": "deck2",
    "type": "card",
    "cardType": "S 06",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_7_S": {
    "id": "6exv_7_S",
    "deck": "deck2",
    "type": "card",
    "cardType": "S 07",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_8_S": {
    "id": "6exv_8_S",
    "deck": "deck2",
    "type": "card",
    "cardType": "S 08",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_9_S": {
    "id": "6exv_9_S",
    "parent": "pile2",
    "deck": "deck2",
    "type": "card",
    "cardType": "S 09",
    "staged": false
  },
  "6exv_T_S": {
    "id": "6exv_T_S",
    "deck": "deck2",
    "type": "card",
    "cardType": "S 10",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_J_S": {
    "id": "6exv_J_S",
    "parent": "pile2",
    "deck": "deck2",
    "type": "card",
    "cardType": "S 2J",
    "staged": false
  },
  "6exv_Q_S": {
    "id": "6exv_Q_S",
    "deck": "deck2",
    "type": "card",
    "cardType": "S 3Q",
    "staged": false,
    "parent": "pile2"
  },
  "6exv_K_S": {
    "id": "6exv_K_S",
    "deck": "deck2",
    "type": "card",
    "cardType": "S 4K",
    "staged": false,
    "parent": "pile2"
  },
  "offHolder": {
    "type": "holder",
    "id": "offHolder",
    "x": 1625,
    "dropTarget": {
      "type": "card"
    },
    "y": 21
  },
  "deck2": {
    "type": "deck",
    "id": "deck2",
    "parent": "offHolder",
    "x": 4,
    "y": 4,
    "width": 86,
    "height": 86,
    "movable": true,
    "movableInEdit": true,
    "inheritFrom": {
      "deck1": [
        "cardDefaults",
        "faceTemplates",
        "cardTypes",
        "deckDiceFaces",
        "deckSuits",
        "deckSuitsColor",
        "deckSuitsImage",
        "deckSuitsText",
        "deckSuitsUni"
      ]
    },
    "staged": false,
    "clickable": true
  },
  "jokers": {
    "type": "deck",
    "id": "jokers",
    "parent": "offHolder",
    "x": 12,
    "y": 41,
    "cardTypes": {
      "T 1J": {
        "image": "/i/cards-default/1J.svg",
        "suit": 0,
        "rankJoker": 1,
        "suitColor": "🃏",
        "suitAlt": "5J",
        "rank": "J1",
        "rankA": "J1",
        "rankFixed": "J1 T",
        "sortDefault": 15,
        "order": 14
      },
      "T 2J": {
        "image": "/i/cards-default/2J.svg",
        "suit": 0,
        "rankJoker": 2,
        "suitColor": "🃏",
        "suitAlt": "5J",
        "rank": "J2",
        "rankA": "J2",
        "rankFixed": "J2 T",
        "sortDefault": 14,
        "order": 15
      },
      "T 3J": {
        "image": "/i/cards-default/3J.svg",
        "suit": 0,
        "rankJoker": 3,
        "suitColor": "🃏",
        "suitAlt": "5J",
        "rank": "J3",
        "rankA": "J3",
        "rankFixed": "J3 T",
        "sortDefault": 15,
        "order": 14
      },
      "T 4J": {
        "image": "/i/cards-default/4J.svg",
        "suit": 0,
        "rankJoker": 4,
        "suitColor": "🃏",
        "suitAlt": "5J",
        "rank": "J4",
        "rankA": "J4",
        "rankFixed": "J4 T",
        "sortDefault": 14,
        "order": 15
      }
    },
    "faceTemplates": [
      {
        "border": false,
        "radius": false,
        "objects": [
          {
            "type": "image",
            "x": 0,
            "y": 0,
            "width": 103,
            "height": 160,
            "color": "transparent",
            "value": "/i/cards-default/2B.svg"
          }
        ]
      },
      {
        "border": 1,
        "radius": 6,
        "objects": [
          {
            "type": "image",
            "x": 0,
            "y": 0,
            "width": 103,
            "height": 160,
            "color": "transparent",
            "dynamicProperties": {
              "value": "image"
            }
          },
          {
            "type": "text",
            "x": -3,
            "y": 81,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "rankJoker"
            }
          },
          {
            "type": "text",
            "x": 80,
            "y": 45,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "rankJoker"
            },
            "css": {
              "transform": "rotate(180deg)"
            }
          }
        ]
      }
    ],
    "width": 86,
    "height": 86,
    "movable": true,
    "movableInEdit": true,
    "inheritFrom": {
      "deck1": [
        "cardDefaults"
      ]
    }
  },
  "jokerRed1": {
    "type": "card",
    "id": "jokerRed1",
    "deck": "jokers",
    "cardType": "T 2J",
    "staged": false,
    "parent": "pile2",
    "sortDefault": 9.5,
    "suit": 1,
    "z": 19198
  },
  "jokerRed2": {
    "type": "card",
    "id": "jokerRed2",
    "deck": "jokers",
    "cardType": "T 2J",
    "parent": "pile2",
    "staged": false,
    "z": 19199
  },
  "jokerBlack1": {
    "type": "card",
    "id": "jokerBlack1",
    "deck": "jokers",
    "cardType": "T 1J",
    "staged": false,
    "parent": "pile2",
    "z": 19200
  },
  "jokerBlack2": {
    "type": "card",
    "id": "jokerBlack2",
    "deck": "jokers",
    "cardType": "T 1J",
    "staged": false,
    "parent": "pile2",
    "z": 19201
  },
  "discard": {
    "type": "holder",
    "id": "discard",
    "x": 1375,
    "y": 565,
    "movableInEdit": false,
    "css": {
      "background": "#ffffff80"
    },
    "dropTarget": {
      "type": "card"
    },
    "scale": 0,
    "dropLimit": 0
  },
  "centerHolder": {
    "type": "holder",
    "id": "centerHolder",
    "x": 650,
    "y": 310,
    "movableInEdit": false,
    "dropShadow": true,
    "onEnter": {
      "activeFace": 1
    },
    "enterRoutine": [
      {
        "func": "GET",
        "collection": "child",
        "property": "dropShadowOwner"
      },
      {
        "func": "IF",
        "operand1": "${dropShadowOwner}",
        "operand2": null,
        "thenRoutine": [
          {
            "func": "SELECT",
            "type": "seat",
            "property": "player",
            "value": "${PROPERTY lastCardBy OF centerHolder}"
          },
          {
            "func": "GET",
            "property": "id"
          },
          {
            "func": "CALL",
            "widget": "routines",
            "routine": "bidWinnerRoutine",
            "arguments": {
              "seat": "${id}"
            }
          },
          {
            "func": "CALL",
            "widget": "routines",
            "routine": "stagedPlayRoutine"
          }
        ]
      },
      {
        "func": "CALL",
        "routine": "offSetRoutine"
      },
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "IF",
        "condition": "${PROPERTY centerEnterRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "${gameID}",
            "routine": "centerEnterRoutine"
          }
        ]
      }
    ],
    "leaveRoutine": [
      {
        "func": "CALL",
        "routine": "offSetRoutine"
      },
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "IF",
        "condition": "${PROPERTY centerLeaveRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "${gameID}",
            "routine": "centerLeaveRoutine"
          }
        ]
      }
    ],
    "offSetRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY normalOffSet}",
        "thenRoutine": [
          "var cardWidth = 103",
          "var normalOffset = 40",
          {
            "func": "SELECT",
            "property": "parent",
            "value": "${PROPERTY id}"
          },
          {
            "func": "COUNT"
          },
          {
            "func": "IF",
            "operand1": "${COUNT}",
            "relation": "<=",
            "operand2": 1,
            "thenRoutine": [
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "stackOffsetX",
                "value": "${normalOffset}"
              }
            ],
            "elseRoutine": [
              "var modCount = ${COUNT} - 1",
              "var available = ${PROPERTY width} - ${cardWidth}",
              "var dropOffset = ${PROPERTY dropOffsetX} * 2",
              "var available = ${available} - ${dropOffset}",
              "var perCard = ${available} / ${modCount}",
              "var offset = ${perCard} min ${normalOffset}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "stackOffsetX",
                "value": "${offset}"
              }
            ]
          }
        ]
      }
    ],
    "normalOffSet": true,
    "css": {
      "background": "#ffffff50"
    },
    "stackOffsetX": 40,
    "width": 300,
    "turn": true,
    "centerHolderRoutine": [
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "value": "centerHolder"
      },
      {
        "func": "GET"
      }
    ],
    "scale": 0,
    "dropLimit": 0
  },
  "deleteButton": {
    "type": "button",
    "id": "deleteButton",
    "x": 1500,
    "y": 610,
    "height": 30,
    "css": {
      "default": {
        "color": "white",
        "background": "red",
        "border-color": "crimson"
      },
      ":hover": {
        "border-color": "red",
        "background": "pink",
        "color": "black"
      }
    },
    "text": "Delete",
    "clickRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Deleting cards ..."
          },
          {
            "type": "subtitle",
            "text": "This will delete all cards in the Discard holder from this game. They can only be restored by reloading from the library. Are you sure?"
          }
        ],
        "confirmButtonText": "Yes",
        "cancelButtonText": "No"
      },
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "value": "discard"
      },
      {
        "func": "DELETE"
      }
    ],
    "scale": 0
  },
  "trump": {
    "id": "trump",
    "width": 40,
    "height": 40,
    "borderRadius": 8,
    "css": {
      "background": "#ffffff",
      "background-size": "contain",
      "background-repeat": "no-repeat",
      "background-position": "center",
      "border": "1px solid black",
      "color": "black",
      "font-size": "15px",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "movableInEdit": false,
    "x": 255,
    "y": 950,
    "svgReplaces": {
      "currentColor": "deckSuitsColor"
    },
    "customFace": 0,
    "customFaceChangeRoutine": [
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      "var deckType = ${PROPERTY deckType OF settingsDecks}",
      "var customFace = ${PROPERTY customFace}",
      {
        "func": "IF",
        "operand1": "${deckType}",
        "operand2": 1,
        "thenRoutine": [
          "// Needed because there are no decks with this type. Setting back to 0 gets deck1 and deck2.",
          "var deckType = 0"
        ]
      },
      {
        "func": "SELECT",
        "type": "deck",
        "property": "deckType",
        "value": "${deckType}"
      },
      {
        "func": "GET",
        "property": "id",
        "variable": "thisDeck"
      },
      "var deckSuitsText = ${PROPERTY deckSuitsText OF $thisDeck}",
      "var deckSuitsText = ${deckSuitsText.$customFace}",
      "var deckSuitsImage = ${PROPERTY deckSuitsImage OF $thisDeck}",
      "var deckSuitsImage = ${deckSuitsImage.$customFace}",
      "var deckSuitsColor = ${PROPERTY deckSuitsColor OF $thisDeck}",
      "var deckSuitsColor = ${deckSuitsColor.$customFace}",
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "text",
        "value": "${deckSuitsText}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "image",
        "value": "${deckSuitsImage}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "deckSuitsColor",
        "value": "${deckSuitsColor}"
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY text}",
        "operand2": "No\nTrump",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "trump",
            "value": "-"
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "trump",
            "value": "${customFace}"
          }
        ]
      },
      {
        "func": "IF",
        "condition": "${PROPERTY trumpRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "${gameID}",
            "routine": "trumpRoutine"
          }
        ]
      },
      "//This is needed because of Pitch",
      {
        "func": "SELECT",
        "type": "card",
        "property": "deck",
        "value": "deck1"
      },
      {
        "func": "SET",
        "property": "suit",
        "value": null
      },
      {
        "func": "SET",
        "property": "sortDefault",
        "value": null
      },
      "//This is needed because of Mighty",
      {
        "func": "IF",
        "operand1": "${PROPERTY trump}",
        "operand2": 3,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "mighty"
            ],
            "property": "activeFace",
            "value": 1
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "mighty"
            ],
            "property": "activeFace",
            "value": 0
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY trump}",
            "operand2": 1,
            "thenRoutine": [
              {
                "func": "SET",
                "collection": [
                  "ripper"
                ],
                "property": "activeFace",
                "value": 1
              }
            ],
            "elseRoutine": [
              {
                "func": "SET",
                "collection": [
                  "ripper"
                ],
                "property": "activeFace",
                "value": 0
              }
            ]
          }
        ]
      }
    ],
    "clickRoutine": [
      "var a = ${PROPERTY customFace} + 1",
      "var b = ${a} % ${PROPERTY customFaceCount}",
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "customFace",
        "value": "${b}"
      }
    ],
    "customFaceCount": 6,
    "trump": 0,
    "deckSuitsColor": "",
    "resetProperties": {
      "x": 255,
      "y": 950
    }
  },
  "trumpLabel": {
    "id": "trumpLabel",
    "width": 40,
    "height": 20,
    "text": "Trump",
    "fixedParent": true,
    "x": 132,
    "movable": false,
    "movableInEdit": false,
    "parent": "scoreButton",
    "css": {
      "color": "black"
    },
    "y": -5
  },
  "scoreButton": {
    "type": "button",
    "id": "scoreButton",
    "x": 120,
    "y": 933,
    "height": 30,
    "movableInEdit": false,
    "clickRoutine": [
      "//Get the length of the array used in the this scoring system",
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      "var pointsArray = ${PROPERTY scoreSystem OF $gameID}",
      "var scoreSystemLength = length ${pointsArray}",
      "var longest = []",
      {
        "func": "FOREACH",
        "range": [
          0,
          "${scoreSystemLength}"
        ],
        "loopRoutine": [
          "var pointsArrayLength = ${pointsArray.$value} length",
          "var longest = push ${pointsArrayLength}"
        ]
      },
      "var longest = numericSort ${longest}",
      "var longest = ${longest.$scoreSystemLength} - 1",
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "depth",
        "value": "${longest}"
      },
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Calculating score ..."
          },
          {
            "type": "subtitle",
            "text": "This will enter scores in the small scoreboard directly above. Make sure (1) all cards to be counted are in the player holders for captured tricks, (2) the trump indicator to the right is correct (if needed for proper scoring for this game), and (3) the declarer indicator to the left is correct (if needed for proper scoring). Are you sure you want to continue?"
          }
        ],
        "confirmButtonText": "Yes",
        "cancelButtonText": "No"
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY customFace OF trump}",
        "operand2": 0,
        "thenRoutine": [
          {
            "func": "IF",
            "condition": "${PROPERTY trumpIndicator OF $gameID}",
            "thenRoutine": [
              {
                "func": "INPUT",
                "fields": [
                  {
                    "type": "title",
                    "text": "Trump not set..."
                  },
                  {
                    "type": "subtitle",
                    "text": "The trump indicator to the right of this button is not set. Setting it is necessary for most games using this scoring system. Are you sure you want to continue?"
                  }
                ],
                "confirmButtonText": "Yes",
                "cancelButtonText": "No"
              },
              {
                "func": "CALL",
                "routine": "scoreRoutine"
              }
            ],
            "elseRoutine": [
              {
                "func": "CALL",
                "routine": "scoreRoutine"
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "CALL",
            "routine": "scoreRoutine"
          }
        ]
      }
    ],
    "activeBoard": "scoreboard",
    "activeProperty": "score",
    "scoreRoutine": [
      "var activeBoard = ${PROPERTY activeBoard}",
      "var activeProperty = ${PROPERTY activeProperty}",
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      "var gamePoints = ${PROPERTY scoreSystem OF $gameID}",
      "var allGamePoints = ${gamePoints.0}",
      "var trumpGamePoints = ${gamePoints.1}",
      "var otherGamePoints = ${gamePoints.2}",
      "var noTrumpGamePoints = ${gamePoints.3}",
      "var score = []",
      "var length = ${trumpGamePoints} length",
      "var round = ${PROPERTY currentRound OF $activeBoard} - 1",
      {
        "func": "IF",
        "operand1": "${length}",
        "relation": ">",
        "operand2": 0,
        "thenRoutine": [
          {
            "func": "GET",
            "collection": [
              "trump"
            ],
            "property": "trump",
            "variable": "trump"
          }
        ],
        "elseRoutine": [
          "var trump = ''"
        ]
      },
      {
        "func": "FOREACH",
        "range": [
          8
        ],
        "loopRoutine": [
          "var points = 0",
          "var thisSeat = 'seat' + ${value}",
          "var score = ${PROPERTY $activeProperty OF $thisSeat}",
          "//4 possible collections for each player: allCards, noTrumpCards, trumpCards, and otherCards. trump and other go together as a group; each of the 3 groups is mutually exclusive.",
          {
            "func": "SELECT",
            "type": "card",
            "property": "_ancestor",
            "relation": "in",
            "value": [
              "holder${value}",
              "backHolder${value}",
              "capturedHolder${value}"
            ],
            "collection": "allCards"
          },
          {
            "func": "IF",
            "condition": "${PROPERTY doNotCount OF $gameID}",
            "thenRoutine": [
              "var removeHolder = ${PROPERTY doNotCount OF $gameID} + ${value}",
              {
                "func": "SELECT",
                "source": "allCards",
                "type": "card",
                "property": "_ancestor",
                "mode": "remove",
                "value": "${removeHolder}",
                "collection": "allCards"
              }
            ]
          },
          {
            "func": "IF",
            "operand1": "${trump}",
            "relation": "!=",
            "operand2": "",
            "thenRoutine": [
              {
                "func": "IF",
                "operand1": "${trump}",
                "relation": "!=",
                "operand2": "-",
                "thenRoutine": [
                  {
                    "func": "SELECT",
                    "source": "allCards",
                    "property": "suit",
                    "value": "${trump}",
                    "collection": "trumpCards"
                  },
                  {
                    "func": "SELECT",
                    "source": "allCards",
                    "property": "suit",
                    "relation": "!=",
                    "value": "${trump}",
                    "collection": "otherCards"
                  },
                  "//Set the allCards collection to nothing to avoid double counting and the noTrumpCards collection to nothing to avoid debug errors",
                  {
                    "func": "SELECT",
                    "type": "card",
                    "property": "_ancestor",
                    "value": "doesNotExist",
                    "collection": "allCards"
                  },
                  {
                    "func": "SELECT",
                    "type": "card",
                    "property": "_ancestor",
                    "value": "doesNotExist",
                    "collection": "noTrumpCards"
                  }
                ],
                "elseRoutine": [
                  {
                    "func": "SELECT",
                    "type": "card",
                    "property": "_ancestor",
                    "relation": "in",
                    "value": [
                      "holder${value}",
                      "backHolder${value}",
                      "capturedHolder${value}"
                    ],
                    "collection": "noTrumpCards"
                  },
                  "//Set the allCards collection to nothing to avoid double counting",
                  {
                    "func": "SELECT",
                    "type": "card",
                    "property": "_ancestor",
                    "value": "doesNotExist",
                    "collection": "allCards"
                  }
                ]
              }
            ]
          },
          {
            "func": "FOREACH",
            "collection": "allCards",
            "loopRoutine": [
              {
                "func": "GET",
                "collection": "DEFAULT",
                "property": "order",
                "variable": "thisCard"
              },
              {
                "func": "FOREACH",
                "range": [
                  "${PROPERTY depth}"
                ],
                "loopRoutine": [
                  {
                    "func": "IF",
                    "operand1": "${thisCard}",
                    "operand2": "${value}",
                    "thenRoutine": [
                      "var points = ${points} + ${allGamePoints.$value}"
                    ]
                  }
                ]
              }
            ]
          },
          {
            "func": "FOREACH",
            "collection": "trumpCards",
            "loopRoutine": [
              {
                "func": "GET",
                "collection": "DEFAULT",
                "property": "order",
                "variable": "thisCard"
              },
              {
                "func": "FOREACH",
                "range": [
                  "${PROPERTY depth}"
                ],
                "loopRoutine": [
                  {
                    "func": "IF",
                    "operand1": "${thisCard}",
                    "operand2": "${value}",
                    "thenRoutine": [
                      "var points = ${points} + ${trumpGamePoints.$value}"
                    ]
                  }
                ]
              }
            ]
          },
          {
            "func": "FOREACH",
            "collection": "otherCards",
            "loopRoutine": [
              {
                "func": "GET",
                "collection": "DEFAULT",
                "property": "order",
                "variable": "thisCard"
              },
              {
                "func": "FOREACH",
                "range": [
                  "${PROPERTY depth}"
                ],
                "loopRoutine": [
                  {
                    "func": "IF",
                    "operand1": "${thisCard}",
                    "operand2": "${value}",
                    "thenRoutine": [
                      "var points = ${points} + ${otherGamePoints.$value}"
                    ]
                  }
                ]
              }
            ]
          },
          {
            "func": "FOREACH",
            "collection": "noTrumpCards",
            "loopRoutine": [
              {
                "func": "GET",
                "collection": "DEFAULT",
                "property": "order",
                "variable": "thisCard"
              },
              {
                "func": "FOREACH",
                "range": [
                  "${PROPERTY depth}"
                ],
                "loopRoutine": [
                  {
                    "func": "IF",
                    "operand1": "${thisCard}",
                    "operand2": "${value}",
                    "thenRoutine": [
                      "var points = ${points} + ${noTrumpGamePoints.$value}"
                    ]
                  }
                ]
              }
            ]
          },
          "var points = round ${points}",
          "//If there are no exceptions, then result needs to be pre-filled with the value of points.",
          "var result = ${points}",
          {
            "func": "IF",
            "condition": "${PROPERTY scoreExceptionsRoutine OF $gameID}",
            "thenRoutine": [
              {
                "func": "CALL",
                "widget": "${gameID}",
                "routine": "scoreExceptionsRoutine"
              }
            ]
          },
          "var score.$round = ${result}",
          {
            "func": "IF",
            "operand1": "${activeBoard}",
            "operand2": "scoreboard",
            "thenRoutine": [
              {
                "func": "SCORE",
                "property": "score",
                "round": 1,
                "seats": "${thisSeat}",
                "value": "${score.$round}"
              },
              {
                "func": "xSET",
                "collection": [
                  "${thisSeat}"
                ],
                "property": "score",
                "value": "${score}"
              }
            ],
            "elseRoutine": [
              {
                "func": "SCORE",
                "property": "tempScore",
                "round": 1,
                "seats": "${thisSeat}",
                "value": "${score.$round}"
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "condition": "${PROPERTY variableScore OF settingsDecks}",
        "thenRoutine": [
          {
            "func": "CALL",
            "routine": "variablePartnerRoutine"
          }
        ]
      },
      {
        "func": "SET",
        "collection": [
          "roundSlider"
        ],
        "property": "y",
        "value": 0
      }
    ],
    "depth": 15,
    "text": "Add Card Points",
    "width": 120,
    "css": {
      "font-size": "15px"
    },
    "variablePartnerRoutine": [
      {
        "func": "FOREACH",
        "range": [
          4
        ],
        "loopRoutine": [
          "//If variable partnerships exist, group them together and add up each team's points.",
          {
            "func": "SELECT",
            "property": "id",
            "relation": "in",
            "value": [
              "teamGroup1",
              "teamGroup2",
              "teamGroup3",
              "teamGroup4",
              "teamGroup5",
              "teamGroup6",
              "teamGroup7",
              "teamGroup8"
            ]
          },
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "teamID",
            "value": "${value}"
          },
          {
            "func": "GET",
            "property": "parent",
            "aggregation": "array",
            "variable": "thisTeam"
          },
          "var teamTotal = 0",
          {
            "func": "FOREACH",
            "in": "${thisTeam}",
            "loopRoutine": [
              "var thisTotal = ${PROPERTY tempScore OF $value}",
              "var thisTotal = ${thisTotal.0}",
              "var teamTotal = ${teamTotal} + ${thisTotal}",
              "//If there are no exceptions, then result needs to be pre-filled with the value of teamTotal.",
              "var result = ${teamTotal}",
              {
                "func": "IF",
                "condition": "${PROPERTY variablePartnerExceptionsRoutine OF $gameID}",
                "thenRoutine": [
                  {
                    "func": "CALL",
                    "widget": "${gameID}",
                    "routine": "variablePartnerExceptionsRoutine"
                  }
                ]
              }
            ]
          },
          {
            "func": "FOREACH",
            "in": "${thisTeam}",
            "loopRoutine": [
              {
                "func": "SCORE",
                "mode": "set",
                "property": "tempScore",
                "round": 1,
                "seats": "${value}",
                "value": "${result}"
              }
            ]
          }
        ]
      }
    ],
    "activeGameChangeRoutine": [],
    "scale": 0
  },
  "settingsDecks": {
    "type": "button",
    "id": "settingsDecks",
    "x": 1500,
    "y": 875,
    "width": 90,
    "height": 50,
    "movableInEdit": false,
    "css": "font-size: 18px; line-height:1.05",
    "text": "Decks & Players",
    "jokerCount": 0,
    "seatCount": 4,
    "showDelete": false,
    "teamScore": false,
    "clickRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Choose settings ..."
          },
          {
            "type": "subtitle",
            "text": "Players"
          },
          {
            "label": "Number of players:",
            "type": "number",
            "min": 2,
            "max": 8,
            "variable": "seatCount",
            "value": "${PROPERTY seatCount}"
          },
          {
            "type": "select",
            "label": "Dummy hand (in bottom middle seat):",
            "value": "${PROPERTY dummyHand}",
            "variable": "dummyHand",
            "options": [
              {
                "text": "None",
                "value": "0"
              },
              {
                "text": "Face Up",
                "value": 1
              },
              {
                "text": "Face Down",
                "value": 2
              }
            ]
          },
          {
            "type": "subtitle",
            "text": "Cards and Decks"
          },
          {
            "type": "select",
            "label": "Type of deck:",
            "value": "${PROPERTY deckType}",
            "variable": "deckType",
            "options": [
              {
                "text": "52 Standard (1-13, Clubs, Diamonds, Hearts, Spades)",
                "value": "0",
                "select": true
              },
              {
                "text": "Two 52 Standard Decks",
                "value": 1
              },
              {
                "text": "Taroky (1-4 Red, 7-10 Black, 22 Tarot)",
                "value": 2
              },
              {
                "text": "Tarot (52 Standard, 22 Tarot)",
                "value": 7
              },
              {
                "text": "Crow (1-14, 5 Colors, 1 Crow)",
                "value": 3
              },
              {
                "text": "Spanish (1-12, Clubs, Coins, Cups, Swords)",
                "value": 4
              },
              {
                "text": "German (5-A, Acorns, Bells, Leaves, Hearts)",
                "value": 5
              },
              {
                "text": "Swiss (6-A, Acorns, Bells, Roses, Shields)",
                "value": 6
              }
            ]
          },
          {
            "label": "Number of jokers:",
            "type": "number",
            "min": 0,
            "max": 4,
            "variable": "jokerCount",
            "value": "${PROPERTY jokerCount}"
          },
          {
            "label": "Deal this many cards to start:",
            "type": "number",
            "min": 0,
            "variable": "cardCount",
            "value": "${PROPERTY cardCount}"
          },
          {
            "type": "select",
            "label": "Remove selected cards:",
            "value": "${PROPERTY hideCards}",
            "variable": "hideCards",
            "options": [
              {
                "text": "None",
                "value": "0"
              },
              {
                "text": "2",
                "value": 1
              },
              {
                "text": "2,3",
                "value": 2
              },
              {
                "text": "2,3,4",
                "value": 3
              },
              {
                "text": "2,3,4,5",
                "value": 4
              },
              {
                "text": "2,3,4,6",
                "value": 5
              },
              {
                "text": "2,3,4,5,6",
                "value": 6
              },
              {
                "text": "2,3,4,5,6,7",
                "value": 7
              },
              {
                "text": "2,3,4,5,6,7,8",
                "value": 8
              },
              {
                "text": "8,9,10",
                "value": 9
              },
              {
                "text": "8,9",
                "value": 10
              }
            ]
          },
          {
            "type": "checkbox",
            "label": "Show clone/delete buttons to handle specific cards (check to show)?",
            "variable": "showDelete",
            "value": "${PROPERTY showDelete}"
          },
          {
            "type": "subtitle",
            "text": "Scoring"
          },
          {
            "type": "checkbox",
            "label": "4 player team scoring (check to enable)?",
            "variable": "teamScore",
            "value": "${PROPERTY teamScore}"
          },
          {
            "type": "checkbox",
            "label": "Variable partnership scoring (check to enable)?",
            "variable": "variableScore",
            "value": "${PROPERTY variableScore}"
          },
          {
            "type": "checkbox",
            "label": "Enter score in temporary scoreboard (check to enable)?",
            "variable": "tempScore",
            "value": "${PROPERTY tempScore}"
          }
        ],
        "confirmButtonText": "Confirm",
        "cancelButtonText": "Cancel"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "seatCount",
        "value": "${seatCount}"
      },
      "var deckType = parseFloat ${deckType}",
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "deckType",
        "value": "${deckType}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "dummyHand",
        "value": "${dummyHand}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "teamScore",
        "value": "${teamScore}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "cardCount",
        "value": "${cardCount}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "hideCards",
        "value": "${hideCards}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "showDelete",
        "value": "${showDelete}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "deckCount",
        "value": "${deckCount}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "jokerCount",
        "value": "${jokerCount}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "tempScore",
        "value": "${tempScore}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "variableScore",
        "value": "${variableScore}"
      },
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "playerAidRoutine"
      },
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "messageButtonRoutine"
      }
    ],
    "jokerCountChangeRoutine": [
      {
        "func": "CALL",
        "widget": "deckOptions",
        "routine": "jokersSetupRoutine"
      }
    ],
    "seatCountChangeRoutine": [
      {
        "func": "SELECT",
        "type": "seat",
        "property": "id",
        "relation": "!=",
        "value": null
      },
      {
        "func": "SET",
        "property": "player",
        "value": ""
      },
      {
        "func": "SET",
        "property": "color",
        "value": "#999999"
      },
      {
        "func": "SET",
        "property": "scale",
        "value": 0
      },
      {
        "func": "SET",
        "collection": [
          "holder1",
          "holder2",
          "holder3",
          "holder4",
          "holder5",
          "holder6",
          "holder7",
          "holder8",
          "backHolder1",
          "backHolder2",
          "backHolder3",
          "backHolder4",
          "backHolder5",
          "backHolder6",
          "backHolder7",
          "backHolder8",
          "capturedHolder1",
          "capturedHolder2",
          "capturedHolder3",
          "capturedHolder4",
          "capturedHolder5",
          "capturedHolder6",
          "capturedHolder7",
          "capturedHolder8"
        ],
        "property": "dropLimit",
        "value": 0
      },
      "var faceCount = 'faces' + ${PROPERTY seatCount}",
      {
        "func": "SET",
        "collection": [
          "teamGroup1"
        ],
        "property": "faces",
        "value": "${PROPERTY $faceCount OF teamGroup1}"
      },
      {
        "func": "SET",
        "collection": [
          "teamGroup1"
        ],
        "property": "activeFace",
        "value": 0
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY seatCount}",
        "operand2": 2,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "seat3",
              "seat7"
            ],
            "property": "scale",
            "value": 1
          },
          {
            "func": "SET",
            "collection": [
              "holder3",
              "holder7",
              "backHolder3",
              "backHolder7",
              "capturedHolder3",
              "capturedHolder7"
            ],
            "property": "dropLimit",
            "value": -1
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY seatCount}",
        "operand2": 3,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "seat1",
              "seat3",
              "seat7"
            ],
            "property": "scale",
            "value": 1
          },
          {
            "func": "SET",
            "collection": [
              "holder1",
              "holder3",
              "holder7",
              "backHolder1",
              "backHolder3",
              "backHolder7",
              "capturedHolder1",
              "capturedHolder3",
              "capturedHolder7"
            ],
            "property": "dropLimit",
            "value": -1
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY seatCount}",
        "operand2": 4,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "seat1",
              "seat3",
              "seat5",
              "seat7"
            ],
            "property": "scale",
            "value": 1
          },
          {
            "func": "SET",
            "collection": [
              "holder1",
              "holder3",
              "holder5",
              "holder7",
              "backHolder1",
              "backHolder3",
              "backHolder5",
              "backHolder7",
              "capturedHolder1",
              "capturedHolder3",
              "capturedHolder5",
              "capturedHolder7"
            ],
            "property": "dropLimit",
            "value": -1
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY seatCount}",
        "operand2": 5,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "seat1",
              "seat2",
              "seat3",
              "seat5",
              "seat7"
            ],
            "property": "scale",
            "value": 1
          },
          {
            "func": "SET",
            "collection": [
              "holder1",
              "holder2",
              "holder3",
              "holder5",
              "holder7",
              "backHolder1",
              "backHolder2",
              "backHolder3",
              "backHolder5",
              "backHolder7",
              "capturedHolder1",
              "capturedHolder2",
              "capturedHolder3",
              "capturedHolder5",
              "capturedHolder7"
            ],
            "property": "dropLimit",
            "value": -1
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY seatCount}",
        "operand2": 6,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "seat1",
              "seat2",
              "seat3",
              "seat5",
              "seat7",
              "seat8"
            ],
            "property": "scale",
            "value": 1
          },
          {
            "func": "SET",
            "collection": [
              "holder1",
              "holder2",
              "holder3",
              "holder5",
              "holder7",
              "holder8",
              "backHolder1",
              "backHolder2",
              "backHolder3",
              "backHolder5",
              "backHolder7",
              "backHolder8",
              "capturedHolder1",
              "capturedHolder2",
              "capturedHolder3",
              "capturedHolder5",
              "capturedHolder7",
              "capturedHolder8"
            ],
            "property": "dropLimit",
            "value": -1
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY seatCount}",
        "operand2": 7,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "seat1",
              "seat2",
              "seat3",
              "seat4",
              "seat5",
              "seat7",
              "seat8"
            ],
            "property": "scale",
            "value": 1
          },
          {
            "func": "SET",
            "collection": [
              "holder1",
              "holder2",
              "holder3",
              "holder4",
              "holder5",
              "holder7",
              "holder8",
              "backHolder1",
              "backHolder2",
              "backHolder3",
              "backHolder4",
              "backHolder5",
              "backHolder7",
              "backHolder8",
              "capturedHolder1",
              "capturedHolder2",
              "capturedHolder3",
              "capturedHolder4",
              "capturedHolder5",
              "capturedHolder7",
              "capturedHolder8"
            ],
            "property": "dropLimit",
            "value": -1
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY seatCount}",
        "operand2": 8,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "seat1",
              "seat2",
              "seat3",
              "seat4",
              "seat5",
              "seat6",
              "seat7",
              "seat8"
            ],
            "property": "scale",
            "value": 1
          },
          {
            "func": "SET",
            "collection": [
              "holder1",
              "holder2",
              "holder3",
              "holder4",
              "holder5",
              "holder6",
              "holder7",
              "holder8",
              "backHolder1",
              "backHolder2",
              "backHolder3",
              "backHolder4",
              "backHolder5",
              "backHolder6",
              "backHolder7",
              "backHolder8",
              "capturedHolder1",
              "capturedHolder2",
              "capturedHolder3",
              "capturedHolder4",
              "capturedHolder5",
              "capturedHolder6",
              "capturedHolder7",
              "capturedHolder8"
            ],
            "property": "dropLimit",
            "value": -1
          }
        ]
      },
      {
        "func": "CALL",
        "routine": "4PlayerPositionRoutine"
      },
      {
        "func": "CALL",
        "widget": "settings",
        "routine": "centerShowChangeRoutine"
      },
      {
        "func": "CALL",
        "widget": "settings",
        "routine": "capturedHolderChangeRoutine"
      },
      {
        "func": "CALL",
        "widget": "scoreboard3",
        "routine": "scaleChangeRoutine"
      },
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "CALL",
        "widget": "${gameID}",
        "routine": "cardsExceptionsRoutine"
      }
    ],
    "showDeleteChangeRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY showDelete}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "deleteButton"
            ],
            "property": "scale",
            "value": 1
          },
          {
            "func": "SET",
            "collection": [
              "cloneButton"
            ],
            "property": "scale",
            "value": 1
          },
          {
            "func": "SET",
            "collection": [
              "settings"
            ],
            "property": "showDiscard",
            "value": true
          },
          {
            "func": "SET",
            "collection": [
              "settings"
            ],
            "property": "showDiscard",
            "value": true
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "deleteButton"
            ],
            "property": "scale",
            "value": 0
          },
          {
            "func": "SET",
            "collection": [
              "cloneButton"
            ],
            "property": "scale",
            "value": 0
          }
        ]
      }
    ],
    "teamScoreChangeRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY teamScore}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "scoreboard",
              "tempScoreboard",
              "scoreboard3"
            ],
            "property": "seats",
            "value": {
              "N - S": [
                "seat1",
                "seat5"
              ],
              "E - W": [
                "seat3",
                "seat7"
              ]
            }
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "scoreboard",
              "tempScoreboard",
              "scoreboard3"
            ],
            "property": "seats",
            "value": [
              "seat1",
              "seat2",
              "seat3",
              "seat4",
              "seat5",
              "seat6",
              "seat7",
              "seat8"
            ]
          }
        ]
      }
    ],
    "hideCards": 0,
    "4PlayerPositionRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY centerShow OF settings}",
        "elseRoutine": [
          {
            "func": "IF",
            "operand1": "${PROPERTY seatCount}",
            "relation": "<=",
            "operand2": 4,
            "thenRoutine": [
              {
                "func": "SET",
                "collection": [
                  "seat1"
                ],
                "property": "y",
                "value": 600
              },
              {
                "func": "SET",
                "collection": [
                  "seat3"
                ],
                "property": "x",
                "value": 440
              },
              {
                "func": "SET",
                "collection": [
                  "seat5"
                ],
                "property": "y",
                "value": 125
              },
              {
                "func": "SET",
                "collection": [
                  "seat7"
                ],
                "property": "x",
                "value": 1005
              }
            ],
            "elseRoutine": [
              {
                "func": "SET",
                "collection": [
                  "seat1"
                ],
                "property": "y",
                "value": 680
              },
              {
                "func": "SET",
                "collection": [
                  "seat3"
                ],
                "property": "x",
                "value": 348
              },
              {
                "func": "SET",
                "collection": [
                  "seat5"
                ],
                "property": "y",
                "value": 55
              },
              {
                "func": "SET",
                "collection": [
                  "seat7"
                ],
                "property": "x",
                "value": 1090
              }
            ]
          }
        ],
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "seat1"
            ],
            "property": "y",
            "value": 680
          },
          {
            "func": "SET",
            "collection": [
              "seat3"
            ],
            "property": "x",
            "value": 348
          },
          {
            "func": "SET",
            "collection": [
              "seat5"
            ],
            "property": "y",
            "value": 55
          },
          {
            "func": "SET",
            "collection": [
              "seat7"
            ],
            "property": "x",
            "value": 1090
          }
        ]
      }
    ],
    "tempScore": false,
    "tempScoreChangeRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY tempScore}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "scoreButton"
            ],
            "property": "activeBoard",
            "value": "tempScoreboard"
          },
          {
            "func": "SET",
            "collection": [
              "scoreButton"
            ],
            "property": "activeProperty",
            "value": "tempScore"
          },
          {
            "func": "SET",
            "collection": [
              "tempScoreboard"
            ],
            "property": "scale",
            "value": 1
          },
          {
            "func": "SET",
            "collection": [
              "scoreButton"
            ],
            "property": "scale",
            "value": 1
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY preSet OF preSetsButton}",
            "operand2": 6,
            "thenRoutine": [
              {
                "func": "SET",
                "collection": [
                  "scoreboard"
                ],
                "property": "height",
                "value": 420
              }
            ],
            "elseRoutine": [
              {
                "func": "SET",
                "collection": [
                  "scoreboard"
                ],
                "property": "height",
                "value": 560
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "scoreButton"
            ],
            "property": "activeBoard",
            "value": "scoreboard"
          },
          {
            "func": "SET",
            "collection": [
              "scoreButton"
            ],
            "property": "activeProperty",
            "value": "score"
          },
          {
            "func": "SET",
            "collection": [
              "tempScoreboard"
            ],
            "property": "scale",
            "value": 0
          },
          {
            "func": "SET",
            "collection": [
              "scoreButton"
            ],
            "property": "scale",
            "value": 0
          },
          {
            "func": "SET",
            "collection": [
              "scoreboard"
            ],
            "property": "height",
            "value": 840
          }
        ]
      }
    ],
    "layer": -4,
    "deckType": 0,
    "variableScore": false,
    "variableScoreChangeRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY variableScore}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "teamGroup1",
              "teamGroup2",
              "teamGroup3",
              "teamGroup4",
              "teamGroup5",
              "teamGroup6",
              "teamGroup7",
              "teamGroup8"
            ],
            "property": "scale",
            "value": 1
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "teamGroup1",
              "teamGroup2",
              "teamGroup3",
              "teamGroup4",
              "teamGroup5",
              "teamGroup6",
              "teamGroup7",
              "teamGroup8"
            ],
            "property": "scale",
            "value": 0
          }
        ]
      }
    ],
    "cardCount": 13,
    "hideCardsChangeRoutine": [
      {
        "func": "CALL",
        "widget": "deckOptions",
        "routine": "decksSetupRoutine"
      }
    ],
    "deckTypeChangeRoutine": [
      {
        "func": "CALL",
        "widget": "deckOptions",
        "routine": "decksSetupRoutine"
      },
      {
        "func": "CALL",
        "widget": "deckSuitsSettings",
        "routine": "deckSuitsRoutine"
      }
    ],
    "dummyHandChangeRoutine": [
      {
        "func": "IF",
        "operand1": "${PROPERTY dummyHand}",
        "operand2": 0,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "dummyHand"
            ],
            "property": "scale",
            "value": 0
          },
          {
            "func": "SET",
            "collection": [
              "takeDummyButton"
            ],
            "property": "scale",
            "value": 0
          },
          {
            "func": "SET",
            "collection": [
              "dummyHand"
            ],
            "property": "dropLimit",
            "value": 0
          },
          {
            "func": "SET",
            "collection": [
              "seat1"
            ],
            "property": "player",
            "value": ""
          },
          {
            "func": "SET",
            "collection": [
              "seat1"
            ],
            "property": "color",
            "value": null
          }
        ],
        "elseRoutine": [
          "var onEnter = ${PROPERTY onEnter OF dummyHand}",
          {
            "func": "SET",
            "collection": [
              "dummyHand"
            ],
            "property": "scale",
            "value": 0.3
          },
          {
            "func": "SET",
            "collection": [
              "takeDummyButton"
            ],
            "property": "scale",
            "value": 1
          },
          {
            "func": "SET",
            "collection": [
              "dummyHand"
            ],
            "property": "dropLimit",
            "value": null
          },
          {
            "func": "SET",
            "collection": [
              "seat1"
            ],
            "property": "player",
            "value": "*Dummy*"
          },
          {
            "func": "SET",
            "collection": [
              "seat1"
            ],
            "property": "color",
            "value": "#000000"
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY dummyHand}",
            "operand2": 1,
            "thenRoutine": [
              "var onEnter.activeFace = 1",
              {
                "func": "SET",
                "collection": [
                  "dummyHand"
                ],
                "property": "onEnter",
                "value": "${onEnter}"
              }
            ],
            "elseRoutine": [
              "var onEnter.activeFace = 0",
              {
                "func": "SET",
                "collection": [
                  "dummyHand"
                ],
                "property": "onEnter",
                "value": "${onEnter}"
              }
            ]
          }
        ]
      }
    ],
    "dummyHand": 0,
    "j": "o",
    "showtempScore": true,
    "showTempScore": true
  },
  "deckOptions": {
    "id": "deckOptions",
    "x": 1632,
    "y": 281,
    "css": {
      "background": "white",
      "border": "1px solid black"
    },
    "text": "deckOptions",
    "decksArray": [
      [
        "deck1"
      ],
      [
        "deck1",
        "deck2"
      ],
      [
        "tarokyDeck"
      ],
      [
        "crowDeck"
      ],
      [
        "spanishDeck"
      ],
      [
        "germanDeck"
      ],
      [
        "swissDeck"
      ],
      [
        "tarotDeck"
      ]
    ],
    "hideCardsArray": [
      [],
      [
        2
      ],
      [
        2,
        3
      ],
      [
        2,
        3,
        4
      ],
      [
        2,
        3,
        4,
        5
      ],
      [
        2,
        3,
        4,
        6
      ],
      [
        2,
        3,
        4,
        5,
        6
      ],
      [
        2,
        3,
        4,
        5,
        6,
        7
      ],
      [
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      [
        8,
        9,
        10
      ],
      [
        8,
        9
      ]
    ],
    "cardsSetupRoutine": [
      "// Removes individual cards from play (or adds them in case of jokers)",
      "var decksIndex = ${PROPERTY deckType OF settingsDecks}",
      "var decksArray = ${PROPERTY decksArray}",
      "var decksArray = ${decksArray.$decksIndex}",
      "var hideCardsIndex = ${PROPERTY hideCards OF settingsDecks}",
      "var hideCardsArray = ${PROPERTY hideCardsArray}",
      "var hideCardsArray = ${hideCardsArray.$hideCardsIndex}",
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      "var cardsByType = ${PROPERTY hideCardsByType OF $gameID}",
      {
        "func": "SELECT",
        "type": "card",
        "property": "deck",
        "relation": "in",
        "value": "${decksArray}"
      },
      {
        "func": "SELECT",
        "mode": "remove",
        "property": "order",
        "relation": "in",
        "value": "${hideCardsArray}"
      },
      {
        "func": "FOREACH",
        "in": "${cardsByType}",
        "loopRoutine": [
          {
            "func": "SELECT",
            "mode": "remove",
            "property": "cardType",
            "value": "${value}"
          }
        ]
      },
      {
        "func": "SET",
        "property": "parent",
        "value": "tempHolder"
      },
      {
        "func": "MOVE",
        "from": "tempHolder",
        "to": "deckHolder",
        "count": 0
      },
      {
        "func": "CALL",
        "routine": "jokersSetupRoutine"
      },
      {
        "func": "FLIP",
        "holder": "deckHolder",
        "face": 0
      },
      {
        "func": "SHUFFLE",
        "holder": "deckHolder"
      }
    ],
    "decksSetupRoutine": [
      {
        "func": "CLICK",
        "collection": [
          "offHolderRecallButton"
        ]
      },
      "// Finish the rest of the card and deck setup",
      {
        "func": "CALL",
        "routine": "cardsSetupRoutine"
      },
      {
        "func": "CALL",
        "routine": "deckSuitsRoutine"
      }
    ],
    "jokersSetupRoutine": [
      {
        "func": "IF",
        "operand1": "${PROPERTY jokerCount OF settingsDecks}",
        "operand2": 0,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "jokerRed1",
              "jokerRed2",
              "jokerBlack1",
              "jokerBlack2"
            ],
            "property": "parent",
            "value": "offHolder"
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY jokerCount OF settingsDecks}",
        "operand2": 1,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "jokerBlack1"
            ],
            "property": "parent",
            "value": "tempHolder"
          },
          {
            "func": "SET",
            "collection": [
              "jokerBlack2",
              "jokerRed1",
              "jokerRed2"
            ],
            "property": "parent",
            "value": "offHolder"
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY jokerCount OF settingsDecks}",
        "operand2": 2,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "jokerRed1",
              "jokerBlack1"
            ],
            "property": "parent",
            "value": "tempHolder"
          },
          {
            "func": "SET",
            "collection": [
              "jokerRed2",
              "jokerBlack2"
            ],
            "property": "parent",
            "value": "offHolder"
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY jokerCount OF settingsDecks}",
        "operand2": 3,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "jokerBlack1",
              "jokerRed1",
              "jokerBlack2"
            ],
            "property": "parent",
            "value": "tempHolder"
          },
          {
            "func": "SET",
            "collection": [
              "jokerRed2"
            ],
            "property": "parent",
            "value": "offHolder"
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY jokerCount OF settingsDecks}",
        "operand2": 4,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "jokerRed1",
              "jokerRed2",
              "jokerBlack1",
              "jokerBlack2"
            ],
            "property": "parent",
            "value": "tempHolder"
          }
        ]
      },
      {
        "func": "MOVE",
        "from": "tempHolder",
        "to": "deckHolder",
        "count": 0
      }
    ],
    "deckSuitsRoutine": [
      "var deckType = ${PROPERTY deckType OF settingsDecks}",
      {
        "func": "SELECT",
        "type": "deck",
        "property": "deckType",
        "value": "${deckType}"
      },
      {
        "func": "GET",
        "property": "id",
        "variable": "thisDeck"
      },
      {
        "func": "FOREACH",
        "in": [
          null,
          10,
          11,
          12,
          13,
          14,
          15
        ],
        "loopRoutine": [
          "// This sets the correct suit images on the bid system widgets.",
          {
            "func": "IF",
            "operand1": "${key}",
            "relation": ">",
            "operand2": 0,
            "thenRoutine": [
              "var thisImage = ${PROPERTY deckSuitsImage OF $thisDeck}",
              "var thisImage = ${thisImage.$key}",
              "var thisText = ${PROPERTY deckSuitsText OF $thisDeck}",
              "var thisText = ${thisText.$key}",
              "var thisColor = ${PROPERTY deckSuitsColor OF $thisDeck}",
              "var thisColor = ${thisColor.$key}",
              "var thisUni = ${PROPERTY deckSuitsUni OF $thisDeck}",
              "var thisUni = ${thisUni.$key}",
              "var thisSuits = ${PROPERTY deckSuits OF $thisDeck}",
              "var thisSuits = ${thisSuits.$key}",
              {
                "func": "SET",
                "collection": [
                  "choose${value}"
                ],
                "property": "image",
                "value": "${thisImage}"
              },
              {
                "func": "SET",
                "collection": [
                  "choose${value}"
                ],
                "property": "text",
                "value": "${thisText}"
              },
              {
                "func": "SET",
                "collection": [
                  "choose${value}"
                ],
                "property": "deckSuitsColor",
                "value": "${thisColor}"
              },
              {
                "func": "SET",
                "collection": [
                  "choose${value}"
                ],
                "property": "deckSuitsUni",
                "value": "${thisUni}"
              },
              {
                "func": "SET",
                "collection": [
                  "choose${value}"
                ],
                "property": "deckSuits",
                "value": "${thisSuits}"
              }
            ]
          }
        ]
      },
      {
        "func": "SET",
        "collection": [
          "suitDice"
        ],
        "property": "faces",
        "value": "${PROPERTY deckDiceFaces OF $thisDeck}"
      }
    ]
  },
  "resetScoresButton": {
    "type": "button",
    "id": "resetScoresButton",
    "x": 1500,
    "y": 70,
    "movableInEdit": false,
    "text": "Reset Scores",
    "clickRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Resetting scores ..."
          },
          {
            "type": "subtitle",
            "text": "This will reset all the scores. Be patient. This button also does many other things behind the scenes and can take a long time. Are you sure?"
          }
        ],
        "confirmButtonText": "Yes",
        "cancelButtonText": "No"
      },
      {
        "func": "CALL",
        "routine": "resetScoresRoutine"
      },
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "IF",
        "condition": "${PROPERTY resetRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "${gameID}",
            "routine": "resetRoutine"
          }
        ]
      },
      {
        "func": "SELECT",
        "property": "resetProperties",
        "relation": "!=",
        "value": null
      },
      {
        "func": "FOREACH",
        "loopRoutine": [
          {
            "func": "FOREACH",
            "in": "${PROPERTY resetProperties OF $widgetID}",
            "loopRoutine": [
              {
                "func": "SET",
                "property": "${key}",
                "value": "${value}"
              }
            ]
          }
        ]
      },
      {
        "func": "CLICK",
        "collection": [
          "offHolderRecallButton"
        ]
      },
      {
        "func": "CLICK",
        "collection": [
          "recallButton"
        ]
      },
      "// Used to minimize the changes diff in GitHub",
      {
        "func": "SELECT",
        "type": "pile",
        "property": "parent",
        "value": "deckHolder"
      },
      {
        "func": "SET",
        "property": "id",
        "value": "pile1"
      },
      {
        "func": "SELECT",
        "type": "pile",
        "property": "parent",
        "value": "offHolder"
      },
      {
        "func": "SET",
        "property": "id",
        "value": "pile2"
      },
      {
        "func": "SELECT",
        "property": "id",
        "relation": "!=",
        "value": null
      },
      {
        "func": "SET",
        "property": "z",
        "value": null
      }
    ],
    "width": 60,
    "height": 60,
    "css": {
      "_, .transition": {
        "transition": "transform 600ms"
      },
      "_, .transition.dragging": {
        "transition": "none"
      }
    },
    "resetScoresRoutine": [
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "resetScoresRoutine"
      },
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "resetTricksRoutine"
      },
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "resetBidsRoutine"
      },
      {
        "func": "SELECT",
        "type": "seat",
        "property": "turn",
        "value": true
      },
      {
        "func": "SET",
        "property": "turn",
        "value": false
      },
      {
        "func": "CLICK",
        "collection": [
          "itemsRecallAllButton"
        ]
      },
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "setTrumpsRoutine"
      }
    ],
    "gameStartRoutine": [
      {
        "func": "SHUFFLE",
        "holder": "deckHolder"
      }
    ]
  },
  "score+10": {
    "type": "button",
    "id": "score+10",
    "parent": "scoreboard",
    "fixedParent": true,
    "y": -39,
    "width": 55,
    "height": 28,
    "movableInEdit": false,
    "css": {
      "default": {
        "font-size": "18px",
        "color": "white",
        "background": "green",
        "border-color": "darkgreen"
      },
      ":hover": {
        "border-color": "green",
        "background": "lightgreen",
        "color": "black"
      }
    },
    "text": "+10",
    "clickRoutine": [
      {
        "func": "IF",
        "operand1": "${PROPERTY currentRound OF tempScoreboard}",
        "operand2": 0,
        "thenRoutine": [
          {
            "func": "SCORE",
            "seats": "${seatID}",
            "mode": "${PROPERTY thisSign}",
            "round": "${PROPERTY currentRound OF scoreboard}",
            "value": "${PROPERTY thisValue}"
          }
        ],
        "elseRoutine": [
          {
            "func": "SCORE",
            "seats": "${seatID}",
            "mode": "${PROPERTY thisSign}",
            "round": "${PROPERTY currentRound OF tempScoreboard}",
            "value": "${PROPERTY thisValue}",
            "property": "tempScore"
          }
        ]
      }
    ],
    "thisValue": 10,
    "thisSign": "inc",
    "x": 125
  },
  "score+15": {
    "inheritFrom": {
      "score-1": "*"
    },
    "type": "button",
    "id": "score+15",
    "text": "-10",
    "thisSign": "dec",
    "thisValue": 10,
    "y": -79,
    "x": 125
  },
  "score+5": {
    "type": "button",
    "id": "score+5",
    "x": 65,
    "inheritFrom": {
      "score+10": "*"
    },
    "text": "+ 5",
    "thisSign": "inc",
    "thisValue": 5
  },
  "score+1": {
    "type": "button",
    "id": "score+1",
    "x": 5,
    "inheritFrom": {
      "score+10": "*"
    },
    "text": "+ 1",
    "thisSign": "inc",
    "thisValue": 1
  },
  "score-1": {
    "type": "button",
    "id": "score-1",
    "x": 5,
    "css": {
      "default": {
        "font-size": "18px",
        "color": "white",
        "background": "red",
        "border-color": "crimson"
      },
      ":hover": {
        "border-color": "red",
        "background": "pink",
        "color": "black"
      }
    },
    "inheritFrom": {
      "score+10": "*"
    },
    "text": "- 1",
    "thisSign": "dec",
    "thisValue": 1,
    "y": -79
  },
  "score-5": {
    "type": "button",
    "id": "score-5",
    "x": 65,
    "inheritFrom": {
      "score-1": "*"
    },
    "text": "- 5",
    "thisSign": "dec",
    "thisValue": 5,
    "y": -79
  },
  "optionsLabel": {
    "id": "optionsLabel",
    "x": 1490,
    "y": 840,
    "text": "Options",
    "height": 155,
    "css": {
      "font-size": "25px",
      "border": "1px solid black",
      "text-align": "center",
      "background": "lightgrey"
    },
    "movable": false,
    "movableInEdit": false,
    "layer": -5,
    "width": 105,
    "borderRadius": 8
  },
  "turnButton": {
    "type": "button",
    "id": "turnButton",
    "x": 440,
    "width": 60,
    "height": 35,
    "text": "Turn",
    "clickRoutine": [
      {
        "func": "TURN",
        "turnCycle": "${PROPERTY direction}",
        "source": [
          "seat1",
          "seat2",
          "seat3",
          "seat4",
          "seat5",
          "seat6",
          "seat7",
          "seat8"
        ]
      },
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "IF",
        "condition": "${PROPERTY turnRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "${gameID}",
            "routine": "turnRoutine"
          }
        ]
      }
    ],
    "movableInEdit": false,
    "y": 965,
    "direction": "forward",
    "css": {
      "border-radius": "10px 4px 4px 10px"
    }
  },
  "discardLabel": {
    "id": "discardLabel",
    "parent": "discard",
    "fixedParent": true,
    "x": 20,
    "y": -22,
    "width": 70,
    "height": 20,
    "movable": false,
    "movableInEdit": false,
    "css": {
      "font-size": "20px"
    },
    "text": "Discard"
  },
  "takeButton": {
    "type": "button",
    "id": "takeButton",
    "x": 585,
    "y": 700,
    "width": 60,
    "height": 60,
    "movableInEdit": false,
    "text": "Take",
    "clickRoutine": [
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "MOVE",
        "from": "centerHolder",
        "to": "holder${seatIndex}",
        "count": 999,
        "face": 0
      },
      {
        "func": "FOREACH",
        "range": [
          8
        ],
        "loopRoutine": [
          {
            "func": "MOVE",
            "from": "holder${value}",
            "to": "backHolder${seatIndex}",
            "count": 999,
            "face": 0
          }
        ]
      },
      {
        "func": "SCORE",
        "mode": "inc",
        "value": 1,
        "property": "tricks",
        "seats": "${seatID}",
        "round": 1
      },
      {
        "func": "SELECT",
        "type": "seat",
        "property": "id",
        "relation": "!=",
        "value": null
      },
      {
        "func": "SET",
        "property": "turn",
        "value": false
      },
      {
        "func": "SET",
        "collection": [
          "seat${seatIndex}"
        ],
        "property": "turn",
        "value": true
      },
      {
        "func": "SET",
        "collection": [
          "tricksCount"
        ],
        "property": "text",
        "relation": "+",
        "value": 1
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "lastPressedBy",
        "value": "${seatIndex}"
      },
      "//Move specified cards to the mini holder and display them face up.",
      {
        "func": "IF",
        "condition": "${PROPERTY capturedArray OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "routine": "capturedHolderRoutine"
          }
        ]
      },
      "//Take any special actions for this particular game.",
      {
        "func": "IF",
        "condition": "${PROPERTY takeRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "${gameID}",
            "routine": "takeRoutine"
          }
        ]
      }
    ],
    "capturedHolderRoutine": [
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "relation": "in",
        "value": [
          "holder${seatIndex}",
          "backHolder${seatIndex}"
        ],
        "collection": "captured"
      },
      "var all = ${PROPERTY capturedArray OF $gameID}",
      "var all = ${all.0}",
      "var all = ${all.0}",
      {
        "func": "IF",
        "operand1": "${all}",
        "operand2": "all",
        "elseRoutine": [
          "//As long as capturedArray does not say 'all', then select designated cards.",
          "var theseCards = ${PROPERTY capturedArray OF $gameID}",
          "var theseSuits = ${theseCards}",
          "var theseCards = ${theseCards.1}",
          "var theseSuits = ${theseSuits.2}",
          {
            "func": "SELECT",
            "source": "captured",
            "property": "cardType",
            "relation": "in",
            "value": "${theseCards}"
          },
          {
            "func": "IF",
            "condition": "${theseSuits}",
            "thenRoutine": [
              "//And if any suits are listed (1=clubs, 2=diamonds, 3=spades, 4=hearts), grab those as well.",
              {
                "func": "SELECT",
                "source": "captured",
                "mode": "add",
                "property": "suit",
                "relation": "in",
                "value": "${theseSuits}"
              }
            ]
          }
        ]
      },
      {
        "func": "SET",
        "property": "parent",
        "value": "tempHolder"
      },
      "// This is just used in the pre-set Auctions",
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "value": "tempHolder"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "cardType",
        "value": "x2 auction"
      },
      {
        "func": "SET",
        "property": "parent",
        "value": "offHolder"
      },
      "// Finally, move all the cards from the tempHolder to the capturedHolder",
      {
        "func": "MOVE",
        "from": "tempHolder",
        "to": "capturedHolder${seatIndex}",
        "count": 0
      }
    ]
  },
  "background": {
    "id": "background",
    "width": 1600,
    "height": 1000,
    "layer": -6,
    "movable": false,
    "css": {
      "background": "${PROPERTY bgColor}"
    },
    "movableInEdit": false,
    "bgColor": "#deeaf0"
  },
  "backHolder1": {
    "type": "holder",
    "id": "backHolder1",
    "parent": "seat1",
    "fixedParent": true,
    "movableInEdit": false,
    "layer": -4,
    "classes": "transparent",
    "x": 35,
    "y": -195,
    "onEnter": {
      "activeFace": 0
    },
    "dropShadow": true,
    "css": {
      "font-weight": "normal"
    }
  },
  "backHolder2": {
    "inheritFrom": {
      "backHolder1": "*"
    },
    "type": "holder",
    "id": "backHolder2",
    "x": 185,
    "y": -60,
    "parent": "seat2",
    "dropLimit": 0
  },
  "backHolder3": {
    "inheritFrom": {
      "backHolder1": "*"
    },
    "type": "holder",
    "id": "backHolder3",
    "x": 185,
    "y": -60,
    "parent": "seat3"
  },
  "backHolder4": {
    "inheritFrom": {
      "backHolder1": "*"
    },
    "type": "holder",
    "id": "backHolder4",
    "x": 185,
    "y": -60,
    "parent": "seat4",
    "dropLimit": 0
  },
  "backHolder5": {
    "inheritFrom": {
      "backHolder1": "*"
    },
    "type": "holder",
    "id": "backHolder5",
    "x": 35,
    "y": 45,
    "parent": "seat5"
  },
  "backHolder6": {
    "inheritFrom": {
      "backHolder1": "*"
    },
    "type": "holder",
    "id": "backHolder6",
    "x": -120,
    "y": -60,
    "parent": "seat6",
    "dropLimit": 0
  },
  "backHolder7": {
    "inheritFrom": {
      "backHolder1": "*"
    },
    "type": "holder",
    "id": "backHolder7",
    "x": -120,
    "y": -60,
    "parent": "seat7"
  },
  "backHolder8": {
    "inheritFrom": {
      "backHolder1": "*"
    },
    "type": "holder",
    "id": "backHolder8",
    "x": -120,
    "y": -60,
    "parent": "seat8",
    "dropLimit": 0
  },
  "tempHolder": {
    "type": "holder",
    "id": "tempHolder",
    "x": 750,
    "y": 826,
    "layer": -5,
    "movableInEdit": false,
    "classes": "transparent",
    "dropLimit": 0
  },
  "tempScoreboard": {
    "type": "scoreboard",
    "id": "tempScoreboard",
    "x": 5,
    "css": {
      ".scoreboard tbody tr:nth-child(1) td": {
        "border-top": "1px solid black"
      },
      ".scoreboard": {
        "background": "#FFFAF0"
      },
      ".scoreboard .currentRound": {
        "background-color": "#a9c6e8"
      }
    },
    "scoreProperty": "tempScore",
    "currentRound": 0,
    "movable": false,
    "movableInEdit": false,
    "showAllRounds": true,
    "height": 280,
    "verticalHeader": true,
    "seats": [
      "seat1",
      "seat2",
      "seat3",
      "seat4",
      "seat5",
      "seat6",
      "seat7",
      "seat8"
    ],
    "roundLabel": "",
    "y": 650,
    "rounds": [
      "Card Points"
    ],
    "scale": 0
  },
  "seat1": {
    "type": "seat",
    "id": "seat1",
    "x": 720,
    "y": 600,
    "movableInEdit": false,
    "score": [],
    "tricks": 0,
    "clickRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY player}",
        "thenRoutine": [],
        "elseRoutine": [
          "var playerPrefix = substr ${playerName} 0 5",
          {
            "func": "IF",
            "operand1": "${playerPrefix}",
            "operand2": "Guest",
            "thenRoutine": [
              {
                "func": "INPUT",
                "header": "Enter player name and color",
                "fields": [
                  {
                    "type": "string",
                    "label": "Name",
                    "variable": "playerName",
                    "value": "${playerName}"
                  },
                  {
                    "type": "palette",
                    "label": "Color",
                    "colors": [
                      "#ffffff",
                      "#f44336",
                      "#f06292",
                      "#9c27b0",
                      "#3f51b5",
                      "#1976d2",
                      "#00bcd4",
                      "#009688",
                      "#4caf50",
                      "#8bc34a",
                      "#cddc39",
                      "#ffeb3b",
                      "#ffc107",
                      "#ff9800",
                      "#bf360c",
                      "#795548",
                      "#607d8b",
                      "#000000"
                    ],
                    "variable": "playerColor",
                    "value": "${playerColor}"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "func": "CLICK",
        "collection": "thisButton",
        "mode": "ignoreClickRoutine"
      },
      {
        "func": "CALL",
        "routine": "playerChangeRoutine"
      }
    ],
    "tempScore": [],
    "layer": -3,
    "turnChangeRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY turn}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "mainColor",
            "value": "${PROPERTY color}"
          },
          "var newText = colorContrast ${PROPERTY mainColor}",
          "var newGlow = colorContrast ${PROPERTY mainColor} 0.3",
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "textColor",
            "value": "${newText}"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "glowColor",
            "value": "${newGlow}"
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "mainColor",
            "value": "#ffffff"
          },
          "var newGlow = colorContrast ${PROPERTY color}",
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "textColor",
            "value": "#000000"
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "glowColor",
            "value": "${newGlow}"
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "operand2": "",
        "thenRoutine": []
      }
    ],
    "css": {
      "background": "${PROPERTY mainColor}",
      "color": "${PROPERTY textColor}",
      "--wcShadowTurn": "0px 0px 20px 5px ${PROPERTY glowColor}"
    },
    "setDefaultsRoutine": [
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "mainColor",
        "value": null
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "textColor",
        "value": null
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "glowColor",
        "value": null
      }
    ],
    "scoreCoiffeur": [
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " "
    ],
    "showing": false,
    "showingChangeRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY showing}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "showHolder${PROPERTY index}"
            ],
            "property": "scale",
            "value": 0.3
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "showHolder${PROPERTY index}"
            ],
            "property": "scale",
            "value": 0
          }
        ]
      }
    ],
    "hideWhenUnused": true,
    "playerChangeRoutine": [
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "IF",
        "operand1": "${PROPERTY player}",
        "operand2": "",
        "elseRoutine": [
          "var contrast = colorContrast ${playerColor} ",
          {
            "func": "SET",
            "collection": [
              "count${PROPERTY index}"
            ],
            "property": "backColor",
            "value": "${playerColor}"
          },
          {
            "func": "SET",
            "collection": [
              "count${PROPERTY index}"
            ],
            "property": "textColor",
            "value": "${contrast}"
          },
          {
            "func": "IF",
            "condition": "${PROPERTY playerSitRoutine OF $gameID}",
            "thenRoutine": [
              {
                "func": "CALL",
                "widget": "${gameID}",
                "routine": "playerSitRoutine"
              }
            ]
          }
        ],
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "count${PROPERTY index}"
            ],
            "property": "backColor",
            "value": "#e4e4e4"
          },
          {
            "func": "SET",
            "collection": [
              "count${PROPERTY index}"
            ],
            "property": "textColor",
            "value": "#6d6d6d"
          },
          {
            "func": "CALL",
            "routine": "setDefaultsRoutine"
          },
          {
            "func": "IF",
            "condition": "${PROPERTY playerSitRoutine OF $gameID}",
            "thenRoutine": [
              {
                "func": "CALL",
                "widget": "${gameID}",
                "routine": "playerStandRoutine"
              }
            ]
          }
        ]
      }
    ]
  },
  "preSetsButton": {
    "type": "button",
    "id": "preSetsButton",
    "x": 321,
    "y": 4,
    "width": 65,
    "height": 35,
    "css": "font-size: 20px; line-height:1.05",
    "clickRoutine": [
      "var inputArray = []",
      "var inputObject = {}",
      "var inputArray.0 = ${PROPERTY default0}",
      "var key = 1",
      {
        "func": "SELECT",
        "property": "gameID",
        "value": true,
        "collection": "gameList",
        "sortBy": {
          "key": "text",
          "reverse": false
        }
      },
      {
        "func": "SELECT",
        "source": "gameList",
        "mode": "remove",
        "property": "id",
        "value": "gameID0",
        "collection": "gameList"
      },
      {
        "func": "FOREACH",
        "collection": "gameList",
        "loopRoutine": [
          {
            "func": "GET",
            "collection": "DEFAULT",
            "property": "text"
          },
          {
            "func": "GET",
            "collection": "DEFAULT",
            "property": "id"
          },
          "var gameIDLength = length ${id}",
          "var gameID = slice ${id} 6 ${gameIDLength}",
          "var inputObject.text = ${text}",
          "var inputObject.value = ${gameID}",
          "var inputArray.$key = ${inputObject}",
          "var inputObject = {}",
          "var key = ${key} + 1"
        ]
      },
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Setting up game ..."
          },
          {
            "type": "subtitle",
            "text": "WARNING: Switching games may take several seconds. Be patient and do not click the button again."
          },
          {
            "type": "subtitle",
            "text": "Some games have pre-set defaults configured. Choose your game from the drop-down menu below. You can still edit specific details using the Option buttons."
          },
          {
            "type": "select",
            "label": "Choose game:",
            "value": "${PROPERTY preSet}",
            "variable": "preSet",
            "options": "${inputArray}"
          }
        ],
        "confirmButtonText": "Confirm",
        "cancelButtonText": "Cancel"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "preSet",
        "value": "${preSet}"
      },
      "// Check if preset has version options and if it does, set the first version.",
      "var preSet = 'gameID' + ${PROPERTY preSet}",
      {
        "func": "IF",
        "operand1": "${PROPERTY version1 OF $preSet}",
        "relation": "!=",
        "operand2": null,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "versionButton"
            ],
            "property": "scale",
            "value": 1
          },
          {
            "func": "SET",
            "collection": [
              "versionButton"
            ],
            "property": "versionNumber",
            "value": "0"
          },
          "var versionProp = ${PROPERTY version1 OF $preSet}",
          {
            "func": "FOREACH",
            "in": "${versionProp}",
            "loopRoutine": [
              {
                "func": "SET",
                "collection": [
                  "${preSet}"
                ],
                "property": "${key}",
                "value": "${value}"
              }
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "versionButton"
            ],
            "property": "scale",
            "value": 0
          }
        ]
      },
      {
        "func": "CALL",
        "routine": "setupRoutine"
      }
    ],
    "text": "Game:",
    "layer": -4,
    "preSetRoutine": [
      "//Loop through each default setting in settingsArray, settingsDeckArray, and displayArray and SET it",
      {
        "func": "FOREACH",
        "in": "${PROPERTY settingsArray OF gameID0}",
        "loopRoutine": [
          "var property = ${value.0}",
          "var status = ${value.1}",
          {
            "func": "SET",
            "collection": [
              "settings"
            ],
            "property": "${property}",
            "value": "${status}"
          }
        ]
      },
      {
        "func": "FOREACH",
        "in": "${PROPERTY settingsDecksArray OF gameID0}",
        "loopRoutine": [
          "var property = ${value.0}",
          "var status = ${value.1}",
          {
            "func": "SET",
            "collection": [
              "settingsDecks"
            ],
            "property": "${property}",
            "value": "${status}"
          }
        ]
      },
      {
        "func": "FOREACH",
        "in": "${PROPERTY displayArray OF gameID0}",
        "loopRoutine": [
          "var widget = ${value.0}",
          "var status = ${value.1}",
          {
            "func": "SET",
            "collection": [
              "${widget}"
            ],
            "property": "scale",
            "value": "${status}"
          }
        ]
      },
      "//Loop through each modified setting for the selected game and SET it.",
      {
        "func": "FOREACH",
        "in": "${PROPERTY settingsArray OF $gameID}",
        "loopRoutine": [
          "var property = ${value.0}",
          "var status = ${value.1}",
          {
            "func": "SET",
            "collection": [
              "settings"
            ],
            "property": "${property}",
            "value": "${status}"
          }
        ]
      },
      {
        "func": "FOREACH",
        "in": "${PROPERTY settingsDecksArray OF $gameID}",
        "loopRoutine": [
          "var property = ${value.0}",
          "var status = ${value.1}",
          {
            "func": "SET",
            "collection": [
              "settingsDecks"
            ],
            "property": "${property}",
            "value": "${status}"
          }
        ]
      },
      {
        "func": "FOREACH",
        "in": "${PROPERTY displayArray OF $gameID}",
        "loopRoutine": [
          "var widget = ${value.0}",
          "var status = ${value.1}",
          {
            "func": "SET",
            "collection": [
              "${widget}"
            ],
            "property": "scale",
            "value": "${status}"
          }
        ]
      },
      {
        "func": "CALL",
        "routine": "preSetExceptionsRoutine",
        "widget": "gameID0"
      },
      {
        "func": "IF",
        "condition": "${PROPERTY preSetExceptionsRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "${gameID}",
            "routine": "preSetExceptionsRoutine"
          }
        ]
      },
      {
        "func": "IF",
        "condition": "${PROPERTY cardsExceptionsRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "${gameID}",
            "routine": "cardsExceptionsRoutine"
          }
        ]
      },
      "//Set the appropriate round information on the temporary scoreboard",
      {
        "func": "SET",
        "collection": [
          "tempScoreboard"
        ],
        "property": "rounds",
        "value": "${PROPERTY roundsTemp OF $gameID}"
      },
      "var gameIDText = ${PROPERTY text OF $gameID}",
      "var hintText = ${PROPERTY hintText OF $gameID}",
      {
        "func": "SET",
        "collection": [
          "gameIDLabel"
        ],
        "property": "text",
        "value": "${gameIDText}"
      },
      {
        "func": "SET",
        "collection": [
          "gameIDLabel"
        ],
        "property": "hintText",
        "value": "${hintText}"
      }
    ],
    "movableInEdit": false,
    "setupRoutine": [
      "var gameID = 'gameID' + ${PROPERTY preSet}",
      {
        "func": "SELECT",
        "property": "clonedCard",
        "value": true
      },
      {
        "func": "DELETE"
      },
      {
        "func": "CALL",
        "routine": "preSetRoutine"
      },
      {
        "func": "SHUFFLE",
        "holder": "deckHolder"
      },
      {
        "func": "CALL",
        "widget": "resetScoresButton",
        "routine": "resetScoresRoutine"
      },
      {
        "func": "SELECT",
        "property": "playerAid",
        "value": true
      },
      {
        "func": "SET",
        "property": "onlyVisibleForSeat",
        "value": []
      },
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "playerAidRoutine"
      },
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "messageButtonRoutine"
      },
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "eraseRoutine"
      },
      {
        "func": "CALL",
        "widget": "deckOptions",
        "routine": "cardsSetupRoutine"
      },
      {
        "func": "CALL",
        "widget": "deckSuitsSettings",
        "routine": "deckSuitsRoutine"
      },
      {
        "func": "CALL",
        "widget": "deckOptions",
        "routine": "deckSuitsRoutine"
      },
      {
        "func": "IF",
        "condition": "${PROPERTY postSetExceptionsRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "${gameID}",
            "routine": "postSetExceptionsRoutine"
          }
        ]
      }
    ],
    "default0": {
      "text": "Default",
      "value": "0"
    },
    "preSet": "0"
  },
  "bids": {
    "id": "bids",
    "x": 1274,
    "y": 740,
    "width": 200,
    "height": 255,
    "borderRadius": 8,
    "layer": -4,
    "movable": false,
    "movableInEdit": false,
    "animatePropertyChange": [
      "text"
    ],
    "css": {
      "default": {
        "font-size": "19px",
        "border": "2px solid white",
        "padding-left": "5px",
        "padding-right": "5px",
        "text-align": "left",
        "color": "black",
        "background": "darkgrey",
        "overflow": "auto",
        "transition": "linear 1s"
      },
      ".animate_text": {
        "background": "red"
      }
    },
    "messageChangeRoutine": [
      {
        "func": "IF",
        "operand1": "${PROPERTY message}",
        "operand2": "Double",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "double",
            "value": 2
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY message}",
        "operand2": null,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "double",
            "value": 1
          }
        ]
      }
    ],
    "double": 1
  },
  "bidslabel": {
    "id": "bidslabel",
    "y": 1,
    "width": 200,
    "height": 20,
    "css": {
      "color": "blue",
      "font-size": "15px",
      "text-align": "center"
    },
    "text": "Activity Log",
    "x": 5,
    "parent": "bids",
    "fixedParent": true
  },
  "bidButton": {
    "type": "button",
    "id": "bidButton",
    "x": 120,
    "y": 130,
    "width": 70,
    "css": {
      "default": {
        "font-size": "30px",
        "background": "green",
        "border-color": "white"
      },
      ":hover": {
        "background": "darkgreen",
        "border-color": "black"
      }
    },
    "inheritFrom": {
      "choose1": "*"
    },
    "text": "Bid",
    "clickRoutine": [
      {
        "func": "SELECT",
        "property": "clonedBy",
        "value": "${playerName}"
      },
      {
        "func": "DELETE"
      },
      {
        "func": "GET",
        "collection": [
          "bidSuit${seatIndex}"
        ],
        "property": "deckSuitsUni",
        "variable": "suit"
      },
      "var text = ''",
      "var oldText = ${PROPERTY text OF bids}",
      {
        "func": "IF",
        "condition": "${PROPERTY showPublicBid OF settings}",
        "thenRoutine": [
          "var bidValue = 'bidValue' + ${seatIndex}",
          "var text = '\\u000a'",
          "var text = ${text} + ${PROPERTY text OF $bidValue}",
          "var text = ${text} + ${suit}",
          "var text = ${text} + ': '",
          "var text = ${text} + ${playerName}",
          "var text = ${text} + ${oldText}"
        ],
        "elseRoutine": [
          "var text = '\\u000a'",
          "var text = ${text} + ${playerName}",
          "var text = ${text} + ' bid'",
          "var text = ${text} + ${oldText}"
        ]
      },
      {
        "func": "SET",
        "collection": [
          "bids"
        ],
        "property": "text",
        "value": "${text}"
      },
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "IF",
        "condition": "${PROPERTY bidRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "${gameID}",
            "routine": "bidRoutine"
          }
        ]
      }
    ]
  },
  "bidWinnerLabel": {
    "id": "bidWinnerLabel",
    "parent": "scoreButton",
    "fixedParent": true,
    "width": 80,
    "height": 20,
    "movable": false,
    "movableInEdit": false,
    "css": {
      "color": "black"
    },
    "text": "Declarer",
    "x": -108,
    "y": -5
  },
  "bidWinner": {
    "id": "bidWinner",
    "parent": "scoreButton",
    "fixedParent": true,
    "x": -115,
    "width": 90,
    "height": 40,
    "borderRadius": 8,
    "movable": false,
    "movableInEdit": false,
    "css": {
      "background": "white",
      "border": "1px solid black",
      "color": "black",
      "font-size": "18px",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "clickRoutine": [
      {
        "func": "SELECT",
        "type": "seat",
        "property": "player",
        "relation": "!=",
        "value": ""
      },
      {
        "func": "COUNT"
      },
      {
        "func": "GET",
        "aggregation": "array",
        "property": "index",
        "variable": "seatIndex"
      },
      "var a = ${PROPERTY customStateproperty} + 1",
      "var b = ${a} % ${COUNT}",
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "customStateproperty",
        "value": "${b}"
      },
      "var name = ${seatIndex.$b}",
      {
        "func": "SELECT",
        "type": "seat",
        "property": "index",
        "value": "${name}"
      },
      {
        "func": "GET",
        "property": "player",
        "variable": "name"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "text",
        "value": "${name}"
      }
    ],
    "customStateproperty": 1,
    "first": false,
    "y": 15
  },
  "showPublicBidButton": {
    "type": "button",
    "id": "showPublicBidButton",
    "x": 5,
    "y": 48,
    "height": 30,
    "movableInEdit": false,
    "clickRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Show bid to other players ..."
          },
          {
            "type": "subtitle",
            "text": "This will show your bid to the other players. Are you sure?"
          }
        ],
        "confirmButtonText": "Yes",
        "cancelButtonText": "No"
      },
      {
        "func": "CALL",
        "routine": "showBidRoutine"
      }
    ],
    "text": "Show Bid",
    "css": {
      "font-size": "14px"
    },
    "fixedParent": true,
    "parent": "actionsBox",
    "width": 83,
    "showBidRoutine": [
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      "var gameCheck1 = ${gameID} == 'gameID26'",
      "var gameCheck2 = ${gameID} == 'gameID27'",
      "var gameCheck = ${gameCheck1} || ${gameCheck2}",
      {
        "func": "IF",
        "condition": "${gameCheck}",
        "thenRoutine": [
          {
            "func": "SELECT",
            "type": "pile",
            "property": "parent",
            "value": "holder${seatIndex}"
          },
          {
            "func": "SET",
            "property": "handleSize",
            "value": 0
          },
          {
            "func": "SELECT",
            "type": "card",
            "property": "_ancestor",
            "value": "holder${seatIndex}",
            "collection": "bidCards"
          },
          {
            "func": "SET",
            "collection": "bidCards",
            "property": "activeFace",
            "value": 1
          },
          {
            "func": "GET",
            "collection": "bidCards",
            "aggregation": "array",
            "property": "z",
            "variable": "bidZ"
          },
          "var bidZ = numericSort ${bidZ}",
          "var rotation = -15",
          "var newX = -15",
          {
            "func": "FOREACH",
            "in": "${bidZ}",
            "loopRoutine": [
              {
                "func": "SELECT",
                "source": "bidCards",
                "property": "z",
                "value": "${value}"
              },
              {
                "func": "SET",
                "property": "rotation",
                "value": "${rotation}"
              },
              {
                "func": "SET",
                "property": "x",
                "value": "${newX}"
              },
              "var rotation = ${rotation} + 15",
              "var newX = ${newX} + 15"
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "bidValue${seatIndex}",
              "bidSuit${seatIndex}"
            ],
            "property": "onlyVisibleForSeat",
            "value": null
          }
        ]
      },
      {
        "func": "CLICK",
        "collection": [
          "actionsButton"
        ]
      }
    ]
  },
  "count1": {
    "id": "count1",
    "parent": "seat1",
    "fixedParent": true,
    "x": -20,
    "y": -20,
    "width": 30,
    "height": 30,
    "borderRadius": 100,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "css": {
      "default": {
        "font-size": "18px",
        "display": "flex",
        "align-items": "center",
        "justify-content": "center",
        "color": "${PROPERTY textColor}",
        "background": "${PROPERTY backColor}",
        "border": "2px solid ${PROPERTY textColor}"
      }
    },
    "textColor": "#6d6d6d",
    "backColor": "#e4e4e4",
    "text": 0,
    "playerGlobalUpdateRoutine": [
      {
        "func": "CALL",
        "routine": "ownerGlobalUpdateRoutine"
      }
    ],
    "ownerGlobalUpdateRoutine": [
      "var parent = ${PROPERTY parent}",
      "var COUNT = 0",
      {
        "func": "COUNT",
        "holder": "${PROPERTY hand OF $parent}",
        "owner": "${PROPERTY player OF $parent}"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "text",
        "value": "${COUNT}"
      }
    ]
  },
  "count2": {
    "id": "count2",
    "parent": "seat2",
    "inheritFrom": {
      "count1": "*"
    },
    "text": 0,
    "backColor": "#e4e4e4",
    "textColor": "#6d6d6d"
  },
  "count3": {
    "id": "count3",
    "parent": "seat3",
    "inheritFrom": {
      "count1": "*"
    },
    "text": 0,
    "backColor": "#e4e4e4",
    "textColor": "#6d6d6d"
  },
  "count4": {
    "id": "count4",
    "parent": "seat4",
    "inheritFrom": {
      "count1": "*"
    },
    "text": 0,
    "backColor": "#e4e4e4",
    "textColor": "#6d6d6d"
  },
  "count5": {
    "id": "count5",
    "parent": "seat5",
    "inheritFrom": {
      "count1": "*"
    },
    "text": 0,
    "backColor": "#e4e4e4",
    "textColor": "#6d6d6d"
  },
  "count6": {
    "id": "count6",
    "parent": "seat6",
    "inheritFrom": {
      "count1": "*"
    },
    "text": 0,
    "backColor": "#e4e4e4",
    "textColor": "#6d6d6d"
  },
  "count7": {
    "id": "count7",
    "parent": "seat7",
    "inheritFrom": {
      "count1": "*"
    },
    "text": 0,
    "backColor": "#e4e4e4",
    "textColor": "#6d6d6d"
  },
  "count8": {
    "id": "count8",
    "parent": "seat8",
    "inheritFrom": {
      "count1": "*"
    },
    "text": 0,
    "backColor": "#e4e4e4",
    "textColor": "#6d6d6d"
  },
  "routines": {
    "id": "routines",
    "x": 1634,
    "y": 556,
    "text": "Routines",
    "css": {
      "border": "1px solid black",
      "background": "white"
    },
    "bidWinnerRoutine": [
      {
        "func": "CLICK",
        "collection": [
          "turnButton"
        ]
      },
      {
        "func": "IF",
        "condition": "${PROPERTY first OF bidWinner}",
        "elseRoutine": [
          {
            "func": "SELECT",
            "type": "seat",
            "property": "turn",
            "value": true
          },
          {
            "func": "SET",
            "property": "turn",
            "value": false
          },
          {
            "func": "SELECT",
            "property": "id",
            "value": "${seat}"
          },
          {
            "func": "SET",
            "property": "turn",
            "value": true
          },
          {
            "func": "CLICK",
            "collection": [
              "turnButton"
            ]
          },
          {
            "func": "GET",
            "property": "player"
          },
          {
            "func": "SELECT",
            "property": "id",
            "value": "bidWinner"
          },
          {
            "func": "SET",
            "property": "first",
            "value": true
          },
          {
            "func": "SET",
            "property": "text",
            "value": "${player}"
          },
          "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
          {
            "func": "IF",
            "condition": "${PROPERTY autoTeam OF $gameID}",
            "thenRoutine": [
              {
                "func": "CLICK",
                "collection": [
                  "teamGroup${seatIndex}"
                ]
              }
            ]
          }
        ]
      }
    ],
    "clickCardRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY first OF bidWinner}",
        "thenRoutine": [
          "var first = false"
        ],
        "elseRoutine": [
          "var first = true"
        ]
      },
      {
        "func": "GET",
        "property": "turn",
        "collection": [
          "seat${seatIndex}"
        ]
      },
      "var canPlay = ${first} || ${turn}",
      {
        "func": "IF",
        "condition": "${canPlay}",
        "thenRoutine": [
          {
            "func": "CALL",
            "routine": "playCardRoutine"
          }
        ],
        "elseRoutine": [
          {
            "func": "GET",
            "collection": [
              "${thisCard}"
            ],
            "property": "staged"
          },
          {
            "func": "IF",
            "condition": "${staged}",
            "thenRoutine": [
              {
                "func": "SET",
                "collection": [
                  "${thisCard}"
                ],
                "property": "staged",
                "value": false
              },
              {
                "func": "SET",
                "collection": [
                  "${thisCard}"
                ],
                "property": "y",
                "value": "${PROPERTY dropOffsetY OF hand}"
              }
            ],
            "elseRoutine": [
              {
                "func": "SELECT",
                "type": "card",
                "property": "owner",
                "value": "${playerName}"
              },
              {
                "func": "SET",
                "property": "staged",
                "value": false
              },
              {
                "func": "SET",
                "property": "y",
                "value": "${PROPERTY dropOffsetY OF hand}"
              },
              {
                "func": "SET",
                "collection": [
                  "${thisCard}"
                ],
                "property": "staged",
                "value": true
              }
            ]
          }
        ]
      }
    ],
    "stagedPlayRoutine": [
      {
        "func": "SELECT",
        "type": "seat",
        "property": "turn",
        "value": true
      },
      {
        "func": "GET",
        "property": "player"
      },
      {
        "func": "GET",
        "property": "index"
      },
      {
        "func": "SELECT",
        "type": "card",
        "property": "owner",
        "value": "${player}"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "staged",
        "value": true
      },
      {
        "func": "COUNT"
      },
      {
        "func": "IF",
        "operand1": "${COUNT}",
        "operand2": 1,
        "thenRoutine": [
          {
            "func": "GET",
            "property": "id",
            "variable": "thisCard"
          },
          {
            "func": "CALL",
            "routine": "playCardRoutine",
            "arguments": {
              "thisSeat": "${index}"
            }
          }
        ]
      }
    ],
    "playCardRoutine": [
      {
        "func": "IF",
        "condition": "${PROPERTY centerShow OF settings}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "centerHolder"
            ],
            "property": "lastCardBy",
            "value": "${playerName}"
          },
          {
            "func": "SET",
            "collection": [
              "${thisCard}"
            ],
            "property": "parent",
            "value": "tempHolder"
          },
          {
            "func": "MOVE",
            "from": "tempHolder",
            "to": "centerHolder"
          },
          {
            "func": "SORT",
            "holder": "hand",
            "key": "none"
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "${thisCard}"
            ],
            "property": "parent",
            "value": "tempHolder"
          },
          {
            "func": "MOVE",
            "from": "tempHolder",
            "to": "holder${thisSeat}"
          },
          {
            "func": "SORT",
            "holder": "hand",
            "key": "none"
          }
        ]
      },
      {
        "func": "SELECT",
        "type": "seat",
        "property": "showing",
        "value": true
      },
      {
        "func": "FOREACH",
        "collection": "DEFAULT",
        "loopRoutine": [
          {
            "func": "CALL",
            "widget": "showHandButton",
            "routine": "showHandRoutine",
            "arguments": {
              "thisSeatIndex": "${PROPERTY index OF $widgetID}",
              "thisPlayerName": "${PROPERTY player OF $widgetID}"
            }
          }
        ]
      }
    ],
    "checkRoundsRoutine": [
      "var roundLength = ${PROPERTY currentRound OF scoreboard} - 1",
      "var willIncrement = false",
      {
        "func": "FOREACH",
        "range": [
          8
        ],
        "loopRoutine": [
          "var seatID = 'seat' + ${value}",
          "var scoreLength = length ${PROPERTY score OF $seatID}",
          {
            "func": "IF",
            "condition": "${willIncrement}",
            "elseRoutine": [
              {
                "func": "IF",
                "operand1": "${scoreLength}",
                "relation": ">",
                "operand2": "${roundLength}",
                "thenRoutine": [
                  "var willIncrement = true"
                ]
              }
            ]
          }
        ]
      },
      "var result = ${willIncrement}"
    ],
    "setTrumpsRoutine": [
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "IF",
        "condition": "${PROPERTY trumps OF $gameID}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "trump"
            ],
            "property": "customFace",
            "value": "${PROPERTY trumps OF $gameID}"
          }
        ]
      }
    ],
    "dummyDealRoutine": [
      {
        "func": "IF",
        "operand1": "${PROPERTY dummyHand OF settingsDecks}",
        "relation": ">",
        "operand2": 0,
        "thenRoutine": [
          {
            "func": "SELECT",
            "type": "card",
            "property": "owner",
            "value": "*Dummy*"
          },
          {
            "func": "SET",
            "property": "parent",
            "value": "tempHolder"
          },
          {
            "func": "MOVE",
            "from": "tempHolder",
            "to": "dummyHand",
            "count": 0
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY dummyHand OF settingsDecks}",
            "operand2": 1,
            "thenRoutine": [],
            "elseRoutine": [
              {
                "func": "SHUFFLE",
                "holder": "dummyHand"
              }
            ]
          }
        ]
      }
    ],
    "playerAidRoutine": [
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "SELECT",
        "type": "seat",
        "property": "playerAidSeat",
        "value": true
      },
      {
        "func": "SET",
        "property": "scale",
        "value": 1
      },
      {
        "func": "COUNT"
      },
      {
        "func": "FOREACH",
        "range": [
          "${COUNT}"
        ],
        "loopRoutine": [
          "var thisPAD = 'playerAidDetail' + ${value}",
          {
            "func": "IF",
            "condition": "${PROPERTY $thisPAD OF $gameID}",
            "thenRoutine": [
              {
                "func": "SET",
                "collection": [
                  "${thisPAD}"
                ],
                "property": "player",
                "value": "${PROPERTY $thisPAD OF $gameID}"
              }
            ]
          }
        ]
      }
    ],
    "messageButtonRoutine": [
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "IF",
        "operand1": "${PROPERTY messageArray OF $gameID}",
        "relation": "!=",
        "operand2": null,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "messageButton"
            ],
            "property": "scale",
            "value": 1
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "messageButton"
            ],
            "property": "scale",
            "value": 0
          }
        ]
      }
    ],
    "autoSortRoutine": [
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "FOREACH",
        "range": [
          8
        ],
        "loopRoutine": [
          "var seatID = 'seat' + ${value}",
          {
            "func": "IF",
            "condition": "${PROPERTY sortDirection OF $seatID}",
            "thenRoutine": [
              {
                "func": "GET",
                "collection": [
                  "${seatID}"
                ],
                "property": "player"
              },
              {
                "func": "SELECT",
                "property": "parent",
                "value": "hand"
              },
              {
                "func": "SELECT",
                "source": "DEFAULT",
                "property": "owner",
                "value": "${player}"
              },
              {
                "func": "IF",
                "condition": "${PROPERTY sortPreExceptionsRoutine OF $gameID}",
                "thenRoutine": [
                  {
                    "func": "CALL",
                    "widget": [
                      "${gameID}"
                    ],
                    "routine": "sortPreExceptionsRoutine",
                    "arguments": {
                      "thisPlayerName": "${player}"
                    }
                  }
                ]
              },
              {
                "func": "CALL",
                "widget": "sortButton",
                "routine": "sortRoutine",
                "arguments": {
                  "seatID": "${seatID}"
                }
              },
              {
                "func": "IF",
                "condition": "${PROPERTY sortExceptionsRoutine OF $gameID}",
                "thenRoutine": [
                  {
                    "func": "CALL",
                    "widget": [
                      "${gameID}"
                    ],
                    "routine": "sortExceptionsRoutine",
                    "arguments": {
                      "thisPlayerName": "${player}",
                      "reverseSort": false
                    }
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "eraseRoutine": [
      {
        "func": "SET",
        "collection": [
          "seat1",
          "seat2",
          "seat3",
          "seat4",
          "seat5",
          "seat6",
          "seat7",
          "seat8"
        ],
        "property": "sortDirection",
        "value": null
      },
      {
        "func": "SET",
        "collection": [
          "itemsBox",
          "actionsBox"
        ],
        "property": "onlyVisibleForSeat",
        "value": []
      },
      {
        "func": "SELECT",
        "property": "playerAid",
        "value": true
      },
      {
        "func": "SET",
        "property": "onlyVisibleForSeat",
        "value": []
      }
    ],
    "resetScoresRoutine": [
      {
        "func": "SELECT",
        "type": "seat",
        "property": "id",
        "relation": "!=",
        "value": null
      },
      {
        "func": "SET",
        "property": "score",
        "value": []
      },
      {
        "func": "SET",
        "property": "tempScore",
        "value": []
      },
      {
        "func": "SET",
        "collection": [
          "scoreboard"
        ],
        "property": "currentRound",
        "value": 1
      },
      {
        "func": "SET",
        "collection": [
          "tempScoreboard"
        ],
        "property": "currentRound",
        "value": 0
      },
      {
        "func": "SET",
        "collection": [
          "roundSlider"
        ],
        "property": "y",
        "value": 0
      },
      "//This is necessary because of the Auctions pre-set",
      {
        "func": "FOREACH",
        "in": [
          "seat1",
          "seat2",
          "seat3",
          "seat4",
          "seat5",
          "seat6",
          "seat7",
          "seat8"
        ],
        "loopRoutine": [
          {
            "func": "SET",
            "collection": [
              "gameID35"
            ],
            "property": "${value}",
            "value": 1
          }
        ]
      },
      {
        "func": "SET",
        "collection": [
          "gameID35"
        ],
        "property": "misere",
        "value": []
      }
    ],
    "resetTricksRoutine": [
      {
        "func": "SELECT",
        "type": "seat",
        "property": "id",
        "relation": "!=",
        "value": null
      },
      {
        "func": "SET",
        "property": "tricks",
        "value": 0
      }
    ],
    "resetBidsRoutine": [
      {
        "func": "FOREACH",
        "range": [
          8
        ],
        "loopRoutine": [
          {
            "func": "SET",
            "collection": [
              "bidValue${value}",
              "bidSuit${value}"
            ],
            "property": "text",
            "value": ""
          },
          {
            "func": "SET",
            "collection": [
              "bidSuit${value}"
            ],
            "property": "image",
            "value": ""
          },
          {
            "func": "SET",
            "collection": [
              "bidSuit${value}"
            ],
            "property": "deckSuitsColor",
            "value": ""
          },
          {
            "func": "SET",
            "collection": [
              "bidSuit${value}"
            ],
            "property": "deckSuitsUni",
            "value": ""
          },
          {
            "func": "SET",
            "collection": [
              "bidSuit${value}"
            ],
            "property": "deckSuits",
            "value": ""
          },
          {
            "func": "SET",
            "collection": [
              "bidSuit${value}"
            ],
            "property": "chooser",
            "value": ""
          }
        ]
      },
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "customFace",
        "value": 0
      },
      {
        "func": "SET",
        "collection": [
          "bidWinner"
        ],
        "property": "text",
        "value": ""
      },
      {
        "func": "SELECT",
        "property": "clonedBy",
        "relation": "!=",
        "value": null
      },
      {
        "func": "DELETE"
      },
      {
        "func": "SET",
        "collection": [
          "teamGroup1",
          "teamGroup2",
          "teamGroup3",
          "teamGroup4",
          "teamGroup5",
          "teamGroup6",
          "teamGroup7",
          "teamGroup8"
        ],
        "property": "activeFace",
        "value": 0
      }
    ]
  },
  "tarokyDeck": {
    "type": "deck",
    "id": "tarokyDeck",
    "parent": "offHolder",
    "x": 4,
    "y": 4,
    "cardTypes": {
      "1": {
        "rank": "1",
        "roman": "I",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 1,
        "order": 5
      },
      "2": {
        "rank": "2",
        "roman": "II",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 2,
        "order": 1
      },
      "3": {
        "rank": "3",
        "roman": "III",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 3,
        "order": 1
      },
      "4": {
        "rank": "4",
        "roman": "IV",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 4,
        "order": 1
      },
      "5": {
        "rank": "5",
        "roman": "V",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 5,
        "order": 0.05
      },
      "6": {
        "rank": "6",
        "roman": "VI",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 6,
        "order": 1
      },
      "7": {
        "rank": "7",
        "roman": "VII",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 7,
        "order": 1
      },
      "8": {
        "rank": "8",
        "roman": "VIII",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 8,
        "order": 1
      },
      "9": {
        "rank": "9",
        "roman": "IX",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 9,
        "order": 1
      },
      "10": {
        "rank": "10",
        "roman": "X",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 10,
        "order": 1
      },
      "11": {
        "rank": "11",
        "roman": "XI",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 11,
        "order": 1
      },
      "12": {
        "rank": "12",
        "roman": "XII",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 12,
        "order": 1
      },
      "13": {
        "rank": "13",
        "roman": "XIII",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 13,
        "order": 1
      },
      "14": {
        "rank": "14",
        "roman": "XIV",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 14,
        "order": 1
      },
      "15": {
        "rank": "15",
        "roman": "XV",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 15,
        "order": 1
      },
      "16": {
        "rank": "16",
        "roman": "XVI",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 16,
        "order": 1
      },
      "17": {
        "rank": "17",
        "roman": "XVII",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 17,
        "order": 1
      },
      "18": {
        "rank": "18",
        "roman": "XVIII",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 18,
        "order": 1
      },
      "19": {
        "rank": "19",
        "roman": "XIX",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 19,
        "order": 1
      },
      "20": {
        "rank": "20",
        "roman": "XX",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 20,
        "order": 1
      },
      "21": {
        "rank": "21",
        "roman": "XXI",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 21,
        "order": 5
      },
      "22": {
        "roman": "S",
        "suitColor": "purple",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "rank": "S",
        "sortDefault": 22,
        "order": 5
      },
      "KS": {
        "rank": "K",
        "rankImage": "/assets/-1882019559_61400",
        "suitImage": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 8,
        "order": 5
      },
      "QS": {
        "rank": "Q",
        "rankImage": "/assets/1085111785_36695",
        "suitImage": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 7,
        "order": 4
      },
      "CS": {
        "rank": "C",
        "riderImage": "/i/cards-tarot/CS.png",
        "suitImage": "i/icons/spades.svg",
        "tarotBack": "transparent",
        "suit": 3,
        "sortDefault": 6,
        "order": 3
      },
      "JS": {
        "rank": "J",
        "rankImage": "/assets/2115758924_42014",
        "suitImage": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 5,
        "order": 2
      },
      "TS": {
        "rank": "10",
        "suitImage": "i/icons/spades.svg",
        "suit-P11": "i/icons/spades.svg",
        "suit-P13": "i/icons/spades.svg",
        "suit-P51": "i/icons/spades.svg",
        "suit-P53": "i/icons/spades.svg",
        "suit-S12": "i/icons/spades.svg",
        "suit-S21": "i/icons/spades.svg",
        "suit-S23": "i/icons/spades.svg",
        "suit-S31": "i/icons/spades.svg",
        "suit-S33": "i/icons/spades.svg",
        "suit-S42": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 4,
        "order": 1
      },
      "9S": {
        "rank": "9",
        "suitImage": "i/icons/spades.svg",
        "suit-P11": "i/icons/spades.svg",
        "suit-P13": "i/icons/spades.svg",
        "suit-P32": "i/icons/spades.svg",
        "suit-P51": "i/icons/spades.svg",
        "suit-P53": "i/icons/spades.svg",
        "suit-S21": "i/icons/spades.svg",
        "suit-S23": "i/icons/spades.svg",
        "suit-S31": "i/icons/spades.svg",
        "suit-S33": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 3,
        "order": 1
      },
      "8S": {
        "rank": "8",
        "suitImage": "i/icons/spades.svg",
        "suit-P11": "i/icons/spades.svg",
        "suit-P13": "i/icons/spades.svg",
        "suit-P22": "i/icons/spades.svg",
        "suit-P31": "i/icons/spades.svg",
        "suit-P33": "i/icons/spades.svg",
        "suit-P42": "i/icons/spades.svg",
        "suit-P51": "i/icons/spades.svg",
        "suit-P53": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 2,
        "order": 1
      },
      "7S": {
        "rank": "7",
        "suitImage": "i/icons/spades.svg",
        "suit-P11": "i/icons/spades.svg",
        "suit-P13": "i/icons/spades.svg",
        "suit-P22": "i/icons/spades.svg",
        "suit-P31": "i/icons/spades.svg",
        "suit-P33": "i/icons/spades.svg",
        "suit-P51": "i/icons/spades.svg",
        "suit-P53": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 1,
        "order": 1
      },
      "KC": {
        "rank": "K",
        "rankImage": "/assets/-604240792_36033",
        "suitImage": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 8,
        "order": 5
      },
      "QC": {
        "rank": "Q",
        "rankImage": "/assets/-359721987_40577",
        "suitImage": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 7,
        "order": 4
      },
      "CC": {
        "rank": "C",
        "riderImage": "/i/cards-tarot/CC.png",
        "suitImage": "i/icons/clubs.svg",
        "tarotBack": "transparent",
        "suit": 1,
        "sortDefault": 6,
        "order": 3
      },
      "JC": {
        "rank": "J",
        "rankImage": "/assets/-1936516067_36132",
        "suitImage": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 5,
        "order": 2
      },
      "TC": {
        "rank": "10",
        "suitImage": "i/icons/clubs.svg",
        "suit-P11": "i/icons/clubs.svg",
        "suit-P13": "i/icons/clubs.svg",
        "suit-P51": "i/icons/clubs.svg",
        "suit-P53": "i/icons/clubs.svg",
        "suit-S12": "i/icons/clubs.svg",
        "suit-S21": "i/icons/clubs.svg",
        "suit-S23": "i/icons/clubs.svg",
        "suit-S31": "i/icons/clubs.svg",
        "suit-S33": "i/icons/clubs.svg",
        "suit-S42": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 4,
        "order": 1
      },
      "9C": {
        "rank": "9",
        "suitImage": "i/icons/clubs.svg",
        "suit-P11": "i/icons/clubs.svg",
        "suit-P13": "i/icons/clubs.svg",
        "suit-P32": "i/icons/clubs.svg",
        "suit-P51": "i/icons/clubs.svg",
        "suit-P53": "i/icons/clubs.svg",
        "suit-S21": "i/icons/clubs.svg",
        "suit-S23": "i/icons/clubs.svg",
        "suit-S31": "i/icons/clubs.svg",
        "suit-S33": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 3,
        "order": 1
      },
      "8C": {
        "rank": "8",
        "suitImage": "i/icons/clubs.svg",
        "suit-P11": "i/icons/clubs.svg",
        "suit-P13": "i/icons/clubs.svg",
        "suit-P22": "i/icons/clubs.svg",
        "suit-P31": "i/icons/clubs.svg",
        "suit-P33": "i/icons/clubs.svg",
        "suit-P42": "i/icons/clubs.svg",
        "suit-P51": "i/icons/clubs.svg",
        "suit-P53": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 2,
        "order": 1
      },
      "7C": {
        "rank": "7",
        "suitImage": "i/icons/clubs.svg",
        "suit-P11": "i/icons/clubs.svg",
        "suit-P13": "i/icons/clubs.svg",
        "suit-P22": "i/icons/clubs.svg",
        "suit-P31": "i/icons/clubs.svg",
        "suit-P33": "i/icons/clubs.svg",
        "suit-P51": "i/icons/clubs.svg",
        "suit-P53": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 1,
        "order": 1
      },
      "AH": {
        "rank": "1",
        "rankImage": "i/icons/hearts.svg",
        "suitImage": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 4,
        "order": 1
      },
      "KH": {
        "rank": "K",
        "rankImage": "/assets/-511606639_49182",
        "suitImage": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 8,
        "order": 5
      },
      "QH": {
        "rank": "Q",
        "rankImage": "/assets/-1553973424_45799",
        "suitImage": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 7,
        "order": 4
      },
      "CH": {
        "rank": "C",
        "riderImage": "/i/cards-tarot/CH.png",
        "suitImage": "i/icons/hearts.svg",
        "tarotBack": "transparent",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 6,
        "order": 3
      },
      "JH": {
        "rank": "J",
        "rankImage": "/assets/-560751544_37381",
        "suitImage": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 5,
        "order": 2
      },
      "4H": {
        "rank": "4",
        "suitImage": "i/icons/hearts.svg",
        "suit-P11": "i/icons/hearts.svg",
        "suit-P13": "i/icons/hearts.svg",
        "suit-P51": "i/icons/hearts.svg",
        "suit-P53": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 1,
        "order": 1
      },
      "3H": {
        "rank": "3",
        "suitImage": "i/icons/hearts.svg",
        "suit-P12": "i/icons/hearts.svg",
        "suit-P32": "i/icons/hearts.svg",
        "suit-P52": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 2,
        "order": 1
      },
      "2H": {
        "rank": "2",
        "suitImage": "i/icons/hearts.svg",
        "suit-P12": "i/icons/hearts.svg",
        "suit-P52": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 3,
        "order": 1
      },
      "AD": {
        "rank": "1",
        "rankImage": "i/icons/diamonds.svg",
        "suitImage": "i/icons/diamonds.svg",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 4,
        "order": 1
      },
      "KD": {
        "rank": "K",
        "rankImage": "/assets/-862690059_30988",
        "suitImage": "i/icons/diamonds.svg",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 8,
        "order": 5
      },
      "QD": {
        "rank": "Q",
        "rankImage": "/assets/-132931377_41422",
        "suitImage": "i/icons/diamonds.svg",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 7,
        "order": 4
      },
      "CD": {
        "rank": "C",
        "riderImage": "/i/cards-tarot/CD.png",
        "suitImage": "i/icons/diamonds.svg",
        "tarotBack": "transparent",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 6,
        "order": 3
      },
      "JD": {
        "rank": "J",
        "suitColor": "#e50932",
        "rankImage": "/assets/-696466837_31225",
        "suitImage": "i/icons/diamonds.svg",
        "suit": 2,
        "sortDefault": 5,
        "order": 2
      },
      "4D": {
        "rank": "4",
        "suitImage": "i/icons/diamonds.svg",
        "suit-P11": "i/icons/diamonds.svg",
        "suit-P13": "i/icons/diamonds.svg",
        "suit-P51": "i/icons/diamonds.svg",
        "suit-P53": "i/icons/diamonds.svg",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 1,
        "order": 1
      },
      "3D": {
        "rank": "3",
        "suitImage": "i/icons/diamonds.svg",
        "suit-P12": "i/icons/diamonds.svg",
        "suit-P32": "i/icons/diamonds.svg",
        "suit-P52": "i/icons/diamonds.svg",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 2,
        "order": 1
      },
      "2D": {
        "rank": "2",
        "suitImage": "i/icons/diamonds.svg",
        "suit-P12": "i/icons/diamonds.svg",
        "suit-P52": "i/icons/diamonds.svg",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 3,
        "order": 1
      }
    },
    "faceTemplates": [
      {
        "border": false,
        "radius": false,
        "objects": [
          {
            "type": "image",
            "x": 0,
            "y": 0,
            "width": 103,
            "height": 160,
            "color": "transparent",
            "value": "/i/cards-default/2B.svg"
          }
        ]
      },
      {
        "border": 1,
        "radius": 6,
        "objects": [
          {
            "type": "image",
            "width": 103,
            "height": 160,
            "color": "white"
          },
          {
            "type": "image",
            "x": 25,
            "y": 25,
            "width": 53,
            "height": 110,
            "color": "white",
            "dynamicProperties": {
              "value": "rankImage"
            },
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "css": {
              "background-size": "100% 100%"
            }
          },
          {
            "type": "image",
            "x": 16,
            "y": 25,
            "width": 72,
            "height": 112,
            "color": "transparent",
            "dynamicProperties": {
              "value": "tarotImage"
            },
            "css": {
              "opacity": 0.85
            }
          },
          {
            "type": "image",
            "x": 19,
            "y": 25,
            "width": 64,
            "height": 112,
            "color": "transparent",
            "dynamicProperties": {
              "value": "riderImage"
            },
            "css": {
              "opacity": 0.85
            }
          },
          {
            "type": "image",
            "x": -1,
            "y": -1,
            "width": 28,
            "height": 55,
            "dynamicProperties": {
              "color": "tarotBack"
            }
          },
          {
            "type": "image",
            "x": 75,
            "y": 110,
            "width": 28,
            "height": 55,
            "dynamicProperties": {
              "color": "tarotBack"
            }
          },
          {
            "type": "text",
            "x": -3,
            "y": -2,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "rank",
              "color": "suitColor"
            },
            "css": {
              "letter-spacing": "-6px"
            }
          },
          {
            "type": "text",
            "x": 18,
            "y": 62,
            "fontSize": 35,
            "textAlign": "center",
            "width": 60,
            "dynamicProperties": {
              "value": "roman",
              "color": "suitColor"
            }
          },
          {
            "type": "text",
            "x": 81,
            "y": 127,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "rank",
              "color": "suitColor"
            },
            "rotation": 180,
            "css": {
              "letter-spacing": "-6px"
            }
          },
          {
            "type": "image",
            "x": 1,
            "y": 28,
            "width": 23,
            "height": 23,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImage"
            }
          },
          {
            "type": "image",
            "x": 79,
            "y": 110,
            "width": 23,
            "height": 23,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImage"
            },
            "rotation": 180
          },
          {
            "type": "image",
            "x": 25,
            "y": 25,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P11"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 25,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P12"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 25,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P13"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 48.5,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P21"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 48.5,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P22"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 48.5,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P23"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 72,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P31"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 72,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P32"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 72,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P33"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 95.5,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P41"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 95.5,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P42"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 95.5,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P43"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 119,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P51"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 119,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P52"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 119,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P53"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 40.6,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S11"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 40.6,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S12"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 40.6,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S13"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 56.3,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S21"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 56.3,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S22"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 56.3,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S23"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 87.7,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S31"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 87.7,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S32"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 87.7,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S33"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 103.3,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S41"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 103.3,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S42"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 103.3,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S43"
            }
          }
        ]
      }
    ],
    "staged": false,
    "width": 86,
    "height": 86,
    "movable": true,
    "movableInEdit": true,
    "inheritFrom": {
      "deck1": [
        "cardDefaults"
      ]
    },
    "clickable": true,
    "deckSuits": [
      "",
      "clubs",
      "diamonds",
      "spades",
      "hearts",
      "stars"
    ],
    "deckSuitsColor": [
      "",
      "",
      "#e50932",
      "",
      "#e50932",
      "purple",
      ""
    ],
    "deckSuitsImage": [
      "",
      "i/icons/clubs.svg",
      "i/icons/diamonds.svg",
      "i/icons/spades.svg",
      "i/icons/hearts.svg",
      "/assets/-374765193_624",
      ""
    ],
    "deckSuitsText": [
      "",
      "",
      "",
      "",
      "",
      "",
      "No\nTrump"
    ],
    "deckSuitsUni": [
      "",
      "♣",
      "♦",
      "♠",
      "♥",
      "*",
      "NT"
    ],
    "deckType": 2,
    "deckDiceFaces": [
      {
        "image": "i/icons/clubs.svg"
      },
      {
        "image": "i/icons/diamonds.svg",
        "deckSuitColor": "#e50932"
      },
      {
        "image": "i/icons/spades.svg"
      },
      {
        "image": "i/icons/hearts.svg",
        "deckSuitColor": "#e50932"
      },
      {
        "image": "/assets/-374765193_624",
        "deckSuitColor": "purple"
      }
    ]
  },
  "gcew": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "1",
    "id": "gcew",
    "staged": false,
    "parent": "pile2"
  },
  "cx9g": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "2",
    "id": "cx9g",
    "staged": false,
    "parent": "pile2"
  },
  "ihao": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "3",
    "id": "ihao",
    "staged": false,
    "parent": "pile2"
  },
  "62uz": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "4",
    "id": "62uz",
    "staged": false,
    "parent": "pile2"
  },
  "ouw2": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "5",
    "id": "ouw2",
    "staged": false,
    "parent": "pile2"
  },
  "hqit": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "6",
    "id": "hqit",
    "staged": false,
    "parent": "pile2"
  },
  "sccr": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "7",
    "id": "sccr",
    "staged": false,
    "parent": "pile2"
  },
  "p0xc": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "8",
    "id": "p0xc",
    "staged": false,
    "parent": "pile2"
  },
  "n5y9": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "9",
    "id": "n5y9",
    "staged": false,
    "parent": "pile2"
  },
  "qlze": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "10",
    "id": "qlze",
    "staged": false,
    "parent": "pile2"
  },
  "p4hk": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "11",
    "id": "p4hk",
    "staged": false,
    "parent": "pile2"
  },
  "yixx": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "12",
    "id": "yixx",
    "staged": false,
    "parent": "pile2"
  },
  "xdcd": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "13",
    "id": "xdcd",
    "staged": false,
    "parent": "pile2"
  },
  "yc1e": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "14",
    "id": "yc1e",
    "staged": false,
    "parent": "pile2"
  },
  "gvb3": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "15",
    "id": "gvb3",
    "staged": false,
    "parent": "pile2"
  },
  "9w3w": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "16",
    "id": "9w3w",
    "staged": false,
    "parent": "pile2"
  },
  "icaj": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "17",
    "id": "icaj",
    "staged": false,
    "parent": "pile2"
  },
  "z80s": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "18",
    "id": "z80s",
    "staged": false,
    "parent": "pile2"
  },
  "1bs0": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "19",
    "id": "1bs0",
    "staged": false,
    "parent": "pile2"
  },
  "4x8f": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "20",
    "id": "4x8f",
    "staged": false,
    "parent": "pile2"
  },
  "fbiv": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "21",
    "id": "fbiv",
    "staged": false,
    "parent": "pile2"
  },
  "1gs3": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "22",
    "id": "1gs3",
    "staged": false,
    "parent": "pile2"
  },
  "7nqw": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "KS",
    "id": "7nqw",
    "staged": false,
    "parent": "pile2"
  },
  "ay8z": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "QS",
    "id": "ay8z",
    "staged": false,
    "parent": "pile2"
  },
  "mmr8": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "JS",
    "id": "mmr8",
    "staged": false,
    "parent": "pile2"
  },
  "0jm2": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "TS",
    "id": "0jm2",
    "staged": false,
    "parent": "pile2"
  },
  "tpgx": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "9S",
    "id": "tpgx",
    "staged": false,
    "parent": "pile2"
  },
  "a0w6": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "8S",
    "id": "a0w6",
    "staged": false,
    "parent": "pile2"
  },
  "6cna": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "7S",
    "id": "6cna",
    "staged": false,
    "parent": "pile2"
  },
  "js97": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "KC",
    "id": "js97",
    "staged": false,
    "parent": "pile2"
  },
  "is5g": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "QC",
    "id": "is5g",
    "staged": false,
    "parent": "pile2"
  },
  "s9mz": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "JC",
    "id": "s9mz",
    "staged": false,
    "parent": "pile2"
  },
  "lz08": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "TC",
    "id": "lz08",
    "staged": false,
    "parent": "pile2"
  },
  "pwid": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "9C",
    "id": "pwid",
    "staged": false,
    "parent": "pile2"
  },
  "zqx6": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "8C",
    "id": "zqx6",
    "staged": false,
    "parent": "pile2"
  },
  "is8d": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "7C",
    "id": "is8d",
    "staged": false,
    "parent": "pile2"
  },
  "pmam": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "AH",
    "id": "pmam",
    "staged": false,
    "parent": "pile2"
  },
  "44lh": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "KH",
    "id": "44lh",
    "staged": false,
    "parent": "pile2"
  },
  "sr00": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "QH",
    "id": "sr00",
    "staged": false,
    "parent": "pile2"
  },
  "12h0": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "JH",
    "id": "12h0",
    "staged": false,
    "parent": "pile2"
  },
  "ew11": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "4H",
    "id": "ew11",
    "staged": false,
    "parent": "pile2"
  },
  "bj7c": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "3H",
    "id": "bj7c",
    "staged": false,
    "parent": "pile2"
  },
  "ik4a": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "2H",
    "id": "ik4a",
    "staged": false,
    "parent": "pile2"
  },
  "8l8q": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "AD",
    "id": "8l8q",
    "staged": false,
    "parent": "pile2"
  },
  "m9m0": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "KD",
    "id": "m9m0",
    "staged": false,
    "parent": "pile2"
  },
  "2grz": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "QD",
    "id": "2grz",
    "staged": false,
    "parent": "pile2"
  },
  "5lwu": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "JD",
    "id": "5lwu",
    "staged": false,
    "parent": "pile2"
  },
  "fwop": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "4D",
    "id": "fwop",
    "staged": false,
    "parent": "pile2"
  },
  "fplx": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "3D",
    "id": "fplx",
    "staged": false,
    "parent": "pile2"
  },
  "jtkp": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "2D",
    "id": "jtkp",
    "staged": false,
    "parent": "pile2"
  },
  "scoreboard3": {
    "type": "scoreboard",
    "id": "scoreboard3",
    "y": 85,
    "width": 175,
    "height": 430,
    "movable": false,
    "movableInEdit": false,
    "autosizeColumns": false,
    "css": {
      ".scoreboard td:first-child": {
        "--firstColWidth": "10px"
      },
      ".scoreboard tbody tr:nth-child(1) td": {
        "border-top": "1px solid black",
        "writing-mode": "vertical-lr",
        "transform": "rotate(180deg)"
      },
      ".scoreboard tbody tr:nth-child(6) td": {
        "border-top": "1px solid black"
      },
      ".scoreboard tbody tr:nth-child(9) td": {
        "border-top": "1px solid black"
      },
      ".scoreboard tbody tr:nth-child(12) td": {
        "border-top": "1px solid black"
      },
      ".scoreboard": {
        "background": "#FFFAF0"
      }
    },
    "layer": -4,
    "totalsLabel": "Tot",
    "rounds": [
      "S",
      "C",
      "D",
      "H",
      "O",
      "U",
      "S",
      "G",
      "J1",
      "J2"
    ],
    "showAllRounds": true,
    "scoreProperty": "scoreCoiffeur",
    "scaleChangeRoutine": [
      {
        "func": "IF",
        "operand1": "${PROPERTY scale}",
        "operand2": 1,
        "thenRoutine": [
          {
            "func": "IF",
            "operand1": "${PROPERTY seatCount OF settingsDecks}",
            "operand2": "4",
            "thenRoutine": [
              {
                "func": "SET",
                "collection": [
                  "scoreboard"
                ],
                "property": "rounds",
                "value": [
                  "S",
                  "C",
                  "D",
                  "H",
                  "O",
                  "U",
                  "S",
                  "G",
                  "J1",
                  "J2"
                ]
              },
              {
                "func": "SELECT",
                "collection": "DEFAULT",
                "property": "id",
                "value": "scoreboard3"
              },
              {
                "func": "SET",
                "property": "rounds",
                "value": [
                  "S",
                  "C",
                  "D",
                  "H",
                  "O",
                  "U",
                  "S",
                  "G",
                  "J1",
                  "J2"
                ]
              },
              {
                "func": "SET",
                "property": "height",
                "value": 430
              },
              {
                "func": "SET",
                "property": "x",
                "value": 270
              },
              {
                "func": "SET",
                "collection": [
                  "3pScoreCoiffeurButton"
                ],
                "property": "scale",
                "value": 0
              },
              {
                "func": "SET",
                "collection": [
                  "4pScoreCoiffeurButton"
                ],
                "property": "scale",
                "value": 1
              }
            ],
            "elseRoutine": [
              {
                "func": "SET",
                "collection": [
                  "scoreboard"
                ],
                "property": "rounds",
                "value": [
                  "S",
                  "C",
                  "D",
                  "H",
                  "O",
                  "U",
                  "S",
                  "G",
                  "J1",
                  "J2",
                  "Match"
                ]
              },
              {
                "func": "SELECT",
                "collection": "DEFAULT",
                "property": "id",
                "value": "scoreboard3"
              },
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "rounds",
                "value": [
                  "S",
                  "C",
                  "D",
                  "H",
                  "O",
                  "U",
                  "S",
                  "G",
                  "J1",
                  "J2",
                  "Match"
                ]
              },
              {
                "func": "SET",
                "property": "height",
                "value": 480
              },
              {
                "func": "SET",
                "property": "x",
                "value": 270
              },
              {
                "func": "SET",
                "collection": [
                  "3pScoreCoiffeurButton"
                ],
                "property": "scale",
                "value": 1
              },
              {
                "func": "SET",
                "collection": [
                  "4pScoreCoiffeurButton"
                ],
                "property": "scale",
                "value": 0
              }
            ]
          }
        ]
      }
    ],
    "x": 270,
    "seats": [
      "seat1",
      "seat2",
      "seat3",
      "seat4",
      "seat5",
      "seat6",
      "seat7",
      "seat8"
    ],
    "scale": 0
  },
  "4pScoreCoiffeurButton": {
    "type": "button",
    "id": "4pScoreCoiffeurButton",
    "parent": "scoreboard3",
    "fixedParent": true,
    "y": 435,
    "height": 40,
    "movableInEdit": false,
    "clickRoutine": [
      {
        "func": "FOREACH",
        "in": [
          1,
          3,
          5,
          7
        ],
        "loopRoutine": [
          "var ID = ${value}",
          "var scoreArray = []",
          {
            "func": "FOREACH",
            "range": [
              0,
              9
            ],
            "loopRoutine": [
              "var thisSeat = 'seat' + ${ID}",
              "var thisScore = ${PROPERTY score OF $thisSeat}",
              "var thisScoreIndex = ${thisScore.$value}",
              "var thisScore = ${thisScoreIndex} / 10",
              "var thisScore = ${thisScore} floor",
              "var thisMulti = ${PROPERTY multiArray}",
              "var thisMulti = ${thisMulti.$value}",
              "var calcScore = ${thisMulti} * ${thisScore}",
              {
                "func": "IF",
                "operand1": "${thisScoreIndex}",
                "operand2": " ",
                "thenRoutine": [
                  "var scoreArray = push ' '"
                ],
                "elseRoutine": [
                  "var scoreArray = push ${calcScore}"
                ]
              }
            ]
          },
          {
            "func": "SET",
            "collection": [
              "${thisSeat}"
            ],
            "property": "scoreCoiffeur",
            "value": "${scoreArray}"
          }
        ]
      }
    ],
    "multiArray": [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10
    ],
    "x": 60,
    "text": "Convert"
  },
  "3pScoreCoiffeurButton": {
    "type": "button",
    "id": "3pScoreCoiffeurButton",
    "parent": "scoreboard3",
    "fixedParent": true,
    "y": 485,
    "height": 40,
    "movableInEdit": false,
    "clickRoutine": [
      "var scoreArray = []",
      "var scoreCoiffeurArray = []",
      {
        "func": "FOREACH",
        "range": [
          0,
          9
        ],
        "loopRoutine": [
          "//Determine the multiplier for the contract row. Match row is not included in this loop and is handled separately at the end.",
          "var contract = ${value}",
          {
            "func": "IF",
            "operand1": "${contract}",
            "relation": "<",
            "operand2": 4,
            "thenRoutine": [
              "var multiply = 1"
            ],
            "elseRoutine": [
              {
                "func": "IF",
                "operand1": "${contract}",
                "relation": ">",
                "operand2": 6,
                "thenRoutine": [
                  "var multiply = 3"
                ],
                "elseRoutine": [
                  "var multiply = 2"
                ]
              }
            ]
          },
          {
            "func": "FOREACH",
            "in": [
              1,
              3,
              7
            ],
            "loopRoutine": [
              "//Determine if the scoreboard has 3 numbers for the row. Cannot just check length because default value is a ' ' for appearance purposes.",
              "var seat = 'seat' + ${value}",
              "var score = ${PROPERTY score OF $seat}",
              "var score = ${score.$contract}",
              "var numCheck = ${score} / ${score}",
              {
                "func": "IF",
                "operand1": "${numCheck}",
                "operand2": 1,
                "thenRoutine": [
                  "var scoreArray = push ${score}",
                  "var length = length ${scoreArray}",
                  {
                    "func": "IF",
                    "operand1": "${length}",
                    "operand2": 3,
                    "thenRoutine": [
                      "//Next check if the stick value has already been set.",
                      {
                        "func": "CALL",
                        "routine": "stickCheckRoutine"
                      },
                      {
                        "func": "IF",
                        "condition": "${result}",
                        "elseRoutine": [
                          "//Finally, set the values on the row.",
                          {
                            "func": "CALL",
                            "routine": "stickCalcRoutine"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "var scoreArray = []"
        ]
      },
      {
        "func": "FOREACH",
        "in": [
          "seat1",
          "seat3",
          "seat7"
        ],
        "loopRoutine": [
          "//Match row gets its own scoring",
          "var matchStick = ${PROPERTY score OF $value}",
          "var matchStick = ${matchStick.10}",
          {
            "func": "IF",
            "operand1": "${matchStick}",
            "relation": "!=",
            "operand2": 0,
            "thenRoutine": [
              {
                "func": "SCORE",
                "round": "11",
                "property": "scoreCoiffeur",
                "seats": "${value}",
                "value": "${matchStick}"
              }
            ]
          }
        ]
      }
    ],
    "stickCheckRoutine": [
      {
        "func": "FOREACH",
        "in": [
          1,
          3,
          7
        ],
        "loopRoutine": [
          "//Determine if the stick and potatoe value has already been set for this row. Needed to prevent scoring again in event of a tie that has been broken by a random pick.",
          "var seatCoiffeur = 'seat' + ${value}",
          "var scoreCoiffeur = ${PROPERTY scoreCoiffeur OF $seatCoiffeur}",
          "var scoreCoiffeur = ${scoreCoiffeur.$contract}",
          "var scoreCoiffeurArray = push ${scoreCoiffeur}",
          "var sortedCoiffeurArray = ${scoreCoiffeurArray} sort",
          "var notSet = ${sortedCoiffeurArray} lastIndexOf ' '",
          {
            "func": "IF",
            "operand1": "${notSet}",
            "operand2": 2,
            "thenRoutine": [
              "var result = false"
            ],
            "elseRoutine": [
              "var result = true"
            ]
          }
        ]
      }
    ],
    "stickCalcRoutine": [
      "var seat1 = ${scoreArray.0}",
      "var seat3 = ${scoreArray.1}",
      "var seat7 = ${scoreArray.2}",
      "var scoreArraySorted = numericSort ${scoreArray}",
      {
        "func": "IF",
        "operand1": "${seat1}",
        "operand2": "${scoreArraySorted.0}",
        "thenRoutine": [
          "//Determine which seat has the lowest value",
          "var lowSeat = 'seat1'"
        ],
        "elseRoutine": [
          {
            "func": "IF",
            "operand1": "${seat3}",
            "operand2": "${scoreArraySorted.0}",
            "thenRoutine": [
              "var lowSeat = 'seat3'"
            ],
            "elseRoutine": [
              "var lowSeat = 'seat7'"
            ]
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${seat1}",
        "operand2": "${scoreArraySorted.2}",
        "thenRoutine": [
          "//Determine which seat has the highest value",
          "var highSeat = 'seat1'"
        ],
        "elseRoutine": [
          {
            "func": "IF",
            "operand1": "${seat3}",
            "operand2": "${scoreArraySorted.2}",
            "thenRoutine": [
              "var highSeat = 'seat3'"
            ],
            "elseRoutine": [
              "var highSeat = 'seat7'"
            ]
          }
        ]
      },
      {
        "func": "FOREACH",
        "in": "${PROPERTY tiedArray}",
        "loopRoutine": [
          "//Determine which seat is in the middle",
          {
            "func": "IF",
            "operand1": "${value}",
            "relation": "!=",
            "operand2": "${lowSeat}",
            "thenRoutine": [
              {
                "func": "IF",
                "operand1": "${value}",
                "relation": "!=",
                "operand2": "${highSeat}",
                "thenRoutine": [
                  "var midSeat = ${value}"
                ]
              }
            ]
          }
        ]
      },
      "var stickArray = []",
      "var stickArray = push ${lowSeat}",
      "var stickArray = push ${midSeat}",
      "var stickArray = push ${highSeat}",
      {
        "func": "IF",
        "operand1": "${scoreArraySorted.0}",
        "operand2": "${scoreArraySorted.2}",
        "thenRoutine": [
          "//If the highest and lowest are tied, then it is a 3-way tie. Determine lowest by random pick. As between the other two, determine highest by random pick.",
          "var tiedArray = ${PROPERTY tiedArray}",
          "var random = randInt 0 2",
          "var lowSeat = ${tiedArray.$random}",
          "var tiedArray = ${random} remove 1",
          "var random = randInt 0 1",
          "var highSeat = ${tiedArray.$random}"
        ],
        "elseRoutine": [
          {
            "func": "IF",
            "operand1": "${scoreArraySorted.0}",
            "operand2": "${scoreArraySorted.1}",
            "thenRoutine": [
              "//If tied for lowest, pick one randomly",
              "var random = randInt 0 1",
              "var lowSeat = ${stickArray.$random}"
            ],
            "elseRoutine": [
              {
                "func": "IF",
                "operand1": "${scoreArraySorted.1}",
                "operand2": "${scoreArraySorted.2}",
                "thenRoutine": [
                  "//If tied for highest, pick one randomly",
                  "var random = randInt 1 2",
                  "var highSeat = ${stickArray.$random}"
                ]
              }
            ]
          }
        ]
      },
      "var lowSeatValue = -1 * ${multiply}",
      "var highSeatValue = 1 * ${multiply}",
      "var round = ${contract} + 1",
      {
        "func": "SCORE",
        "round": "${round}",
        "property": "scoreCoiffeur",
        "seats": "${lowSeat}",
        "value": "${lowSeatValue}"
      },
      {
        "func": "SCORE",
        "round": "${round}",
        "property": "scoreCoiffeur",
        "seats": "${highSeat}",
        "value": "${highSeatValue}"
      }
    ],
    "tiedArray": [
      "seat1",
      "seat3",
      "seat7"
    ],
    "x": 60,
    "text": "Convert",
    "scale": 0
  },
  "showHandButton": {
    "type": "button",
    "id": "showHandButton",
    "x": 5,
    "y": 5,
    "height": 30,
    "movableInEdit": false,
    "text": "Show Hand",
    "clickRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Show hand to other players ..."
          },
          {
            "type": "subtitle",
            "text": "This will make the cards in your hand visible to the other players. Are you sure?"
          }
        ],
        "confirmButtonText": "Yes",
        "cancelButtonText": "No"
      },
      {
        "func": "SET",
        "collection": [
          "${seatID}"
        ],
        "property": "showing",
        "value": true
      },
      {
        "func": "CALL",
        "routine": "showHandRoutine",
        "arguments": {
          "thisSeatIndex": "${PROPERTY index OF $seatID}",
          "thisPlayerName": "${PROPERTY player OF $seatID}"
        }
      },
      {
        "func": "CLICK",
        "collection": [
          "actionsButton"
        ]
      }
    ],
    "css": {
      "font-size": "14px"
    },
    "showHandRoutine": [
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "SELECT",
        "type": "card",
        "property": "showOwner",
        "value": "${thisPlayerName}"
      },
      {
        "func": "DELETE"
      },
      {
        "func": "SELECT",
        "property": "parent",
        "value": "hand"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "owner",
        "value": "${thisPlayerName}"
      },
      {
        "func": "CLONE",
        "properties": {
          "parent": "showHolder${thisSeatIndex}",
          "showOwner": "${thisPlayerName}",
          "shadow": null,
          "scale": 1.9,
          "tempClone": true
        },
        "collection": "shown${thisSeatIndex}"
      },
      {
        "func": "SELECT",
        "type": "card",
        "source": "shown${thisSeatIndex}",
        "property": "id",
        "relation": "!=",
        "value": null
      },
      {
        "func": "CALL",
        "widget": "sortButton",
        "routine": "sortRoutine"
      }
    ],
    "fixedParent": true,
    "parent": "actionsBox",
    "width": 83
  },
  "showHolder1": {
    "type": "holder",
    "id": "showHolder1",
    "parent": "seat1",
    "fixedParent": true,
    "x": -225,
    "width": 604,
    "height": 190,
    "layer": 1,
    "movableInEdit": false,
    "dropOffsetX": 50,
    "enlarge": 1.3,
    "css": {
      "default": {
        "overflow": "hidden"
      },
      "#enlarged": {
        "top": "calc(var(--roomTop) + var(--scale)*350px)",
        "left": "calc(var(--roomLeft) + var(--scale)*475px)",
        "right": "unset",
        "transform-origin": "top left"
      }
    },
    "enterRoutine": [
      {
        "func": "SET",
        "collection": "child",
        "property": "movable",
        "value": false
      },
      {
        "func": "SET",
        "collection": "child",
        "property": "clickable",
        "value": false
      }
    ],
    "y": -75,
    "dropLimit": 0,
    "dropOffsetY": 100,
    "stackOffsetX": 45,
    "scale": 0
  },
  "showHolder2": {
    "inheritFrom": {
      "showHolder1": "*"
    },
    "type": "holder",
    "id": "showHolder2",
    "x": -225,
    "y": -70,
    "parent": "seat2",
    "scale": 0
  },
  "showHolder3": {
    "inheritFrom": {
      "showHolder1": "*"
    },
    "type": "holder",
    "id": "showHolder3",
    "x": -225,
    "y": -70,
    "parent": "seat3",
    "scale": 0
  },
  "showHolder4": {
    "inheritFrom": {
      "showHolder1": "*"
    },
    "type": "holder",
    "id": "showHolder4",
    "x": -225,
    "y": -70,
    "parent": "seat4",
    "scale": 0
  },
  "showHolder5": {
    "inheritFrom": {
      "showHolder1": "*"
    },
    "type": "holder",
    "id": "showHolder5",
    "x": -225,
    "y": -70,
    "scale": 0,
    "parent": "seat5"
  },
  "showHolder6": {
    "inheritFrom": {
      "showHolder1": "*"
    },
    "type": "holder",
    "id": "showHolder6",
    "x": -225,
    "y": -70,
    "parent": "seat6",
    "scale": 0
  },
  "showHolder7": {
    "inheritFrom": {
      "showHolder1": "*"
    },
    "type": "holder",
    "id": "showHolder7",
    "x": -225,
    "y": -70,
    "parent": "seat7",
    "scale": 0
  },
  "showHolder8": {
    "inheritFrom": {
      "showHolder1": "*"
    },
    "type": "holder",
    "id": "showHolder8",
    "x": -225,
    "y": -70,
    "parent": "seat8",
    "scale": 0
  },
  "arrow": {
    "id": "arrow",
    "x": 452,
    "width": 40,
    "height": 40,
    "borderRadius": 8,
    "movableInEdit": false,
    "css": {
      "background": "black",
      "border": "1px solid black",
      "color": "white",
      "font-size": "40px",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "faces": [
      {
        "text": "arrow_up"
      },
      {
        "text": "arrow_down"
      }
    ],
    "y": 910,
    "classes": "symbols",
    "activeFace": 1,
    "scale": 0
  },
  "tricksLabel": {
    "id": "tricksLabel",
    "parent": "deckHolder",
    "fixedParent": true,
    "y": 215,
    "width": 65,
    "height": 20,
    "movable": false,
    "movableInEdit": false,
    "css": {
      "font-size": "20px"
    },
    "text": "Tricks:",
    "x": 17,
    "activeFace": 1
  },
  "tricksCount": {
    "id": "tricksCount",
    "parent": "deckHolder",
    "fixedParent": true,
    "x": 80,
    "y": 215,
    "width": 20,
    "height": 20,
    "movable": false,
    "movableInEdit": false,
    "css": {
      "font-size": "20px"
    },
    "text": 0,
    "textChangeRoutine": [
      {
        "func": "IF",
        "operand1": "${PROPERTY text}",
        "operand2": 0,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "doppelLabel"
            ],
            "property": "activeFace",
            "value": 0
          }
        ],
        "elseRoutine": [
          {
            "func": "CLICK",
            "collection": [
              "doppelLabel"
            ]
          }
        ]
      }
    ],
    "activeFace": 1
  },
  "actionsButton": {
    "type": "button",
    "id": "actionsButton",
    "x": 1101,
    "y": 825,
    "css": {
      "border-radius": "17px 0px 0px 17px",
      "writing-mode": "vertical-lr"
    },
    "text": "Actions",
    "clickRoutine": [
      "var boxArray = ${PROPERTY onlyVisibleForSeat OF actionsBox}",
      "var index = ${boxArray} indexOf ${seatID}",
      {
        "func": "IF",
        "operand1": "${index}",
        "relation": ">=",
        "operand2": 0,
        "thenRoutine": [
          "var boxArray = remove ${index}"
        ],
        "elseRoutine": [
          "var boxArray = push ${seatID}"
        ]
      },
      {
        "func": "SET",
        "collection": [
          "actionsBox"
        ],
        "property": "onlyVisibleForSeat",
        "value": "${boxArray}"
      }
    ],
    "layer": -6,
    "movableInEdit": false,
    "width": 24,
    "rotation": 180
  },
  "actionsBox": {
    "id": "actionsBox",
    "width": 200,
    "height": 125,
    "movable": false,
    "movableInEdit": false,
    "css": {
      "border": "1px solid black",
      "background": "lightgrey"
    },
    "x": 898,
    "y": 691,
    "onlyVisibleForSeat": [],
    "borderRadius": 8,
    "layer": 7
  },
  "showArrowButton": {
    "type": "button",
    "id": "showArrowButton",
    "parent": "actionsBox",
    "fixedParent": true,
    "y": 90,
    "height": 30,
    "movableInEdit": false,
    "css": {
      "font-size": "14px"
    },
    "text": "Show Arrow",
    "clickRoutine": [
      {
        "func": "IF",
        "operand1": "${PROPERTY scale OF arrow}",
        "operand2": 0,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "arrow"
            ],
            "property": "scale",
            "value": 1
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "text",
            "value": "Hide Arrow"
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "arrow"
            ],
            "property": "scale",
            "value": 0
          },
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "text",
            "value": "Show Arrow"
          }
        ]
      },
      {
        "func": "CLICK",
        "collection": [
          "actionsButton"
        ]
      }
    ],
    "width": 83,
    "x": 5
  },
  "transferScoreButton": {
    "type": "button",
    "id": "transferScoreButton",
    "y": 34,
    "clickRoutine": [
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "IF",
        "operand1": "${PROPERTY transferButtonReturn OF $gameID}",
        "relation": "!=",
        "operand2": false,
        "thenRoutine": [
          "var transferButtonReturn = true"
        ],
        "elseRoutine": [
          "var transferButtonReturn = false"
        ]
      },
      "// This CALL exception is different than most others in that it comes first. There is an option to stop all further action in the routine after the CALL by setting the transferButtonReturn to false on the gameID widget (like in Coiffeur)",
      {
        "func": "CALL",
        "widget": "${gameID}",
        "routine": "transferExceptionsRoutine",
        "return": "${transferButtonReturn}"
      },
      {
        "func": "FOREACH",
        "in": "${PROPERTY _totals OF tempScoreboard}",
        "loopRoutine": [
          "var seat = 'seat' + ${key}",
          {
            "func": "SCORE",
            "mode": "set",
            "property": "score",
            "round": "${PROPERTY currentRound OF scoreboard}",
            "seats": "${seat}",
            "value": "${value}"
          }
        ]
      }
    ],
    "height": 30,
    "text": "Transfer Score",
    "width": 120,
    "fixedParent": true,
    "parent": "scoreButton",
    "x": -5
  },
  "doppelLabel": {
    "id": "doppelLabel",
    "parent": "deckHolder",
    "fixedParent": true,
    "x": 120,
    "y": 215,
    "width": 90,
    "height": 20,
    "movable": false,
    "movableInEdit": false,
    "css": {
      "font-size": "20px"
    },
    "text": 1,
    "faces": [
      {
        "text": ""
      },
      {
        "text": "Re/Kontra"
      },
      {
        "text": "No 90"
      },
      {
        "text": "No 60"
      },
      {
        "text": "No 30"
      },
      {
        "text": "Schwarz"
      },
      {
        "text": ""
      },
      {
        "text": ""
      },
      {
        "text": ""
      },
      {
        "text": ""
      },
      {
        "text": ""
      },
      {
        "text": "Last Trick"
      }
    ],
    "scale": 0
  },
  "teamGroup1": {
    "id": "teamGroup1",
    "x": 63,
    "y": 50,
    "text": "A",
    "css": {
      "background": "${PROPERTY backColor}",
      "border": "1px solid red",
      "color": "${PROPERTY fontColor}",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center",
      "font-size": "20px"
    },
    "width": 25,
    "height": 25,
    "borderRadius": 4,
    "movable": false,
    "movableInEdit": false,
    "parent": "seat1",
    "fixedParent": true,
    "faces": [
      {
        "text": "A",
        "teamID": 1,
        "backColor": "#000000",
        "fontColor": "#ffffff"
      },
      {
        "text": "B",
        "teamID": 2,
        "backColor": "#ffffff",
        "fontColor": "#000000"
      },
      {
        "text": "C",
        "teamID": 3,
        "backColor": "#f00f00",
        "fontColor": "#ffffff"
      },
      {
        "text": "D",
        "teamID": 4,
        "backColor": "#808080",
        "fontColor": "#ffffff"
      }
    ],
    "index": 1,
    "faces2": [
      {
        "text": "A",
        "teamID": 1,
        "backColor": "#000000",
        "fontColor": "#ffffff"
      },
      {
        "text": "B",
        "teamID": 2,
        "backColor": "#ffffff",
        "fontColor": "#000000"
      }
    ],
    "faces3": [
      {
        "text": "A",
        "teamID": 1,
        "backColor": "#000000",
        "fontColor": "#ffffff"
      },
      {
        "text": "B",
        "teamID": 2,
        "backColor": "#ffffff",
        "fontColor": "#000000"
      },
      {
        "text": "C",
        "teamID": 3,
        "backColor": "#f00f00",
        "fontColor": "#ffffff"
      }
    ],
    "faces4": [
      {
        "text": "A",
        "teamID": 1,
        "backColor": "#000000",
        "fontColor": "#ffffff"
      },
      {
        "text": "B",
        "teamID": 2,
        "backColor": "#ffffff",
        "fontColor": "#000000"
      },
      {
        "text": "C",
        "teamID": 3,
        "backColor": "#f00f00",
        "fontColor": "#ffffff"
      },
      {
        "text": "D",
        "teamID": 4,
        "backColor": "#808080",
        "fontColor": "#ffffff"
      }
    ],
    "faces5": [
      {
        "text": "A",
        "teamID": 1,
        "backColor": "#000000",
        "fontColor": "#ffffff"
      },
      {
        "text": "B",
        "teamID": 2,
        "backColor": "#ffffff",
        "fontColor": "#000000"
      },
      {
        "text": "C",
        "teamID": 3,
        "backColor": "#f00f00",
        "fontColor": "#ffffff"
      },
      {
        "text": "D",
        "teamID": 4,
        "backColor": "#808080",
        "fontColor": "#ffffff"
      },
      {
        "text": "E",
        "teamID": 5,
        "backColor": "#820000",
        "fontColor": "#ffffff"
      }
    ],
    "faces6": [
      {
        "text": "A",
        "teamID": 1,
        "backColor": "#000000",
        "fontColor": "#ffffff"
      },
      {
        "text": "B",
        "teamID": 2,
        "backColor": "#ffffff",
        "fontColor": "#000000"
      },
      {
        "text": "C",
        "teamID": 3,
        "backColor": "#f00f00",
        "fontColor": "#ffffff"
      },
      {
        "text": "D",
        "teamID": 4,
        "backColor": "#808080",
        "fontColor": "#ffffff"
      },
      {
        "text": "E",
        "teamID": 5,
        "backColor": "#820000",
        "fontColor": "#ffffff"
      },
      {
        "text": "F",
        "teamID": 6,
        "backColor": "#fedada",
        "fontColor": "#000000"
      }
    ],
    "faces7": [
      {
        "text": "A",
        "teamID": 1,
        "backColor": "#000000",
        "fontColor": "#ffffff"
      },
      {
        "text": "B",
        "teamID": 2,
        "backColor": "#ffffff",
        "fontColor": "#000000"
      },
      {
        "text": "C",
        "teamID": 3,
        "backColor": "#f00f00",
        "fontColor": "#ffffff"
      },
      {
        "text": "D",
        "teamID": 4,
        "backColor": "#808080",
        "fontColor": "#ffffff"
      },
      {
        "text": "E",
        "teamID": 5,
        "backColor": "#820000",
        "fontColor": "#ffffff"
      },
      {
        "text": "F",
        "teamID": 6,
        "backColor": "#fedada",
        "fontColor": "#000000"
      },
      {
        "text": "G",
        "teamID": 7,
        "backColor": "#d3d3d3",
        "fontColor": "#000000"
      }
    ],
    "faces8": [
      {
        "text": "A",
        "teamID": 1,
        "backColor": "#000000",
        "fontColor": "#ffffff"
      },
      {
        "text": "B",
        "teamID": 2,
        "backColor": "#ffffff",
        "fontColor": "#000000"
      },
      {
        "text": "C",
        "teamID": 3,
        "backColor": "#f00f00",
        "fontColor": "#ffffff"
      },
      {
        "text": "D",
        "teamID": 4,
        "backColor": "#808080",
        "fontColor": "#ffffff"
      },
      {
        "text": "E",
        "teamID": 5,
        "backColor": "#820000",
        "fontColor": "#ffffff"
      },
      {
        "text": "F",
        "teamID": 6,
        "backColor": "#fedada",
        "fontColor": "#000000"
      },
      {
        "text": "G",
        "teamID": 7,
        "backColor": "#d3d3d3",
        "fontColor": "#000000"
      },
      {
        "text": "H",
        "teamID": 8,
        "backColor": "#ff4747",
        "fontColor": "white"
      }
    ],
    "scale": 0
  },
  "teamGroup2": {
    "inheritFrom": {
      "teamGroup1": "*"
    },
    "id": "teamGroup2",
    "parent": "seat2",
    "activeFace": 0,
    "scale": 0,
    "index": 2,
    "text": "A"
  },
  "teamGroup3": {
    "inheritFrom": {
      "teamGroup1": "*"
    },
    "id": "teamGroup3",
    "parent": "seat3",
    "activeFace": 0,
    "scale": 0,
    "index": 3,
    "text": "A"
  },
  "teamGroup4": {
    "inheritFrom": {
      "teamGroup1": "*"
    },
    "id": "teamGroup4",
    "parent": "seat4",
    "activeFace": 0,
    "scale": 0,
    "index": 4,
    "text": "A"
  },
  "teamGroup5": {
    "inheritFrom": {
      "teamGroup1": "*"
    },
    "id": "teamGroup5",
    "y": -40,
    "parent": "seat5",
    "activeFace": 0,
    "scale": 0,
    "index": 5,
    "text": "A"
  },
  "teamGroup6": {
    "inheritFrom": {
      "teamGroup1": "*"
    },
    "id": "teamGroup6",
    "parent": "seat6",
    "activeFace": 0,
    "scale": 0,
    "index": 6,
    "text": "A"
  },
  "teamGroup7": {
    "inheritFrom": {
      "teamGroup1": "*"
    },
    "id": "teamGroup7",
    "parent": "seat7",
    "activeFace": 0,
    "scale": 0,
    "index": 7,
    "text": "A"
  },
  "teamGroup8": {
    "inheritFrom": {
      "teamGroup1": "*"
    },
    "id": "teamGroup8",
    "parent": "seat8",
    "activeFace": 0,
    "scale": 0,
    "index": 8,
    "text": "A"
  },
  "soloSortButton": {
    "type": "button",
    "id": "soloSortButton",
    "x": 420,
    "y": 860,
    "height": 35,
    "movableInEdit": false,
    "css": {
      "border-radius": "10px 0px 0px 10px"
    },
    "text": "Solo Sort",
    "clickRoutine": [
      {
        "func": "IF",
        "operand1": "${PROPERTY $sortDirection OF $seatID}",
        "relation": "!=",
        "operand2": null,
        "elseRoutine": [
          {
            "func": "INPUT",
            "fields": [
              {
                "type": "title",
                "text": "Choose sort direction ..."
              },
              {
                "type": "subtitle",
                "text": "Choose the direction that your cards will be sorted. You only have to make this choice one time."
              },
              {
                "type": "checkbox",
                "label": "Sort high to low left to right (uncheck to sort low to high left to right)?",
                "value": true,
                "variable": "sortDirection"
              }
            ]
          },
          {
            "func": "SET",
            "collection": [
              "${seatID}"
            ],
            "property": "sortDirection",
            "value": "${sortDirection}"
          }
        ]
      },
      {
        "func": "SELECT",
        "property": "parent",
        "value": "hand"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "owner",
        "value": "${playerName}"
      },
      {
        "func": "CALL",
        "routine": "sortRoutine",
        "arguments": {
          "thisPlayerName": "${playerName}"
        }
      }
    ],
    "sortRoutine": [
      {
        "func": "SORT",
        "collection": "DEFAULT",
        "key": "sortAceTen",
        "reverse": "${PROPERTY sortDirection OF $seatID}"
      },
      {
        "func": "SORT",
        "collection": "DEFAULT",
        "key": "suit"
      },
      {
        "func": "SELECT",
        "type": "card",
        "property": "parent",
        "value": "hand"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "staged",
        "value": true
      },
      {
        "func": "SET",
        "property": "y",
        "relation": "-",
        "value": 20
      }
    ],
    "Inuka": true,
    "scale": 0
  },
  "playerAidButton": {
    "type": "button",
    "id": "playerAidButton",
    "x": 1510,
    "width": 90,
    "height": 40,
    "css": {
      "font-size": "14px"
    },
    "text": "Show/Hide Player Aid",
    "clickRoutine": [
      "var gameID = ${PROPERTY preSet OF preSetsButton}",
      "var gameID = 'playerAid' + ${gameID}",
      "var onlyVisibleForSeatArray = ${PROPERTY onlyVisibleForSeat OF $gameID}",
      "var inOnlyVisibleForSeatArray = ${onlyVisibleForSeatArray} includes ${seatID}",
      {
        "func": "IF",
        "condition": "${inOnlyVisibleForSeatArray}",
        "thenRoutine": [
          "var newOnlyVisibleForSeatArray = []",
          {
            "func": "FOREACH",
            "in": "${onlyVisibleForSeatArray}",
            "loopRoutine": [
              {
                "func": "IF",
                "operand1": "${value}",
                "relation": "!=",
                "operand2": "${seatID}",
                "thenRoutine": [
                  "var newOnlyVisibleForSeatArray = push ${value}"
                ]
              }
            ]
          },
          "var onlyVisibleForSeatArray = ${newOnlyVisibleForSeatArray}"
        ],
        "elseRoutine": [
          "var onlyVisibleForSeatArray = push ${seatID}"
        ]
      },
      {
        "func": "SET",
        "collection": [
          "${gameID}"
        ],
        "property": "onlyVisibleForSeat",
        "value": "${onlyVisibleForSeatArray}"
      }
    ],
    "movableInEdit": false,
    "scale": 0
  },
  "playerAid9": {
    "id": "playerAid9",
    "x": 1174,
    "y": 265,
    "width": 443,
    "height": 71,
    "scale": 0.9,
    "layer": -4,
    "movable": false,
    "image": "/assets/186106283_20117",
    "movableInEdit": false,
    "onlyVisibleForSeat": [],
    "playerAid": true
  },
  "gameID9": {
    "id": "gameID9",
    "x": -395,
    "y": 286,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "text": "Doppelkopf",
    "sort1": "sortDoppel",
    "messageArray": [
      {
        "value": "Default",
        "text": "Click here to choose message"
      },
      {
        "value": "Normal",
        "text": "Normal"
      },
      {
        "value": "Reservation",
        "text": "Reservation"
      },
      {
        "value": "Marriage",
        "text": "Marriage"
      },
      {
        "value": "Poverty",
        "text": "Poverty"
      },
      {
        "value": "Solo",
        "text": "Solo"
      },
      {
        "value": "Trump Solo",
        "text": "Trump Solo"
      },
      {
        "value": "Queen Solo",
        "text": "Queen Solo"
      },
      {
        "value": "Jack Solo",
        "text": "Jack Solo"
      },
      {
        "value": "Meatless",
        "text": "Meatless"
      },
      {
        "value": "Re",
        "text": "Re"
      },
      {
        "value": "Kontra",
        "text": "Kontra"
      },
      {
        "value": "No 90",
        "text": "No 90 (10+ cards)"
      },
      {
        "value": "No 60",
        "text": "No 60 (9+ cards)"
      },
      {
        "value": "No 30",
        "text": "No 30 (8 + cards)"
      },
      {
        "value": "Schwarz",
        "text": "Schwarz (7+ cards)"
      }
    ],
    "roundsTemp": [
      "Card Points",
      "Against Elders",
      "No 90/60/30/0",
      "Re",
      "Kontra",
      "Decl 90/60/30/0",
      "Catch Fox",
      "Charlie Miller",
      "Doppelkopf"
    ],
    "displayArray": [
      [
        "playerAidButton",
        1
      ],
      [
        "soloSortButton",
        1
      ],
      [
        "doppelLabel",
        1
      ]
    ],
    "settingsArray": [
      [
        "capturedHolder",
        true
      ],
      [
        "showTricks",
        false
      ],
      [
        "showBidValue",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        12
      ],
      [
        "deckType",
        1
      ],
      [
        "hideCards",
        8
      ],
      [
        "seatCount",
        4
      ],
      [
        "tempScore",
        true
      ],
      [
        "variableScore",
        true
      ]
    ],
    "scoreSystem": [
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        10,
        2,
        3,
        4
      ],
      [],
      [],
      []
    ],
    "gameID": true,
    "hintText": "\"Bid using square white bid widget and Message button.\\a\\a During play, click on small red, black, and white letter icons to set teams once known. After certain numbers of tricks, text will appear near the trick indicator (below Recall & Shuffle button) showing at what point certain annoucements must be made. When an ace of diamonds is captured, it will be displayed face up in a mini-holder of the player making the capture. This is a reminder about the point for catching a fox, but does not actually indicate if the point has been won.\\a\\a After round is over, press Add Card Points button. The Card Points row is only displayed as an aid to assist in determining if players made their contract. The value of the Card Points row will be subtracted when transferring the score. The Card Points row should automatically show the same for each player on the same 'team' for this round. However, other row values must be entered separately for each player using the scrollbar to highlight the row and press the red/green +/- buttons.\\a\\a When ready to enter final score on main scoreboard, press Transfer Score button.\"",
    "capturedArray": [
      [],
      [
        "D 01"
      ]
    ],
    "transferExceptionsRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Transferring score ..."
          },
          {
            "type": "subtitle",
            "text": "This will transfer the score in the temporary scoreboard to the main one. The Card Points row is only displayed as an aid to assist in determining if players made their contract. The value of the Card Points row will be subtracted when transferring the score. The Card Points row should automatically show the same for each player on the same 'team' for this round. However, other row values must be entered separately for each player."
          }
        ],
        "confirmButtonText": "Yes",
        "cancelButtonText": "No"
      },
      {
        "func": "FOREACH",
        "in": "${PROPERTY _totals OF tempScoreboard}",
        "loopRoutine": [
          "var seat = 'seat' + ${key}",
          "var cardPoints = ${PROPERTY tempScore OF $seat}",
          "var cardPoints = ${cardPoints.0}",
          "var value = ${value} - ${cardPoints}",
          {
            "func": "SCORE",
            "mode": "set",
            "property": "score",
            "round": "${PROPERTY currentRound OF scoreboard}",
            "seats": "${seat}",
            "value": "${value}"
          }
        ]
      }
    ],
    "transferButtonReturn": false
  },
  "gameID0": {
    "id": "gameID0",
    "x": 58,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "text": "Default",
    "sort1": "sortDefault",
    "sort2": "suit",
    "roundsTemp": [
      "Card Points"
    ],
    "displayArray": [
      [
        "playerAidButton",
        0
      ],
      [
        "soloSortButton",
        0
      ],
      [
        "reverseSortButton",
        0
      ],
      [
        "doppelLabel",
        0
      ],
      [
        "scoreButton",
        0
      ],
      [
        "transferScoreButton",
        1
      ],
      [
        "score+10",
        1
      ],
      [
        "suitDice",
        0
      ],
      [
        "trump",
        1
      ],
      [
        "mightyWidgets",
        0
      ],
      [
        "trackTrickBack",
        0
      ],
      [
        "bidWinner",
        1
      ],
      [
        "agonyAuntBack",
        0
      ],
      [
        "burnButton",
        0
      ]
    ],
    "settingsArray": [
      [
        "capturedHolder",
        false
      ],
      [
        "centerFace",
        true
      ],
      [
        "centerShow",
        false
      ],
      [
        "centerSpread",
        true
      ],
      [
        "clickPlay",
        true
      ],
      [
        "showBidHistory",
        true
      ],
      [
        "showBidSuit",
        true
      ],
      [
        "showBidValue",
        true
      ],
      [
        "showDiscard",
        false
      ],
      [
        "showPublicBid",
        true
      ],
      [
        "showScore",
        true
      ],
      [
        "showTricks",
        true
      ],
      [
        "turnDirection",
        true
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        13
      ],
      [
        "deckType",
        0
      ],
      [
        "dummyHand",
        0
      ],
      [
        "hideCards",
        0
      ],
      [
        "jokerCount",
        0
      ],
      [
        "seatCount",
        4
      ],
      [
        "showDelete",
        false
      ],
      [
        "teamScore",
        false
      ],
      [
        "tempScore",
        false
      ],
      [
        "variableScore",
        false
      ]
    ],
    "gameID": true,
    "hintText": "\"Choose a pre-set game by pressing the Game button to the left.\\a\\a Even if no pre-set is available, many trick taking card games can be played in this room. Use the Options buttons in the lower-right corner to configure the number of players, decks, and other settings.\\a\\a Without a pre-set, there will be limited automation, but you can still have fun. If you want to make your own pre-set, visit https://github.com/96LawDawg/Cards-Tricks/wiki.\"",
    "y": -132,
    "autoTeam": false,
    "preSetExceptionsRoutine": [
      "// This is needed to fix whatever happens when other pre-sets are called and the game type is changed to something else. This first few are not from specific games are but specific properties of games that may or may not be modified by pre-sets.",
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "IF",
        "condition": "${PROPERTY customFaceCount OF $gameID}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "trump"
            ],
            "property": "customFaceCount",
            "value": "${PROPERTY customFaceCount OF $gameID}"
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "trump"
            ],
            "property": "customFaceCount",
            "value": "${PROPERTY customFaceCount}"
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY showTempScoreTotals OF $gameID}",
        "operand2": false,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "tempScoreboard"
            ],
            "property": "showTotals",
            "value": "${PROPERTY showTempScoreTotals OF $gameID}"
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "tempScoreboard"
            ],
            "property": "showTotals",
            "value": "${PROPERTY showTempScoreTotals}"
          }
        ]
      },
      "// This part comes from Coiffeur Jass.",
      {
        "func": "SELECT",
        "property": "id",
        "value": "scoreboard"
      },
      {
        "func": "SET",
        "property": "rounds",
        "value": null
      },
      {
        "func": "SET",
        "property": "css",
        "value": "${PROPERTY cssDefault OF scoreboard}"
      },
      {
        "func": "SET",
        "property": "showTotals",
        "value": true
      },
      {
        "func": "SET",
        "collection": [
          "scoreboard3"
        ],
        "property": "scale",
        "value": 0
      },
      "//This comes from Gong Zhu",
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "customFace",
        "value": 0
      },
      "//This comes from Spades",
      {
        "func": "SET",
        "collection": [
          "trickCount"
        ],
        "property": "seats",
        "value": [
          "seat1",
          "seat2",
          "seat3",
          "seat4",
          "seat5",
          "seat6",
          "seat7",
          "seat8"
        ]
      },
      {
        "func": "SET",
        "collection": [
          "trickCount"
        ],
        "property": "rounds",
        "value": [
          "Tricks"
        ]
      },
      {
        "func": "SET",
        "collection": [
          "tempScoreboard"
        ],
        "property": "y",
        "value": 650
      },
      "//This comes from State",
      {
        "func": "SET",
        "collection": [
          "statePoints"
        ],
        "property": "scale",
        "value": 0
      },
      "//This comes from Israeli Whist",
      {
        "func": "SET",
        "collection": [
          "scoreSpecial"
        ],
        "property": "scale",
        "value": 0
      },
      "//This comes from 99",
      {
        "func": "SET",
        "collection": [
          "takeSpecial"
        ],
        "property": "scale",
        "value": 0
      },
      "//This comes from La Batarde",
      {
        "func": "SELECT",
        "type": "card",
        "property": "deck",
        "value": "deck2"
      },
      {
        "func": "SET",
        "property": "deck2Mark",
        "value": null
      },
      "//This comes from Auctions",
      {
        "func": "FOREACH",
        "in": [
          "seat1",
          "seat2",
          "seat3",
          "seat4",
          "seat5",
          "seat6",
          "seat7",
          "seat8"
        ],
        "loopRoutine": [
          {
            "func": "SET",
            "collection": [
              "gameID35"
            ],
            "property": "${value}",
            "value": 1
          }
        ]
      },
      {
        "func": "SET",
        "collection": [
          "gameID35"
        ],
        "property": "misere",
        "value": []
      }
    ],
    "customFaceCount": 6,
    "showTempScoreTotals": true
  },
  "gameID1": {
    "id": "gameID1",
    "x": -541,
    "y": -209,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortDefault",
    "sort2": "suit",
    "text": "Schieber Jass",
    "messageArray": [
      {
        "value": "Default",
        "text": "Click here to choose message"
      },
      {
        "value": "Schieben",
        "text": "Schieben"
      },
      {
        "value": "Clubs",
        "text": "Clubs (x1)"
      },
      {
        "value": "Spades",
        "text": "Spades (x1)"
      },
      {
        "value": "Diamonds",
        "text": "Diamonds (x2)"
      },
      {
        "value": "Hearts",
        "text": "Hearts (x2)"
      },
      {
        "value": "Obenabe",
        "text": "Obenabe (x3)"
      },
      {
        "value": "Undenufe",
        "text": "Undenufe (x4)"
      }
    ],
    "roundsTemp": [
      "Card Points",
      "Weis",
      "Stock",
      "All Tricks",
      "Multiplier"
    ],
    "settingsArray": [
      [
        "showTricks",
        false
      ],
      [
        "turnDirection",
        false
      ],
      [
        "showBidValue",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        9
      ],
      [
        "hideCards",
        4
      ],
      [
        "seatCount",
        4
      ],
      [
        "teamScore",
        true
      ],
      [
        "tempScore",
        true
      ]
    ],
    "scoreSystem": [
      [],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        14,
        10,
        20,
        3,
        4
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        10,
        2,
        3,
        4
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        8,
        0,
        10,
        2,
        3,
        4
      ]
    ],
    "gameID": true,
    "hintText": "\"Declare contract using bid widgets or Message button. \\a\\a When appropriate, record Weis and Stock in the small scoreboard using the scrollbar to highlight the row and press the red/green +/- buttons.\\a\\a After round ends, press Add Card Points button. Five points are automatically added to winner of last trick. The All Tricks bonus is calculated automatically. The multiplier is calculated automatically based on the Activity Log.\\a\\a Press Transfer Score button. Sum of scores is multiplied by the contract multiplier and transferred to the main scoreboard.\\a\\a End of game scoring when both teams are nearing the final score must be determined manually. If using the Add Card Points button to assist, remember that 5 points are always added to the last player pressing the Take button, if if that is not the last trick of the round.\"",
    "trumpIndicator": true,
    "sortExceptionsRoutine": [
      "var trump = ${PROPERTY trump OF trump}",
      "var isNum = ${trump} / 1",
      {
        "func": "IF",
        "operand1": "${isNum}",
        "operand2": "${trump}",
        "thenRoutine": [
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "suit",
            "value": "${trump}",
            "collection": "trumpSuit"
          },
          {
            "func": "IF",
            "condition": "${reverseSort}",
            "thenRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortJassTrump"
              }
            ],
            "elseRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortJassTrump",
                "reverse": "${PROPERTY sortDirection OF $seatID}"
              }
            ]
          },
          {
            "func": "SORT",
            "key": "suit"
          }
        ]
      }
    ],
    "scoreExceptionsRoutine": [
      "// Add 5 points to player taking last trick",
      "var result = ${points}",
      "var last = ${PROPERTY lastPressedBy OF takeButton}",
      {
        "func": "IF",
        "operand1": "${value}",
        "operand2": "${last}",
        "thenRoutine": [
          "var result = ${result} + 5"
        ]
      },
      "// Add 100 points to team that takes all 9 tricks",
      "var tricksS = parseFloat ${PROPERTY tricks OF seat1}",
      "var tricksW = parseFloat ${PROPERTY tricks OF seat3}",
      "var tricksN = parseFloat ${PROPERTY tricks OF seat5}",
      "var tricksE = parseFloat ${PROPERTY tricks OF seat5}",
      "var allNS = ${tricksS} + ${tricksN}",
      "var allEW = ${tricksE} + ${tricksW}",
      "var allNS = ${allNS} == 9",
      "var allEW = ${allEW} == 9",
      {
        "func": "IF",
        "condition": "${allNS}",
        "thenRoutine": [
          {
            "func": "SCORE",
            "mode": "set",
            "property": "tempScore",
            "round": 4,
            "seats": "seat1",
            "value": "100"
          }
        ],
        "elseRoutine": [
          {
            "func": "IF",
            "condition": "${allEW}",
            "thenRoutine": [
              {
                "func": "SCORE",
                "mode": "set",
                "property": "tempScore",
                "round": 4,
                "seats": "seat3",
                "value": "100"
              }
            ]
          }
        ]
      },
      "\\ Show contract multiplier",
      "var multiplier = 1",
      "var contract = ${PROPERTY message OF bids}",
      "var hearts1 = ${contract} == 'hearts'",
      "var hearts2 = ${contract} == 'Hearts'",
      "var hearts = ${hearts1} || ${hearts2}",
      "var diamonds1 = ${contract} == 'diamonds'",
      "var diamonds2 = ${contract} == 'Diamonds'",
      "var diamonds = ${diamonds1} || ${diamonds2}",
      "var red = ${hearts} || ${diamonds}",
      {
        "func": "IF",
        "condition": "${red}",
        "thenRoutine": [
          "var multiplier = 2"
        ]
      },
      {
        "func": "IF",
        "operand1": "${contract}",
        "operand2": "Obenabe",
        "thenRoutine": [
          "var multiplier = 3"
        ]
      },
      {
        "func": "IF",
        "operand1": "${contract}",
        "operand2": "Undenufe",
        "thenRoutine": [
          "var multiplier = 4"
        ]
      },
      {
        "func": "SCORE",
        "mode": "set",
        "property": "tempScore",
        "round": 5,
        "seats": [
          "seat1",
          "seat3"
        ],
        "value": "${multiplier}"
      }
    ],
    "transferExceptionsRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Transferring score ..."
          },
          {
            "type": "subtitle",
            "text": "This will transfer the score in the temporary scoreboard to the main one. This will add the Card Points, Weis, Stock, and All Tricks bonus and multiply by the contract multiplier. Are you sure you want to continue?"
          }
        ],
        "confirmButtonText": "Yes",
        "cancelButtonText": "No"
      },
      {
        "func": "FOREACH",
        "in": "${PROPERTY _totals OF tempScoreboard}",
        "loopRoutine": [
          {
            "func": "IF",
            "operand1": "${key}",
            "operand2": 2,
            "thenRoutine": [
              "var key = 3"
            ]
          },
          "var seat = 'seat' + ${key}",
          "var multiplier = ${PROPERTY tempScore OF seat1}",
          "var multiplier = ${multiplier.4}",
          "var value = ${value} - ${multiplier}",
          "var value = ${value} * ${multiplier}",
          {
            "func": "SCORE",
            "mode": "set",
            "property": "score",
            "round": "${PROPERTY currentRound OF scoreboard}",
            "seats": "${seat}",
            "value": "${value}"
          }
        ]
      }
    ],
    "transferButtonReturn": false,
    "displayArray": [
      [
        "playerAidButton",
        1
      ]
    ]
  },
  "gameID2": {
    "id": "gameID2",
    "x": -405,
    "y": -211,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "text": "Mittlere Jass",
    "sort1": "sortDefault",
    "sort2": "suit",
    "roundsTemp": [
      "Card Points"
    ],
    "settingsArray": [
      [
        "showBidHistory",
        false
      ],
      [
        "showBidSuit",
        false
      ],
      [
        "showBidValue",
        false
      ],
      [
        "showTricks",
        false
      ],
      [
        "turnDirection",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        12
      ],
      [
        "hideCards",
        4
      ],
      [
        "seatCount",
        3
      ],
      [
        "tempScore",
        true
      ],
      [
        "variableScore",
        false
      ]
    ],
    "scoreSystem": [
      [],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        14,
        10,
        20,
        3,
        4
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        10,
        2,
        3,
        4
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        8,
        0,
        10,
        2,
        3,
        4
      ]
    ],
    "gameID": true,
    "hintText": "\"After round is over, press Add Card Points button. Use player aid to determine scoring (1 stick = +1 point; 1 potato = -2 points). Enter points on main scoreboard using red/green +/- buttons.\"",
    "trumpIndicator": true,
    "sortExceptionsRoutine": [
      "var trump = ${PROPERTY trump OF trump}",
      "var isNum = ${trump} / 1",
      {
        "func": "IF",
        "operand1": "${isNum}",
        "operand2": "${trump}",
        "thenRoutine": [
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "suit",
            "value": "${trump}",
            "collection": "trumpSuit"
          },
          {
            "func": "IF",
            "condition": "${reverseSort}",
            "thenRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortJassTrump"
              }
            ],
            "elseRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortJassTrump",
                "reverse": "${PROPERTY sortDirection OF $seatID}"
              }
            ]
          },
          {
            "func": "SORT",
            "key": "suit"
          }
        ]
      }
    ],
    "scoreExceptionsRoutine": [
      "var result = ${points}",
      "var last = ${PROPERTY lastPressedBy OF takeButton}",
      {
        "func": "IF",
        "operand1": "${value}",
        "operand2": "${last}",
        "thenRoutine": [
          "var result = ${result} + 5"
        ]
      }
    ],
    "displayArray": [
      [
        "playerAidButton",
        1
      ],
      [
        "transferScoreButton",
        0
      ]
    ],
    "playerAidDetail1": "Scoring"
  },
  "gameID3": {
    "id": "gameID3",
    "y": 286,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "text": "Pitch Pawnee 10 Point",
    "sort1": "sortDefault",
    "sort2": "suit",
    "roundsTemp": [
      "Card Points"
    ],
    "settingsArray": [
      [
        "showBidSuit",
        false
      ],
      [
        "showDiscard",
        true
      ],
      [
        "showTricks",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        10
      ],
      [
        "jokerCount",
        2
      ],
      [
        "seatCount",
        5
      ],
      [
        "tempScore",
        true
      ],
      [
        "variableScore",
        true
      ]
    ],
    "scoreSystem": [
      [],
      [
        0,
        1,
        1,
        3,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        1,
        0,
        0
      ],
      [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0
      ],
      []
    ],
    "gameID": true,
    "hintText": "\"Click on small red, black, and white letter icons to set teams once known.\\a\\a At end of round, press Add Card Points button to calculate the card points. When done, press Transfer Score button to move scores from the small scoreboard to the main scoreboard.\"",
    "trumpIndicator": true,
    "scoreExceptionsRoutine": [
      "//Count the Jokers",
      {
        "func": "SELECT",
        "source": "trumpCards",
        "property": "order",
        "relation": ">=",
        "value": 14,
        "collection": "jokerCards"
      },
      {
        "func": "COUNT",
        "collection": "jokerCards"
      },
      "var result = ${points} + ${COUNT}",
      {
        "func": "GET",
        "collection": "trumpCards",
        "property": "redOrBlack"
      },
      "// Count the Jacks that are the the opposite color of the trump suit and subtract those points from the score. Done this way because all non-trump Jacks are initially scored as 1 point based on the score array.",
      {
        "func": "IF",
        "operand1": "${redOrBlack}",
        "operand2": "black",
        "thenRoutine": [
          {
            "func": "SELECT",
            "source": "otherCards",
            "property": "order",
            "value": 11,
            "collection": "nonTrumpJacks"
          },
          {
            "func": "SELECT",
            "source": "nonTrumpJacks",
            "property": "redOrBlack",
            "value": "red",
            "collection": "wrongColorJacks"
          },
          {
            "func": "COUNT",
            "collection": "wrongColorJacks"
          }
        ],
        "elseRoutine": [
          {
            "func": "SELECT",
            "source": "otherCards",
            "property": "order",
            "value": 11,
            "collection": "nonTrumpJacks"
          },
          {
            "func": "SELECT",
            "source": "nonTrumpJacks",
            "property": "redOrBlack",
            "value": "black",
            "collection": "wrongColorJacks"
          },
          {
            "func": "COUNT",
            "collection": "wrongColorJacks"
          }
        ]
      }
    ],
    "sortPreExceptionsRoutine": [
      "var trump = ${PROPERTY trump OF trump}",
      "var offJack = 0",
      {
        "func": "IF",
        "operand1": "${trump}",
        "operand2": 1,
        "thenRoutine": [
          "var offJack = 3"
        ]
      },
      {
        "func": "IF",
        "operand1": "${trump}",
        "operand2": 2,
        "thenRoutine": [
          "var offJack = 4"
        ]
      },
      {
        "func": "IF",
        "operand1": "${trump}",
        "operand2": 3,
        "thenRoutine": [
          "var offJack = 1"
        ]
      },
      {
        "func": "IF",
        "operand1": "${trump}",
        "operand2": 4,
        "thenRoutine": [
          "var offJack = 1"
        ]
      },
      {
        "func": "IF",
        "operand1": "${offJack}",
        "relation": ">",
        "operand2": 0,
        "thenRoutine": [
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "type": "card",
            "property": "order",
            "value": 11,
            "collection": "jacks"
          },
          {
            "func": "SELECT",
            "source": "jacks",
            "property": "suit",
            "value": "${offJack}",
            "collection": "offJack"
          },
          {
            "func": "SET",
            "collection": "offJack",
            "property": "suit",
            "value": "${trump}"
          },
          {
            "func": "SET",
            "collection": "offJack",
            "property": "sortDefault",
            "value": 9.9
          }
        ]
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "type": "card",
        "property": "order",
        "value": 14,
        "collection": "blackJoker"
      },
      {
        "func": "SET",
        "collection": "blackJoker",
        "property": "suit",
        "value": "${trump}"
      },
      {
        "func": "SET",
        "collection": "blackJoker",
        "property": "sortDefault",
        "value": 9.4
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "type": "card",
        "property": "order",
        "value": 15,
        "collection": "redJoker"
      },
      {
        "func": "SET",
        "collection": "redJoker",
        "property": "suit",
        "value": "${trump}"
      },
      {
        "func": "SET",
        "collection": "redJoker",
        "property": "sortDefault",
        "value": 9.5
      }
    ],
    "autoTeam": true,
    "x": -529
  },
  "gameID4": {
    "id": "gameID4",
    "x": -268,
    "y": -211,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortDefault",
    "sort2": "suit",
    "text": "Differenzler Jass",
    "roundsTemp": [
      "Card Points"
    ],
    "settingsArray": [
      [
        "showBidSuit",
        false
      ],
      [
        "showBidValue",
        true
      ],
      [
        "showTricks",
        false
      ],
      [
        "turnDirection",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        9
      ],
      [
        "hideCards",
        4
      ],
      [
        "seatCount",
        4
      ],
      [
        "tempScore",
        true
      ]
    ],
    "displayArray": [
      [
        "playerAidButton",
        1
      ],
      [
        "suitDice",
        1
      ]
    ],
    "scoreSystem": [
      [],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        14,
        10,
        20,
        3,
        4
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        10,
        2,
        3,
        4
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        8,
        0,
        10,
        2,
        3,
        4
      ]
    ],
    "gameID": true,
    "hintText": "\"You can use the dice in the upper right to select a random trump.\\a\\a Use bid widget to predict score. Secret bidding can be turned on as an option using the Visuals & Other options button.\\a\\a After round is over, press Add Card Points button. Press Transfer Score button and the difference between the predicted score and the actual score for each player is transferred to the main scoreboard. If needed because playing with a variation of the basic rules, adjust score on the main scoreboard using the red/green +/- buttons.\"",
    "trumpIndicator": true,
    "sortExceptionsRoutine": [
      "var trump = ${PROPERTY trump OF trump}",
      "var isNum = ${trump} / 1",
      {
        "func": "IF",
        "operand1": "${isNum}",
        "operand2": "${trump}",
        "thenRoutine": [
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "suit",
            "value": "${trump}",
            "collection": "trumpSuit"
          },
          {
            "func": "IF",
            "condition": "${reverseSort}",
            "thenRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortJassTrump"
              }
            ],
            "elseRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortJassTrump",
                "reverse": "${PROPERTY sortDirection OF $seatID}"
              }
            ]
          },
          {
            "func": "SORT",
            "key": "suit"
          }
        ]
      }
    ],
    "scoreExceptionsRoutine": [
      "var result = ${points}",
      "var last = ${PROPERTY lastPressedBy OF takeButton}",
      {
        "func": "IF",
        "operand1": "${value}",
        "operand2": "${last}",
        "thenRoutine": [
          "var result = ${result} + 5"
        ]
      }
    ],
    "transferExceptionsRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Transferring score ..."
          },
          {
            "type": "subtitle",
            "text": "This will transfer the difference between the players' actual scores and predicted scores to the main scoreboard. Are you sure you want to continue?"
          }
        ],
        "confirmButtonText": "Yes",
        "cancelButtonText": "No"
      },
      {
        "func": "FOREACH",
        "in": "${PROPERTY _totals OF tempScoreboard}",
        "loopRoutine": [
          "var seat = 'seat' + ${key}",
          "var bidValue = 'bidValue' + ${key}",
          "var predict = ${PROPERTY text OF $bidValue}",
          "var value = ${value} - ${predict}",
          "var value = abs ${value}",
          {
            "func": "SCORE",
            "mode": "set",
            "property": "score",
            "round": "${PROPERTY currentRound OF scoreboard}",
            "seats": "${seat}",
            "value": "${value}"
          }
        ]
      }
    ],
    "transferButtonReturn": false
  },
  "gameID5": {
    "id": "gameID5",
    "x": -529,
    "y": 1012,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortDefault",
    "sort2": "suit",
    "text": "Czech Taroky",
    "messageArray": [
      {
        "value": "Default",
        "text": "Click here to choose message"
      },
      {
        "value": "Základni povinnost",
        "text": "Základni povinnost"
      },
      {
        "value": "Druhá povinnost",
        "text": "Druhá povinnost"
      },
      {
        "value": "Trojka",
        "text": "Trojka"
      },
      {
        "value": "Sólo",
        "text": "Sólo"
      }
    ],
    "roundsTemp": [
      "Card Points",
      "Contract",
      "Annoucement"
    ],
    "settingsArray": [
      [
        "showBidSuit",
        true
      ],
      [
        "showTricks",
        false
      ],
      [
        "showDiscard",
        true
      ],
      [
        "turnDirection",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        12
      ],
      [
        "deckType",
        2
      ],
      [
        "seatCount",
        4
      ],
      [
        "tempScore",
        true
      ]
    ],
    "scoreSystem": [
      [
        0,
        0.333,
        1.333,
        2.333,
        3.333,
        4.333
      ]
    ],
    "gameID": true,
    "hintText": "\"You may use Message button to announce contracts. Click on small red, black, and white letter icons to set teams once known.\\a\\a At end of round, be sure all talon cards are in the appropriate player holders.\\a\\aPress Add Card Points button to calculate the card points. The Contract and Annoucement rows are provided as an aid, but no automatic calculation takes place. Use the slider to highlight the Contract row on the small scoreboard and enter values (reflecting the payment per point above 35) using the green/red +/- buttons at top left of screen.\\a\\a Use slider to select Annoucement row and enter values.\\a\\a When done, manually calculate scores and return the slider all the way to the top. Then use the green/red +/- buttons to enter scores on the main scoreboard.\"",
    "preSetExceptionsRoutine": [
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "scale",
        "value": 0
      }
    ],
    "displayArray": [
      [
        "transferScoreButton",
        0
      ]
    ]
  },
  "gameID6": {
    "id": "gameID6",
    "y": -203,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortDefault",
    "sort2": "suit",
    "text": "Coiffeur Jass (3P)",
    "messageArray": [
      {
        "value": "Default",
        "text": "Click here to choose message"
      },
      {
        "value": "Obenabe",
        "text": "Obenabe"
      },
      {
        "value": "Undenufe",
        "text": "Undenufe"
      },
      {
        "value": "Slalom",
        "text": "Slalom"
      },
      {
        "value": "Gustav",
        "text": "Gustav"
      },
      {
        "value": "Joker1",
        "text": "Joker1"
      },
      {
        "value": "Joker2",
        "text": "Joker2"
      }
    ],
    "roundsTemp": [
      "Card Points"
    ],
    "displayArray": [
      [
        "playerAidButton",
        1
      ],
      [
        "reverseSortButton",
        1
      ]
    ],
    "settingsArray": [
      [
        "showBidValue",
        false
      ],
      [
        "showTricks",
        false
      ],
      [
        "turnDirection",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        12
      ],
      [
        "hideCards",
        4
      ],
      [
        "seatCount",
        3
      ],
      [
        "tempScore",
        true
      ]
    ],
    "scoreSystem": [
      [],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        14,
        10,
        20,
        3,
        4
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        10,
        2,
        3,
        4
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        8,
        0,
        10,
        2,
        3,
        4
      ]
    ],
    "gameID": true,
    "hintText": "\"Scorekeeping is mostly automated so long as players make bids using the suit bid buttons (for suit contracts) and the message button (for other contracts).\\a\\aTo calculate points for the round, any player can press Add Card Points. Verify total in small bottom scoreboard. Then ensure Trump indicator is correctly set. NOTE: if bidding a joker contract in a suit, the Trump indicator must be changed to No Trumps before the next step.\\a\\aThe player with the contract then presses the Transfer Score button and the score is moved to the appropriate cell in the main scoreboard.\\a\\a Finally, once all 3 players have completed a contract, any player can press the Convert button to create the sticks and potatoes used as the final score. Ties are resolved randomly.\\a\\a An up/down arrow is available by presing the Actions button and selecting Show Arrow. When playing a Slalom contract, the arrow reverses direction every time the Take button is pressed (but NOT if completing a joker contract).\\a\\a The Sort button will correctly sort Jacks and Nine of trumps once the Trump indicator is set, but the button has to be pressed again.\\a\\a The Reverse Sort button is useful when playing a contract when the rank value of the cards is reversed (so 6 is high and Ace is low).\"",
    "trumpIndicator": true,
    "preSetExceptionsRoutine": [
      "var coiffeur3P = ${PROPERTY preSet OF preSetsButton} == '6'",
      "var coiffeur4P = ${PROPERTY preSet OF preSetsButton} == '12'",
      "var coiffeur = ${coiffeur3P} || ${coiffeur4P}",
      {
        "func": "IF",
        "condition": "${coiffeur}",
        "thenRoutine": [
          {
            "func": "SELECT",
            "property": "id",
            "value": "scoreboard"
          },
          {
            "func": "SET",
            "property": "rounds",
            "value": "${PROPERTY roundsCoiffeur OF scoreboard}"
          },
          {
            "func": "SET",
            "property": "css",
            "value": "${PROPERTY cssCoiffeur OF scoreboard}"
          },
          {
            "func": "SET",
            "property": "showTotals",
            "value": false
          },
          {
            "func": "SET",
            "collection": [
              "scoreboard3"
            ],
            "property": "scale",
            "value": 1
          }
        ]
      }
    ],
    "takeRoutine": [
      {
        "func": "IF",
        "operand1": "${PROPERTY message OF bids}",
        "operand2": "Slalom",
        "thenRoutine": [
          {
            "func": "CLICK",
            "collection": [
              "arrow"
            ]
          }
        ]
      }
    ],
    "sortExceptionsRoutine": [
      "var trump = ${PROPERTY trump OF trump}",
      "var isNum = ${trump} / 1",
      {
        "func": "IF",
        "operand1": "${isNum}",
        "operand2": "${trump}",
        "thenRoutine": [
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "suit",
            "value": "${trump}",
            "collection": "trumpSuit"
          },
          {
            "func": "IF",
            "condition": "${reverseSort}",
            "thenRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortJassTrump"
              }
            ],
            "elseRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortJassTrump",
                "reverse": "${PROPERTY sortDirection OF $seatID}"
              }
            ]
          },
          {
            "func": "SORT",
            "key": "suit"
          }
        ]
      }
    ],
    "transferButtonReturn": false,
    "transferExceptionsRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Transferring score ..."
          },
          {
            "type": "subtitle",
            "text": "This will transfer the score in the temporary scoreboard to the main one. (1) Only the player with the contract should use this buttons. (2) This only works if the activity log reflects the player's contract. (3) Only press it once or the Match totals may change each press. Are you sure you want to continue?"
          }
        ],
        "confirmButtonText": "Yes",
        "cancelButtonText": "No"
      },
      "var contract = ${PROPERTY message OF bids}",
      {
        "func": "IF",
        "condition": "${contract}",
        "thenRoutine": [
          "var round = ${PROPERTY coiffeurContractArray} indexOf ${contract}",
          "var total = ${PROPERTY _totals OF tempScoreboard}",
          "var total = ${total.$seatIndex}",
          {
            "func": "SCORE",
            "seats": [
              "${seatID}"
            ],
            "round": "${round}",
            "value": "${total}"
          }
        ]
      },
      {
        "func": "COUNT",
        "holder": [
          "holder${seatIndex}",
          "backHolder${seatIndex}",
          "capturedHolder${seatIndex}"
        ]
      },
      {
        "func": "IF",
        "operand1": "${COUNT}",
        "operand2": 36,
        "thenRoutine": [
          {
            "func": "SCORE",
            "mode": "inc",
            "seats": [
              "${seatID}"
            ],
            "round": "${round}",
            "value": 100
          },
          {
            "func": "SCORE",
            "mode": "dec",
            "seats": [
              "seat1",
              "seat3",
              "seat7"
            ],
            "round": 11,
            "value": 1
          },
          {
            "func": "SCORE",
            "mode": "inc",
            "seats": [
              "${seatID}"
            ],
            "round": 11,
            "value": 3
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${COUNT}",
        "operand2": 0,
        "thenRoutine": [
          {
            "func": "SCORE",
            "mode": "inc",
            "seats": [
              "seat1",
              "seat3",
              "seat7"
            ],
            "round": 11,
            "value": 1
          },
          {
            "func": "SCORE",
            "mode": "dec",
            "seats": [
              "${seatID}"
            ],
            "round": 11,
            "value": 3
          }
        ]
      }
    ],
    "coiffeurContractArray": [
      "null",
      "spades",
      "clubs",
      "diamonds",
      "hearts",
      "Obenabe",
      "Undenufe",
      "Slalom",
      "Gustav",
      "Joker1",
      "Joker2"
    ],
    "scoreExceptionsRoutine": [
      "var result = ${points}",
      "var last = ${PROPERTY lastPressedBy OF takeButton}",
      {
        "func": "IF",
        "operand1": "${value}",
        "operand2": "${last}",
        "thenRoutine": [
          "var result = ${result} + 5"
        ]
      }
    ],
    "playerAidDetail1": "Notes",
    "x": -150,
    "resetRoutine": [
      {
        "func": "FOREACH",
        "range": [
          8
        ],
        "loopRoutine": [
          {
            "func": "SET",
            "collection": [
              "seat${value}"
            ],
            "property": "scoreCoiffeur",
            "value": [
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " "
            ]
          },
          {
            "func": "SET",
            "collection": [
              "seat${value}"
            ],
            "property": "score",
            "value": [
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " "
            ]
          }
        ]
      }
    ]
  },
  "gameID7": {
    "id": "gameID7",
    "x": -547,
    "y": -96,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortDefault",
    "sort2": "suit",
    "text": "Sidi Barrani Jass",
    "messageArray": [
      {
        "value": "Default",
        "text": "Click here to choose message"
      },
      {
        "value": "Obenabe",
        "text": "Obenabe"
      },
      {
        "value": "Undenufe",
        "text": "Undenufe"
      },
      {
        "value": "Slalom",
        "text": "Slalom"
      },
      {
        "value": "Double",
        "text": "Double"
      },
      {
        "value": "Misere",
        "text": "Misere"
      }
    ],
    "roundsTemp": [
      "Card Points",
      "Weis",
      "Stock",
      "All Tricks",
      "Bid"
    ],
    "settingsArray": [
      [
        "showTricks",
        false
      ],
      [
        "turnDirection",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        9
      ],
      [
        "hideCards",
        4
      ],
      [
        "seatCount",
        4
      ],
      [
        "teamScore",
        true
      ],
      [
        "tempScore",
        true
      ]
    ],
    "scoreSystem": [
      [],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        14,
        10,
        20,
        3,
        4
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        10,
        2,
        3,
        4
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        8,
        0,
        10,
        2,
        3,
        4
      ]
    ],
    "gameID": true,
    "hintText": "\"Declare contract using bid widgets or Message button. \\a\\a When appropriate, record Weis and Stock in the small scoreboard using the scrollbar to highlight the row and press the red/green +/- buttons.\\a\\a After round ends, press Add Card Points button. Five points are automatically added to winner of last trick. The All Tricks bonus is calculated automatically. The contract winner and bid (including double if used) is calculated automatically.\\a\\a Press Transfer Score button to move scores from temporary scoreboard to main scoreboard.\"",
    "trumpIndicator": true,
    "takeRoutine": [
      {
        "func": "IF",
        "operand1": "${PROPERTY message OF bids}",
        "operand2": "Slalom",
        "thenRoutine": [
          {
            "func": "CLICK",
            "collection": [
              "arrow"
            ]
          }
        ]
      }
    ],
    "sortExceptionsRoutine": [
      "var trump = ${PROPERTY trump OF trump}",
      "var isNum = ${trump} / 1",
      {
        "func": "IF",
        "operand1": "${isNum}",
        "operand2": "${trump}",
        "thenRoutine": [
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "suit",
            "value": "${trump}",
            "collection": "trumpSuit"
          },
          {
            "func": "IF",
            "condition": "${reverseSort}",
            "thenRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortJassTrump"
              }
            ],
            "elseRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortJassTrump",
                "reverse": "${PROPERTY sortDirection OF $seatID}"
              }
            ]
          },
          {
            "func": "SORT",
            "key": "suit"
          }
        ]
      }
    ],
    "scoreExceptionsRoutine": [
      "// Add 5 points to player taking last trick",
      "var result = ${points}",
      "var last = ${PROPERTY lastPressedBy OF takeButton}",
      {
        "func": "IF",
        "operand1": "${value}",
        "operand2": "${last}",
        "thenRoutine": [
          "var result = ${result} + 5"
        ]
      },
      "// Add 100 points to team that takes all 9 tricks",
      "var tricksS = parseFloat ${PROPERTY tricks OF seat1}",
      "var tricksW = parseFloat ${PROPERTY tricks OF seat3}",
      "var tricksN = parseFloat ${PROPERTY tricks OF seat5}",
      "var tricksE = parseFloat ${PROPERTY tricks OF seat5}",
      "var allNS = ${tricksS} + ${tricksN}",
      "var allEW = ${tricksE} + ${tricksW}",
      "var allNS = ${allNS} == 9",
      "var allEW = ${allEW} == 9",
      {
        "func": "IF",
        "condition": "${allNS}",
        "thenRoutine": [
          {
            "func": "SCORE",
            "mode": "set",
            "property": "tempScore",
            "round": 4,
            "seats": "seat1",
            "value": "100"
          }
        ],
        "elseRoutine": [
          {
            "func": "IF",
            "condition": "${allEW}",
            "thenRoutine": [
              {
                "func": "SCORE",
                "mode": "set",
                "property": "tempScore",
                "round": 4,
                "seats": "seat3",
                "value": "100"
              }
            ]
          }
        ]
      },
      "// Determine contract winner",
      "var declarer = ${PROPERTY text OF bidWinner}",
      {
        "func": "SELECT",
        "type": "seat",
        "property": "player",
        "value": "${declarer}"
      },
      {
        "func": "GET",
        "property": "index"
      },
      {
        "func": "IF",
        "operand1": "${index}",
        "operand2": 1,
        "thenRoutine": [
          "var bidTeam = 'NS'"
        ],
        "elseRoutine": [
          {
            "func": "IF",
            "operand1": "${index}",
            "operand2": 5,
            "thenRoutine": [
              "var bidTeam = 'NS'"
            ],
            "elseRoutine": [
              "var bidTeam = 'EW'"
            ]
          }
        ]
      },
      {
        "func": "GET",
        "collection": [
          "bidValue${index}"
        ],
        "property": "text",
        "variable": "bidValue"
      },
      "var totalS = ${PROPERTY tempScore OF seat1}",
      "var totalS0 = ${totalS.0}",
      "var totalS3 = ${totalS.3}",
      "var totalS = ${totalS0} + ${totalS3}",
      "var totalN = ${PROPERTY tempScore OF seat5}",
      "var totalN0 = ${totalN.0}",
      "var totalN3 = ${totalN.3}",
      "var totalN = ${totalN0} + ${totalN3}",
      "var totalNS = ${totalN} + ${totalS}",
      "var totalW = ${PROPERTY tempScore OF seat3}",
      "var totalW0 = ${totalW.0}",
      "var totalW3 = ${totalW.3}",
      "var totalW = ${totalW0} + ${totalW3}",
      "var totalE = ${PROPERTY tempScore OF seat7}",
      "var totalE0 = ${totalE.0}",
      "var totalE3 = ${totalE.3}",
      "var totalE = ${totalE0} + ${totalE3}",
      "var totalEW = ${totalE} + ${totalW}",
      "var doubleValue = ${bidValue} * ${PROPERTY double OF bids}",
      {
        "func": "IF",
        "operand1": "${bidTeam}",
        "operand2": "NS",
        "thenRoutine": [
          {
            "func": "IF",
            "operand1": "${totalNS}",
            "relation": ">=",
            "operand2": "${bidValue}",
            "thenRoutine": [
              "\\IF NS is declarer and won contract",
              {
                "func": "SCORE",
                "mode": "set",
                "property": "tempScore",
                "round": 5,
                "seats": "seat1",
                "value": "${doubleValue}"
              },
              {
                "func": "SCORE",
                "mode": "set",
                "property": "tempScore",
                "round": 5,
                "seats": "seat3",
                "value": 0
              }
            ],
            "elseRoutine": [
              "\\IF NS is declarer and lost contract",
              {
                "func": "SCORE",
                "mode": "set",
                "property": "tempScore",
                "round": 5,
                "seats": "seat1",
                "value": 0
              },
              {
                "func": "SCORE",
                "mode": "set",
                "property": "tempScore",
                "round": 5,
                "seats": "seat3",
                "value": "${doubleValue}"
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${bidTeam}",
        "operand2": "EW",
        "thenRoutine": [
          "\\IF EW is declarer and won contract",
          {
            "func": "IF",
            "operand1": "${totalEW}",
            "relation": ">=",
            "operand2": "${bidValue}",
            "thenRoutine": [
              {
                "func": "SCORE",
                "mode": "set",
                "property": "tempScore",
                "round": 5,
                "seats": "seat3",
                "value": "${doubleValue}"
              },
              {
                "func": "SCORE",
                "mode": "set",
                "property": "tempScore",
                "round": 5,
                "seats": "seat1",
                "value": 0
              }
            ],
            "elseRoutine": [
              "\\IF EW is declarer and lost contract",
              {
                "func": "SCORE",
                "mode": "set",
                "property": "tempScore",
                "round": 5,
                "seats": "seat3",
                "value": 0
              },
              {
                "func": "SCORE",
                "mode": "set",
                "property": "tempScore",
                "round": 5,
                "seats": "seat1",
                "value": "${doubleValue}"
              }
            ]
          }
        ]
      }
    ],
    "transferButtonReturn": false,
    "transferExceptionsRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Transferring score ..."
          },
          {
            "type": "subtitle",
            "text": "This will determine the team that won the contract and transfer the scores in the temporary scoreboard to the main one. This will transfer the total from the temporary scoreboard (which includes the doubled bid, if appropriate) to the main scoreboard. Are you sure you want to continue?"
          }
        ],
        "confirmButtonText": "Yes",
        "cancelButtonText": "No"
      },
      {
        "func": "FOREACH",
        "in": "${PROPERTY _totals OF tempScoreboard}",
        "loopRoutine": [
          {
            "func": "IF",
            "operand1": "${key}",
            "operand2": 2,
            "thenRoutine": [
              "var key = 3"
            ]
          },
          "var seat = 'seat' + ${key}",
          {
            "func": "SCORE",
            "mode": "set",
            "property": "score",
            "round": "${PROPERTY currentRound OF scoreboard}",
            "seats": "${seat}",
            "value": "${value}"
          }
        ]
      }
    ],
    "displayArray": [
      [
        "playerAidButton",
        1
      ]
    ]
  },
  "gameID8": {
    "id": "gameID8",
    "y": -95,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortAceTen",
    "sort2": "suit",
    "text": "Coinche",
    "messageArray": [
      {
        "value": "Default",
        "text": "Click here to choose message"
      },
      {
        "value": "Pass",
        "text": "Pass"
      },
      {
        "value": "Coincher",
        "text": "Coincher"
      },
      {
        "value": "Surcoincher",
        "text": "Surcoincher"
      },
      {
        "value": "Capot",
        "text": "Capot/Slam"
      },
      {
        "value": "Générale",
        "text": "Générale"
      }
    ],
    "roundsTemp": [
      "Card Points",
      "Bid",
      "Belote",
      "Carre/Sequence"
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        8
      ],
      [
        "hideCards",
        6
      ],
      [
        "seatCount",
        4
      ],
      [
        "teamScore",
        true
      ],
      [
        "tempScore",
        true
      ]
    ],
    "settingsArray": [
      [
        "showTricks",
        false
      ],
      [
        "turnDirection",
        false
      ]
    ],
    "scoreSystem": [
      [
        0,
        6,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        9,
        5,
        14,
        1,
        3
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        14,
        10,
        20,
        3,
        4
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        10,
        2,
        3,
        4
      ],
      [
        0,
        19,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        10,
        2,
        3,
        4
      ]
    ],
    "gameID": true,
    "hintText": "\"After round is over, press Add Card Points button. Ten points for the player taking the last trick are automatically added. Other lines must be manually completed in the small scoreboard using the scrollbar to highlight the row and press the red/green +/- buttons.\\a\\a When ready to enter final score on main scoreboard, return scrollbar to top and use red/green +/- buttons.\"",
    "preSetExceptionsRoutine": [
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "faces",
        "value": "${PROPERTY trumpFaces}"
      }
    ],
    "sortExceptionsRoutine": [
      "var trump = ${PROPERTY trump OF trump}",
      "var isNum = ${trump} / 1",
      {
        "func": "IF",
        "operand1": "${isNum}",
        "operand2": "${trump}",
        "thenRoutine": [
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "suit",
            "value": "${trump}",
            "collection": "trumpSuit"
          },
          {
            "func": "IF",
            "condition": "${reverseSort}",
            "thenRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortCoincheTrump"
              }
            ],
            "elseRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortCoincheTrump",
                "reverse": "${PROPERTY sortDirection OF $seatID}"
              }
            ]
          },
          {
            "func": "SORT",
            "key": "suit"
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY text OF trump}",
        "operand2": "All\nTrump",
        "thenRoutine": [
          {
            "func": "IF",
            "condition": "${reverseSort}",
            "thenRoutine": [
              {
                "func": "SORT",
                "key": "sortCoincheTrump"
              }
            ],
            "elseRoutine": [
              {
                "func": "SORT",
                "key": "sortCoincheTrump",
                "reverse": "${PROPERTY sortDirection OF $seatID}"
              }
            ]
          },
          {
            "func": "SORT",
            "key": "suit"
          }
        ]
      }
    ],
    "trumpIndicator": true,
    "scoreExceptionsRoutine": [
      "var result = ${points}",
      "var last = ${PROPERTY lastPressedBy OF takeButton}",
      {
        "func": "IF",
        "operand1": "${value}",
        "operand2": "${last}",
        "thenRoutine": [
          "var result = ${result} + 10"
        ]
      }
    ],
    "displayArray": [
      [
        "playerAidButton",
        1
      ],
      [
        "transferScoreButton",
        0
      ]
    ],
    "x": -410,
    "customFaceCount": 7
  },
  "pawnToken": {
    "id": "pawnToken",
    "x": 1310,
    "y": 145,
    "width": 37,
    "height": 67,
    "css": "border-radius: 40% 40% 50% 50%/ 80% 80% 10% 10%; ",
    "image": "i/game-pieces/3D/Pawn-3D.svg",
    "svgReplaces": {
      "#primaryColor": "color",
      "#borderColor": "borderColor",
      "#borderWidth": "borderWidth"
    },
    "borderColor": "black",
    "borderWidth": 1,
    "color": "#a9c6e8",
    "resetProperties": {
      "x": 1310,
      "y": 145
    }
  },
  "suitDice": {
    "type": "dice",
    "id": "suitDice",
    "x": 1504,
    "y": 139,
    "movable": true,
    "movableInEdit": false,
    "pipSymbols": false,
    "shape3d": true,
    "activeFaceChangeRoutine": [
      {
        "func": "IF",
        "operand1": "${PROPERTY activeFace}",
        "operand2": 0,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "trump"
            ],
            "property": "customFace",
            "value": 1
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY activeFace}",
        "operand2": 1,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "trump"
            ],
            "property": "customFace",
            "value": 2
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY activeFace}",
        "operand2": 2,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "trump"
            ],
            "property": "customFace",
            "value": 3
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY activeFace}",
        "operand2": 3,
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "trump"
            ],
            "property": "customFace",
            "value": 4
          }
        ]
      }
    ],
    "rollCount": 165,
    "svgReplaces": {
      "currentColor": "deckSuitColor"
    },
    "activeFace": 3,
    "scale": 0,
    "faces": [
      {
        "image": "i/icons/clubs.svg"
      },
      {
        "image": "i/icons/diamonds.svg",
        "deckSuitColor": "#e50932"
      },
      {
        "image": "i/icons/spades.svg"
      },
      {
        "image": "i/icons/hearts.svg",
        "deckSuitColor": "#e50932"
      }
    ]
  },
  "itemsButton": {
    "type": "button",
    "id": "itemsButton",
    "x": 1101,
    "y": 916,
    "movableInEdit": false,
    "css": {
      "border-radius": "17px 0px 0px 17px",
      "writing-mode": "vertical-lr"
    },
    "clickRoutine": [
      "var boxArray = ${PROPERTY onlyVisibleForSeat OF itemsBox}",
      "var index = ${boxArray} indexOf ${seatID}",
      {
        "func": "IF",
        "operand1": "${index}",
        "relation": ">=",
        "operand2": 0,
        "thenRoutine": [
          "var boxArray = remove ${index}"
        ],
        "elseRoutine": [
          "var boxArray = push ${seatID}"
        ]
      },
      {
        "func": "SET",
        "collection": [
          "itemsBox"
        ],
        "property": "onlyVisibleForSeat",
        "value": "${boxArray}"
      }
    ],
    "width": 24,
    "text": "Items",
    "rotation": 180,
    "layer": -4
  },
  "itemsBox": {
    "id": "itemsBox",
    "x": 498,
    "width": 600,
    "height": 405,
    "movableInEdit": false,
    "css": {
      "border": "1px solid black",
      "background": "lightgrey"
    },
    "layer": 6,
    "y": 591,
    "onlyVisibleForSeat": [],
    "type": "holder",
    "dropTarget": {
      "itemMarker": true
    },
    "enterRoutine": [
      {
        "func": "DELETE",
        "collection": "child"
      }
    ]
  },
  "itemsRecallAllButton": {
    "type": "button",
    "id": "itemsRecallAllButton",
    "parent": "itemsBox",
    "fixedParent": true,
    "x": 3,
    "y": 377,
    "width": 83,
    "height": 30,
    "movableInEdit": false,
    "css": {
      "font-size": "14px"
    },
    "clickRoutine": [
      {
        "func": "SELECT",
        "property": "item",
        "relation": "!=",
        "value": null
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "ownedBy",
        "relation": "!=",
        "value": null
      },
      {
        "func": "DELETE"
      }
    ],
    "text": "Recall All"
  },
  "itemsRecallMineButton": {
    "type": "button",
    "id": "itemsRecallMineButton",
    "parent": "itemsBox",
    "fixedParent": true,
    "x": 515,
    "y": 377,
    "width": 83,
    "height": 30,
    "movableInEdit": false,
    "css": {
      "font-size": "14px"
    },
    "text": "Recall Mine",
    "clickRoutine": [
      {
        "func": "SELECT",
        "property": "item",
        "relation": "!=",
        "value": null
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "ownedBy",
        "value": "${playerName}"
      },
      {
        "func": "DELETE"
      }
    ]
  },
  "itemsHolder1": {
    "type": "holder",
    "id": "itemsHolder1",
    "parent": "itemsBox",
    "fixedParent": true,
    "x": 10,
    "y": 12,
    "width": 50,
    "height": 50,
    "classes": "transparent",
    "dropTarget": {
      "item": 1
    },
    "enterRoutine": [
      {
        "func": "SET",
        "collection": "child",
        "property": "color",
        "value": "#fcf0d4"
      },
      {
        "func": "SET",
        "collection": "child",
        "property": "color3",
        "value": "#f8dd9f"
      },
      {
        "func": "SET",
        "collection": "child",
        "property": "color2",
        "value": "#000000"
      },
      {
        "func": "SET",
        "collection": "child",
        "property": "clickable",
        "value": false
      },
      {
        "func": "SET",
        "collection": "child",
        "property": "ownedBy",
        "value": null
      },
      {
        "func": "SET",
        "collection": "child",
        "property": "dragging",
        "value": null
      },
      {
        "func": "SET",
        "collection": "child",
        "property": "layer",
        "value": 10
      },
      {
        "func": "SELECT",
        "property": "parent",
        "value": "${thisID}"
      },
      {
        "func": "COUNT"
      },
      {
        "func": "IF",
        "operand1": 1,
        "relation": "<",
        "operand2": "${COUNT}",
        "thenRoutine": [
          {
            "func": "DELETE",
            "collection": "child"
          }
        ]
      }
    ],
    "leaveRoutine": [
      "var color2 = colorContrast ${playerColor}",
      "var color3 = colorContrast ${playerColor} 0.2",
      {
        "func": "SET",
        "collection": "child",
        "property": "ownedBy",
        "value": "${playerName}"
      },
      {
        "func": "SET",
        "collection": "child",
        "property": "color",
        "value": "${playerColor}"
      },
      {
        "func": "SET",
        "collection": "child",
        "property": "color2",
        "value": "${color2}"
      },
      {
        "func": "SET",
        "collection": "child",
        "property": "color3",
        "value": "${color3}"
      },
      {
        "func": "SET",
        "collection": "child",
        "property": "clickable",
        "value": true
      },
      {
        "func": "SELECT",
        "property": "parent",
        "value": "${thisID}"
      },
      {
        "func": "COUNT"
      },
      {
        "func": "IF",
        "operand1": 0,
        "relation": "==",
        "operand2": "${COUNT}",
        "thenRoutine": [
          {
            "func": "CLONE",
            "source": "child"
          },
          {
            "func": "SET",
            "property": "parent",
            "value": "${thisID}"
          },
          {
            "func": "MOVE",
            "from": "${thisID}",
            "to": "${thisID}"
          }
        ]
      },
      "var boxArray = ${PROPERTY onlyVisibleForSeat OF itemsBox}",
      "var index = ${boxArray} indexOf ${seatID}",
      {
        "func": "IF",
        "operand1": "${index}",
        "relation": ">=",
        "operand2": 0,
        "thenRoutine": [
          "var boxArray = remove ${index}"
        ]
      },
      {
        "func": "SET",
        "collection": [
          "itemsBox"
        ],
        "property": "onlyVisibleForSeat",
        "value": "${boxArray}"
      }
    ]
  },
  "itemsHolder2": {
    "inheritFrom": {
      "itemsHolder1": "*"
    },
    "type": "holder",
    "id": "itemsHolder2",
    "x": 110,
    "y": 11,
    "dropTarget": {
      "item": 2
    },
    "parent": "itemsBox"
  },
  "itemsHolder3": {
    "inheritFrom": {
      "itemsHolder1": "*"
    },
    "type": "holder",
    "id": "itemsHolder3",
    "x": 210,
    "y": 11,
    "dropTarget": {
      "item": 3
    },
    "parent": "itemsBox"
  },
  "itemsHolder4": {
    "inheritFrom": {
      "itemsHolder1": "*"
    },
    "type": "holder",
    "id": "itemsHolder4",
    "x": 310,
    "y": 11,
    "dropTarget": {
      "item": 4
    },
    "parent": "itemsBox"
  },
  "itemsHolder5": {
    "inheritFrom": {
      "itemsHolder1": "*"
    },
    "type": "holder",
    "id": "itemsHolder5",
    "x": 410,
    "y": 11,
    "dropTarget": {
      "item": 5
    },
    "dropOffsetY": -15,
    "dropOffsetX": 15,
    "parent": "itemsBox"
  },
  "itemsHolder6": {
    "type": "holder",
    "id": "itemsHolder6",
    "x": 510,
    "y": 12,
    "dropOffsetX": -4,
    "dropOffsetY": -4,
    "dropTarget": {
      "item": 6
    },
    "inheritFrom": {
      "itemsHolder1": "*"
    },
    "parent": "itemsBox"
  },
  "itemsHolder7": {
    "type": "holder",
    "id": "itemsHolder7",
    "x": 10,
    "y": 112,
    "width": 100,
    "dropTarget": {
      "item": 7
    },
    "inheritFrom": {
      "itemsHolder1": "*"
    },
    "dropOffsetY": 8,
    "parent": "itemsBox"
  },
  "crowDeck": {
    "type": "deck",
    "id": "crowDeck",
    "cardTypes": {
      "0 crow": {
        "suitImage": "/i/icons/auto_awesome.svg",
        "suitColor": "#000000",
        "fontColor": "#000",
        "suit": 0,
        "order": 15,
        "rank": "",
        "sortKentucky": 1,
        "sortState": -10,
        "sortDefault": 0,
        "sortSecretAgent": 15
      },
      "-5 auction": {
        "suitImage": "/assets/-1568599145_166",
        "suitColor": "#000000",
        "suitColor2": "#00000040",
        "fontColor": "#fff",
        "suit": 5,
        "order": 15,
        "rank": -5,
        "sortDefault": 0
      },
      "x2 auction": {
        "suitImage": "/assets/-1568599145_166",
        "suitColor": "#000000",
        "suitColor2": "#00000040",
        "fontColor": "#fff",
        "suit": 5,
        "order": 16,
        "rank": "x2",
        "sortDefault": 0
      },
      "ally auction": {
        "suitImage": "/assets/-1433824543_1258",
        "suitColor": "#00000040",
        "suitColor2": "#ffffff",
        "fontColor": "#000",
        "suit": 5,
        "order": 17,
        "rank": "A",
        "sortDefault": 0
      },
      "1 red": {
        "suitImage": "/i/icons/hearts.svg",
        "suitColor": "#cc79a7",
        "suitColor2": "#cc79a740",
        "fontColor": "#000",
        "suit": 1,
        "order": 1,
        "rank": 1,
        "sortKentucky": 3,
        "sortState": 1,
        "sortDefault": 1,
        "sortSecretAgent": 15
      },
      "2 red": {
        "suitImage": "/i/icons/hearts.svg",
        "suitColor": "#cc79a7",
        "suitColor2": "#cc79a740",
        "fontColor": "#000",
        "suit": 1,
        "order": 2,
        "rank": 2,
        "sortState": 2,
        "sortDefault": 2
      },
      "3 red": {
        "suitImage": "/i/icons/hearts.svg",
        "suitColor": "#cc79a7",
        "suitColor2": "#cc79a740",
        "fontColor": "#000",
        "suit": 1,
        "order": 3,
        "rank": 3,
        "sortState": 3,
        "sortDefault": 3
      },
      "4 red": {
        "suitImage": "/i/icons/hearts.svg",
        "suitColor": "#cc79a7",
        "suitColor2": "#cc79a740",
        "fontColor": "#000",
        "suit": 1,
        "order": 4,
        "rank": 4,
        "sortState": 4,
        "sortDefault": 4
      },
      "5 red": {
        "suitImage": "/i/icons/hearts.svg",
        "suitColor": "#cc79a7",
        "suitColor2": "#cc79a740",
        "fontColor": "#000",
        "suit": 1,
        "order": 5,
        "rank": 5,
        "sortKentucky": 13,
        "sortState": 5,
        "sortDefault": 5
      },
      "6 red": {
        "suitImage": "/i/icons/hearts.svg",
        "suitColor": "#cc79a7",
        "suitColor2": "#cc79a740",
        "fontColor": "#000",
        "suit": 1,
        "order": 6,
        "rank": 6,
        "sortKentucky": 12,
        "sortState": 6,
        "sortDefault": 6
      },
      "7 red": {
        "suitImage": "/i/icons/hearts.svg",
        "suitColor": "#cc79a7",
        "suitColor2": "#cc79a740",
        "fontColor": "#000",
        "suit": 1,
        "order": 7,
        "rank": 7,
        "sortKentucky": 11,
        "sortState": 7,
        "sortDefault": 7
      },
      "8 red": {
        "suitImage": "/i/icons/hearts.svg",
        "suitColor": "#cc79a7",
        "suitColor2": "#cc79a740",
        "fontColor": "#000",
        "suit": 1,
        "order": 8,
        "rank": 8,
        "sortKentucky": 10,
        "sortState": 8,
        "sortDefault": 8
      },
      "9 red": {
        "suitImage": "/i/icons/hearts.svg",
        "suitColor": "#cc79a7",
        "suitColor2": "#cc79a740",
        "fontColor": "#000",
        "suit": 1,
        "order": 9,
        "rank": 9,
        "sortKentucky": 9,
        "sortState": 9,
        "sortDefault": 9
      },
      "10 red": {
        "suitImage": "/i/icons/hearts.svg",
        "suitColor": "#cc79a7",
        "suitColor2": "#cc79a740",
        "fontColor": "#000",
        "suit": 1,
        "order": 10,
        "rank": 10,
        "sortKentucky": 8,
        "sortState": 10,
        "sortDefault": 10
      },
      "11 red": {
        "suitImage": "/i/icons/hearts.svg",
        "suitColor": "#cc79a7",
        "suitColor2": "#cc79a740",
        "fontColor": "#000",
        "suit": 1,
        "order": 11,
        "rank": 11,
        "sortKentucky": 7,
        "sortDefault": 11
      },
      "12 red": {
        "suitImage": "/i/icons/hearts.svg",
        "suitColor": "#cc79a7",
        "suitColor2": "#cc79a740",
        "fontColor": "#000",
        "suit": 1,
        "order": 12,
        "rank": 12,
        "sortKentucky": 6,
        "sortDefault": 12
      },
      "13 red": {
        "suitImage": "/i/icons/hearts.svg",
        "suitColor": "#cc79a7",
        "suitColor2": "#cc79a740",
        "fontColor": "#000",
        "suit": 1,
        "order": 13,
        "rank": 13,
        "sortKentucky": 5,
        "sortDefault": 13
      },
      "14 red": {
        "suitImage": "/i/icons/hearts.svg",
        "suitColor": "#cc79a7",
        "suitColor2": "#cc79a740",
        "fontColor": "#000",
        "suit": 1,
        "order": 14,
        "rank": 14,
        "sortKentucky": 4,
        "sortDefault": 14
      },
      "1 orange": {
        "suitImage": "i/icons/circle.svg",
        "suitColor": "#d55e00",
        "suitColor2": "#d55e0040",
        "fontColor": "#fff",
        "suit": 2,
        "order": 1,
        "rank": 1,
        "sortKentucky": 14,
        "sortState": 1,
        "sortDefault": 1
      },
      "2 orange": {
        "suitImage": "i/icons/circle.svg",
        "suitColor": "#d55e00",
        "suitColor2": "#d55e0040",
        "fontColor": "#fff",
        "suit": 2,
        "order": 2,
        "rank": 2,
        "sortKentucky": 0.5,
        "sortState": 2,
        "sortDefault": 2
      },
      "3 orange": {
        "suitImage": "i/icons/circle.svg",
        "suitColor": "#d55e00",
        "suitColor2": "#d55e0040",
        "fontColor": "#fff",
        "suit": 2,
        "order": 3,
        "rank": 3,
        "sortState": 3,
        "sortDefault": 3
      },
      "4 orange": {
        "suitImage": "i/icons/circle.svg",
        "suitColor": "#d55e00",
        "suitColor2": "#d55e0040",
        "fontColor": "#fff",
        "suit": 2,
        "order": 4,
        "rank": 4,
        "sortState": 4,
        "sortDefault": 4
      },
      "5 orange": {
        "suitImage": "i/icons/circle.svg",
        "suitColor": "#d55e00",
        "suitColor2": "#d55e0040",
        "fontColor": "#fff",
        "suit": 2,
        "order": 5,
        "rank": 5,
        "sortKentucky": 24,
        "sortState": 5,
        "sortDefault": 5
      },
      "6 orange": {
        "suitImage": "i/icons/circle.svg",
        "suitColor": "#d55e00",
        "suitColor2": "#d55e0040",
        "fontColor": "#fff",
        "suit": 2,
        "order": 6,
        "rank": 6,
        "sortKentucky": 23,
        "sortState": 6,
        "sortDefault": 6
      },
      "7 orange": {
        "suitImage": "i/icons/circle.svg",
        "suitColor": "#d55e00",
        "suitColor2": "#d55e0040",
        "fontColor": "#fff",
        "suit": 2,
        "order": 7,
        "rank": 7,
        "sortKentucky": 22,
        "sortState": 7,
        "sortDefault": 7
      },
      "8 orange": {
        "suitImage": "i/icons/circle.svg",
        "suitColor": "#d55e00",
        "suitColor2": "#d55e0040",
        "fontColor": "#fff",
        "suit": 2,
        "order": 8,
        "rank": 8,
        "sortKentucky": 21,
        "sortState": 8,
        "sortDefault": 8
      },
      "9 orange": {
        "suitImage": "i/icons/circle.svg",
        "suitColor": "#d55e00",
        "suitColor2": "#d55e0040",
        "fontColor": "#fff",
        "suit": 2,
        "order": 9,
        "rank": 9,
        "sortKentucky": 20,
        "sortState": 9,
        "sortDefault": 9
      },
      "10 orange": {
        "suitImage": "i/icons/circle.svg",
        "suitColor": "#d55e00",
        "suitColor2": "#d55e0040",
        "fontColor": "#fff",
        "suit": 2,
        "order": 10,
        "rank": 10,
        "sortKentucky": 19,
        "sortState": 10,
        "sortDefault": 10
      },
      "11 orange": {
        "suitImage": "i/icons/circle.svg",
        "suitColor": "#d55e00",
        "suitColor2": "#d55e0040",
        "fontColor": "#fff",
        "suit": 2,
        "order": 11,
        "rank": 11,
        "sortKentucky": 18,
        "sortDefault": 11
      },
      "12 orange": {
        "suitImage": "i/icons/circle.svg",
        "suitColor": "#d55e00",
        "suitColor2": "#d55e0040",
        "fontColor": "#fff",
        "suit": 2,
        "order": 12,
        "rank": 12,
        "sortKentucky": 17,
        "sortDefault": 12
      },
      "13 orange": {
        "suitImage": "i/icons/circle.svg",
        "suitColor": "#d55e00",
        "suitColor2": "#d55e0040",
        "fontColor": "#fff",
        "suit": 2,
        "order": 13,
        "rank": 13,
        "sortKentucky": 16,
        "sortDefault": 13
      },
      "14 orange": {
        "suitImage": "i/icons/circle.svg",
        "suitColor": "#d55e00",
        "suitColor2": "#d55e0040",
        "fontColor": "#fff",
        "suit": 2,
        "order": 14,
        "rank": 14,
        "sortKentucky": 15,
        "sortDefault": 14
      },
      "1 green": {
        "suitImage": "i/icons/square.svg",
        "suitColor": "#009e9b",
        "suitColor2": "#009e9b40",
        "fontColor": "#000",
        "suit": 3,
        "order": 1,
        "rank": 1,
        "sortKentucky": 25,
        "sortState": 1,
        "sortDefault": 1,
        "sortSecretAgent": 15
      },
      "2 green": {
        "suitImage": "i/icons/square.svg",
        "suitColor": "#009e9b",
        "suitColor2": "#009e9b40",
        "fontColor": "#000",
        "suit": 3,
        "order": 2,
        "rank": 2,
        "sortState": 2,
        "sortDefault": 2
      },
      "3 green": {
        "suitImage": "i/icons/square.svg",
        "suitColor": "#009e9b",
        "suitColor2": "#009e9b40",
        "fontColor": "#000",
        "suit": 3,
        "order": 3,
        "rank": 3,
        "sortState": 3,
        "sortDefault": 3
      },
      "4 green": {
        "suitImage": "i/icons/square.svg",
        "suitColor": "#009e9b",
        "suitColor2": "#009e9b40",
        "fontColor": "#000",
        "suit": 3,
        "order": 4,
        "rank": 4,
        "sortState": 4,
        "sortDefault": 4
      },
      "5 green": {
        "suitImage": "i/icons/square.svg",
        "suitColor": "#009e9b",
        "suitColor2": "#009e9b40",
        "fontColor": "#000",
        "suit": 3,
        "order": 5,
        "rank": 5,
        "sortKentucky": 35,
        "sortState": 5,
        "sortDefault": 5
      },
      "6 green": {
        "suitImage": "i/icons/square.svg",
        "suitColor": "#009e9b",
        "suitColor2": "#009e9b40",
        "fontColor": "#000",
        "suit": 3,
        "order": 6,
        "rank": 6,
        "sortKentucky": 34,
        "sortState": 6,
        "sortDefault": 6
      },
      "7 green": {
        "suitImage": "i/icons/square.svg",
        "suitColor": "#009e9b",
        "suitColor2": "#009e9b40",
        "fontColor": "#000",
        "suit": 3,
        "order": 7,
        "rank": 7,
        "sortKentucky": 33,
        "sortState": 7,
        "sortDefault": 7
      },
      "8 green": {
        "suitImage": "i/icons/square.svg",
        "suitColor": "#009e9b",
        "suitColor2": "#009e9b40",
        "fontColor": "#000",
        "suit": 3,
        "order": 8,
        "rank": 8,
        "sortKentucky": 32,
        "sortState": 8,
        "sortDefault": 8
      },
      "9 green": {
        "suitImage": "i/icons/square.svg",
        "suitColor": "#009e9b",
        "suitColor2": "#009e9b40",
        "fontColor": "#000",
        "suit": 3,
        "order": 9,
        "rank": 9,
        "sortKentucky": 31,
        "sortState": 9,
        "sortDefault": 9
      },
      "10 green": {
        "suitImage": "i/icons/square.svg",
        "suitColor": "#009e9b",
        "suitColor2": "#009e9b40",
        "fontColor": "#000",
        "suit": 3,
        "order": 10,
        "rank": 10,
        "sortKentucky": 30,
        "sortState": 10,
        "sortDefault": 10
      },
      "11 green": {
        "suitImage": "i/icons/square.svg",
        "suitColor": "#009e9b",
        "suitColor2": "#009e9b40",
        "fontColor": "#000",
        "suit": 3,
        "order": 11,
        "rank": 11,
        "sortKentucky": 29,
        "sortDefault": 11
      },
      "12 green": {
        "suitImage": "i/icons/square.svg",
        "suitColor": "#009e9b",
        "suitColor2": "#009e9b40",
        "fontColor": "#000",
        "suit": 3,
        "order": 12,
        "rank": 12,
        "sortKentucky": 28,
        "sortDefault": 12
      },
      "13 green": {
        "suitImage": "i/icons/square.svg",
        "suitColor": "#009e9b",
        "suitColor2": "#009e9b40",
        "fontColor": "#000",
        "suit": 3,
        "order": 13,
        "rank": 13,
        "sortKentucky": 27,
        "sortDefault": 13
      },
      "14 green": {
        "suitImage": "i/icons/square.svg",
        "suitColor": "#009e9b",
        "suitColor2": "#009e9b40",
        "fontColor": "#000",
        "suit": 3,
        "order": 14,
        "rank": 14,
        "sortKentucky": 26,
        "sortDefault": 14
      },
      "1 yellow": {
        "suitImage": "i/icons/hexagon_vertical.svg",
        "suitColor": "#f0e442",
        "suitColor2": "#f0e44240",
        "fontColor": "#000",
        "suit": 4,
        "order": 1,
        "rank": 1,
        "sortKentucky": 36,
        "sortState": 1,
        "sortDefault": 1
      },
      "2 yellow": {
        "suitImage": "i/icons/hexagon_vertical.svg",
        "suitColor": "#f0e442",
        "suitColor2": "#f0e44240",
        "fontColor": "#000",
        "suit": 4,
        "order": 2,
        "rank": 2,
        "sortState": 2,
        "sortDefault": 2
      },
      "3 yellow": {
        "suitImage": "i/icons/hexagon_vertical.svg",
        "suitColor": "#f0e442",
        "suitColor2": "#f0e44240",
        "fontColor": "#000",
        "suit": 4,
        "order": 3,
        "rank": 3,
        "sortState": 3,
        "sortDefault": 3
      },
      "4 yellow": {
        "suitImage": "i/icons/hexagon_vertical.svg",
        "suitColor": "#f0e442",
        "suitColor2": "#f0e44240",
        "fontColor": "#000",
        "suit": 4,
        "order": 4,
        "rank": 4,
        "sortState": 4,
        "sortDefault": 4
      },
      "5 yellow": {
        "suitImage": "i/icons/hexagon_vertical.svg",
        "suitColor": "#f0e442",
        "suitColor2": "#f0e44240",
        "fontColor": "#000",
        "suit": 4,
        "order": 5,
        "rank": 5,
        "sortKentucky": 46,
        "sortState": 5,
        "sortDefault": 5
      },
      "6 yellow": {
        "suitImage": "i/icons/hexagon_vertical.svg",
        "suitColor": "#f0e442",
        "suitColor2": "#f0e44240",
        "fontColor": "#000",
        "suit": 4,
        "order": 6,
        "rank": 6,
        "sortKentucky": 45,
        "sortState": 6,
        "sortDefault": 6
      },
      "7 yellow": {
        "suitImage": "i/icons/hexagon_vertical.svg",
        "suitColor": "#f0e442",
        "suitColor2": "#f0e44240",
        "fontColor": "#000",
        "suit": 4,
        "order": 7,
        "rank": 7,
        "sortKentucky": 44,
        "sortState": 7,
        "sortDefault": 7
      },
      "8 yellow": {
        "suitImage": "i/icons/hexagon_vertical.svg",
        "suitColor": "#f0e442",
        "suitColor2": "#f0e44240",
        "fontColor": "#000",
        "suit": 4,
        "order": 8,
        "rank": 8,
        "sortKentucky": 43,
        "sortState": 8,
        "sortDefault": 8
      },
      "9 yellow": {
        "suitImage": "i/icons/hexagon_vertical.svg",
        "suitColor": "#f0e442",
        "suitColor2": "#f0e44240",
        "fontColor": "#000",
        "suit": 4,
        "order": 9,
        "rank": 9,
        "sortKentucky": 42,
        "sortState": 9,
        "sortDefault": 9
      },
      "10 yellow": {
        "suitImage": "i/icons/hexagon_vertical.svg",
        "suitColor": "#f0e442",
        "suitColor2": "#f0e44240",
        "fontColor": "#000",
        "suit": 4,
        "order": 10,
        "rank": 10,
        "sortKentucky": 41,
        "sortState": 10,
        "sortDefault": 10
      },
      "11 yellow": {
        "suitImage": "i/icons/hexagon_vertical.svg",
        "suitColor": "#f0e442",
        "suitColor2": "#f0e44240",
        "fontColor": "#000",
        "suit": 4,
        "order": 11,
        "rank": 11,
        "sortKentucky": 40,
        "sortDefault": 11
      },
      "12 yellow": {
        "suitImage": "i/icons/hexagon_vertical.svg",
        "suitColor": "#f0e442",
        "suitColor2": "#f0e44240",
        "fontColor": "#000",
        "suit": 4,
        "order": 12,
        "rank": 12,
        "sortKentucky": 39,
        "sortDefault": 12
      },
      "13 yellow": {
        "suitImage": "i/icons/hexagon_vertical.svg",
        "suitColor": "#f0e442",
        "suitColor2": "#f0e44240",
        "fontColor": "#000",
        "suit": 4,
        "order": 13,
        "rank": 13,
        "sortKentucky": 38,
        "sortDefault": 13
      },
      "14 yellow": {
        "suitImage": "i/icons/hexagon_vertical.svg",
        "suitColor": "#f0e442",
        "suitColor2": "#f0e44240",
        "fontColor": "#000",
        "suit": 4,
        "order": 14,
        "rank": 14,
        "sortKentucky": 37,
        "sortDefault": 14
      },
      "1 black": {
        "suitImage": "/assets/-1568599145_166",
        "suitColor": "#000000",
        "suitColor2": "#00000040",
        "fontColor": "#fff",
        "suit": 5,
        "order": 1,
        "rank": 1,
        "sortState": 1,
        "sortDefault": 1,
        "sortSecretAgent": 0.1
      },
      "2 black": {
        "suitImage": "/assets/-1568599145_166",
        "suitColor": "#000000",
        "suitColor2": "#00000040",
        "fontColor": "#fff",
        "suit": 5,
        "order": 2,
        "rank": 2,
        "sortState": 2,
        "sortDefault": 2
      },
      "3 black": {
        "suitImage": "/assets/-1568599145_166",
        "suitColor": "#000000",
        "suitColor2": "#00000040",
        "fontColor": "#fff",
        "suit": 5,
        "order": 3,
        "rank": 3,
        "sortState": 3,
        "sortDefault": 3
      },
      "4 black": {
        "suitImage": "/assets/-1568599145_166",
        "suitColor": "#000000",
        "suitColor2": "#00000040",
        "fontColor": "#fff",
        "suit": 5,
        "order": 4,
        "rank": 4,
        "sortState": 4,
        "sortDefault": 4
      },
      "5 black": {
        "suitImage": "/assets/-1568599145_166",
        "suitColor": "#000000",
        "suitColor2": "#00000040",
        "fontColor": "#fff",
        "suit": 5,
        "order": 5,
        "rank": 5,
        "sortState": 5,
        "sortDefault": 5
      },
      "6 black": {
        "suitImage": "/assets/-1568599145_166",
        "suitColor": "#000000",
        "suitColor2": "#00000040",
        "fontColor": "#fff",
        "suit": 5,
        "order": 6,
        "rank": 6,
        "sortState": 6,
        "sortDefault": 6
      },
      "7 black": {
        "suitImage": "/assets/-1568599145_166",
        "suitColor": "#000000",
        "suitColor2": "#00000040",
        "fontColor": "#fff",
        "suit": 5,
        "order": 7,
        "rank": 7,
        "sortState": 7,
        "sortDefault": 7
      },
      "8 black": {
        "suitImage": "/assets/-1568599145_166",
        "suitColor": "#000000",
        "suitColor2": "#00000040",
        "fontColor": "#fff",
        "suit": 5,
        "order": 8,
        "rank": 8,
        "sortState": 8,
        "sortDefault": 8
      },
      "9 black": {
        "suitImage": "/assets/-1568599145_166",
        "suitColor": "#000000",
        "suitColor2": "#00000040",
        "fontColor": "#fff",
        "suit": 5,
        "order": 9,
        "rank": 9,
        "sortState": 9,
        "sortDefault": 9
      },
      "10 black": {
        "suitImage": "/assets/-1568599145_166",
        "suitColor": "#000000",
        "suitColor2": "#00000040",
        "fontColor": "#fff",
        "suit": 5,
        "order": 10,
        "rank": 10,
        "sortState": 10,
        "sortDefault": 10
      },
      "11 black": {
        "suitImage": "/assets/-1568599145_166",
        "suitColor": "#000000",
        "suitColor2": "#00000040",
        "fontColor": "#fff",
        "suit": 5,
        "order": 11,
        "rank": 11,
        "sortDefault": 11
      },
      "12 black": {
        "suitImage": "/assets/-1568599145_166",
        "suitColor": "#000000",
        "suitColor2": "#00000040",
        "fontColor": "#fff",
        "suit": 5,
        "order": 12,
        "rank": 12,
        "sortDefault": 12
      },
      "13 black": {
        "suitImage": "/assets/-1568599145_166",
        "suitColor": "#000000",
        "suitColor2": "#00000040",
        "fontColor": "#fff",
        "suit": 5,
        "order": 13,
        "rank": 13,
        "sortDefault": 13
      },
      "14 black": {
        "suitImage": "/assets/-1568599145_166",
        "suitColor": "#000000",
        "suitColor2": "#00000040",
        "fontColor": "#fff",
        "suit": 5,
        "order": 14,
        "rank": 14,
        "sortDefault": 14
      }
    },
    "faceTemplates": [
      {
        "objects": [
          {
            "type": "image",
            "width": 103,
            "height": 160,
            "color": "transparent",
            "value": "/i/cards-default/2B.svg"
          }
        ]
      },
      {
        "border": 1,
        "radius": 6,
        "objects": [
          {
            "type": "image",
            "width": 103,
            "height": 160,
            "color": "white"
          },
          {
            "type": "image",
            "width": 103,
            "height": 160,
            "dynamicProperties": {
              "color": "suitColor2"
            }
          },
          {
            "type": "image",
            "x": 13,
            "y": 43,
            "width": 80,
            "height": 80,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImage",
              "width": "centerScale"
            }
          },
          {
            "type": "text",
            "x": 20,
            "y": 54,
            "fontSize": 45,
            "textAlign": "center",
            "width": 60,
            "dynamicProperties": {
              "value": "rank",
              "color": "fontColor"
            },
            "css": {
              "letter-spacing": "-4px"
            }
          },
          {
            "type": "image",
            "x": 2,
            "y": 2,
            "width": 35,
            "height": 35,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImage"
            }
          },
          {
            "type": "text",
            "x": 0,
            "y": 6,
            "fontSize": 21,
            "textAlign": "center",
            "width": 35,
            "dynamicProperties": {
              "value": "rank",
              "color": "fontColor"
            },
            "css": {
              "letter-spacing": "-4px"
            }
          },
          {
            "type": "image",
            "x": 67,
            "y": 2,
            "width": 35,
            "height": 35,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImage"
            }
          },
          {
            "type": "text",
            "x": 65,
            "y": 6,
            "fontSize": 21,
            "textAlign": "center",
            "width": 35,
            "dynamicProperties": {
              "value": "rank",
              "color": "fontColor"
            },
            "css": {
              "letter-spacing": "-4px"
            }
          },
          {
            "type": "image",
            "x": 2,
            "y": 125,
            "width": 35,
            "height": 35,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImage"
            }
          },
          {
            "type": "text",
            "x": 6,
            "y": 130,
            "fontSize": 21,
            "textAlign": "center",
            "width": 35,
            "dynamicProperties": {
              "value": "rank",
              "color": "fontColor"
            },
            "rotation": 180,
            "css": {
              "letter-spacing": "-4px"
            }
          },
          {
            "type": "image",
            "x": 67,
            "y": 125,
            "width": 35,
            "height": 35,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImage"
            }
          },
          {
            "type": "text",
            "x": 71,
            "y": 130,
            "fontSize": 21,
            "textAlign": "center",
            "width": 35,
            "dynamicProperties": {
              "value": "rank",
              "color": "fontColor"
            },
            "rotation": 180,
            "css": {
              "letter-spacing": "-4px"
            }
          }
        ]
      }
    ],
    "parent": "offHolder",
    "x": 4,
    "y": 4,
    "staged": false,
    "clickable": true,
    "width": 86,
    "height": 86,
    "movable": true,
    "movableInEdit": true,
    "inheritFrom": {
      "deck1": [
        "cardDefaults"
      ]
    },
    "deckType": 3,
    "deckSuits": [
      "",
      "red",
      "orange",
      "green",
      "yellow",
      "black"
    ],
    "deckSuitsColor": [
      "",
      "#cc79a7",
      "#d55e00",
      "#009e9b",
      "#f0e442",
      "#000000",
      ""
    ],
    "deckSuitsImage": [
      "",
      "/i/icons/hearts.svg",
      "i/icons/circle.svg",
      "i/icons/square.svg",
      "i/icons/hexagon_vertical.svg",
      "/assets/-1568599145_166",
      ""
    ],
    "deckSuitsText": [
      "",
      "",
      "",
      "",
      "",
      "",
      "No\nTrump"
    ],
    "deckSuitsUni": [
      "",
      "❤",
      "🟠",
      "🟩",
      "⬢",
      "▲",
      "NT"
    ],
    "deckDiceFaces": [
      {
        "image": "/i/icons/hearts.svg",
        "deckSuitColor": "#cc79a7"
      },
      {
        "image": "i/icons/circle.svg",
        "deckSuitColor": "#d55e00"
      },
      {
        "image": "i/icons/square.svg",
        "deckSuitColor": "#009e9b"
      },
      {
        "image": "i/icons/hexagon_vertical.svg",
        "deckSuitColor": "#f0e442"
      },
      {
        "image": "/assets/-1568599145_166",
        "deckSuitColor": "#000000"
      }
    ]
  },
  "notu": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "1 red",
    "id": "notu",
    "staged": false,
    "parent": "pile2"
  },
  "pjia": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "2 red",
    "id": "pjia",
    "staged": false,
    "parent": "pile2"
  },
  "4iy9": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "3 red",
    "id": "4iy9",
    "staged": false,
    "parent": "pile2"
  },
  "ojbu": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "4 red",
    "id": "ojbu",
    "staged": false,
    "parent": "pile2"
  },
  "dncy": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "5 red",
    "id": "dncy",
    "staged": false,
    "parent": "pile2"
  },
  "bzoz": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "6 red",
    "id": "bzoz",
    "staged": false,
    "parent": "pile2"
  },
  "jfaf": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "7 red",
    "id": "jfaf",
    "staged": false,
    "parent": "pile2"
  },
  "xy9f": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "8 red",
    "id": "xy9f",
    "staged": false,
    "parent": "pile2"
  },
  "6jhn": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "9 red",
    "id": "6jhn",
    "staged": false,
    "parent": "pile2"
  },
  "pid7": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "10 red",
    "id": "pid7",
    "staged": false,
    "parent": "pile2"
  },
  "1yph": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "11 red",
    "id": "1yph",
    "staged": false,
    "parent": "pile2"
  },
  "zs4n": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "12 red",
    "id": "zs4n",
    "staged": false,
    "parent": "pile2"
  },
  "22ul": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "13 red",
    "id": "22ul",
    "staged": false,
    "parent": "pile2"
  },
  "j3kr": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "14 red",
    "id": "j3kr",
    "staged": false,
    "parent": "pile2"
  },
  "t5k3": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "1 orange",
    "id": "t5k3",
    "staged": false,
    "parent": "pile2"
  },
  "oldk": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "2 orange",
    "id": "oldk",
    "staged": false,
    "parent": "pile2"
  },
  "q4io": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "3 orange",
    "id": "q4io",
    "staged": false,
    "parent": "pile2"
  },
  "gxx1": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "4 orange",
    "id": "gxx1",
    "staged": false,
    "parent": "pile2"
  },
  "buyf": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "5 orange",
    "id": "buyf",
    "staged": false,
    "parent": "pile2"
  },
  "sva5": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "6 orange",
    "id": "sva5",
    "staged": false,
    "parent": "pile2"
  },
  "k0hw": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "7 orange",
    "id": "k0hw",
    "staged": false,
    "parent": "pile2"
  },
  "9iak": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "8 orange",
    "id": "9iak",
    "staged": false,
    "parent": "pile2"
  },
  "r79s": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "9 orange",
    "id": "r79s",
    "staged": false,
    "parent": "pile2"
  },
  "i7bl": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "10 orange",
    "id": "i7bl",
    "staged": false,
    "parent": "pile2"
  },
  "php9": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "11 orange",
    "id": "php9",
    "staged": false,
    "parent": "pile2"
  },
  "ojdh": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "12 orange",
    "id": "ojdh",
    "staged": false,
    "parent": "pile2"
  },
  "6k91": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "13 orange",
    "id": "6k91",
    "staged": false,
    "parent": "pile2"
  },
  "tam4": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "14 orange",
    "id": "tam4",
    "staged": false,
    "parent": "pile2"
  },
  "kcuh": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "1 green",
    "id": "kcuh",
    "staged": false,
    "parent": "pile2"
  },
  "66n3": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "2 green",
    "id": "66n3",
    "staged": false,
    "parent": "pile2"
  },
  "g97r": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "3 green",
    "id": "g97r",
    "staged": false,
    "parent": "pile2"
  },
  "48dj": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "4 green",
    "id": "48dj",
    "staged": false,
    "parent": "pile2"
  },
  "ojip": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "5 green",
    "id": "ojip",
    "staged": false,
    "parent": "pile2"
  },
  "cyz2": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "6 green",
    "id": "cyz2",
    "staged": false,
    "parent": "pile2"
  },
  "gios": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "7 green",
    "id": "gios",
    "staged": false,
    "parent": "pile2"
  },
  "8gln": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "8 green",
    "id": "8gln",
    "staged": false,
    "parent": "pile2"
  },
  "q9r7": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "9 green",
    "id": "q9r7",
    "staged": false,
    "parent": "pile2"
  },
  "dkdr": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "10 green",
    "id": "dkdr",
    "staged": false,
    "parent": "pile2"
  },
  "ghgj": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "11 green",
    "id": "ghgj",
    "staged": false,
    "parent": "pile2"
  },
  "qdto": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "12 green",
    "id": "qdto",
    "staged": false,
    "parent": "pile2"
  },
  "k5r9": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "13 green",
    "id": "k5r9",
    "staged": false,
    "parent": "pile2"
  },
  "782o": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "14 green",
    "id": "782o",
    "staged": false,
    "parent": "pile2"
  },
  "xrbw": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "1 yellow",
    "id": "xrbw",
    "staged": false,
    "parent": "pile2"
  },
  "ktnc": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "3 yellow",
    "id": "ktnc",
    "parent": "pile2",
    "staged": false
  },
  "92ev": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "4 yellow",
    "id": "92ev",
    "staged": false,
    "parent": "pile2"
  },
  "jvbb": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "5 yellow",
    "id": "jvbb",
    "staged": false,
    "parent": "pile2"
  },
  "5u00": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "6 yellow",
    "id": "5u00",
    "staged": false,
    "parent": "pile2"
  },
  "pf8h": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "7 yellow",
    "id": "pf8h",
    "staged": false,
    "parent": "pile2"
  },
  "f4xu": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "8 yellow",
    "id": "f4xu",
    "staged": false,
    "parent": "pile2"
  },
  "niu8": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "9 yellow",
    "id": "niu8",
    "staged": false,
    "parent": "pile2"
  },
  "afo6": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "10 yellow",
    "id": "afo6",
    "staged": false,
    "parent": "pile2"
  },
  "1clv": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "11 yellow",
    "id": "1clv",
    "staged": false,
    "parent": "pile2"
  },
  "97qc": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "12 yellow",
    "id": "97qc",
    "staged": false,
    "parent": "pile2"
  },
  "1mni": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "13 yellow",
    "id": "1mni",
    "staged": false,
    "parent": "pile2"
  },
  "il4p": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "14 yellow",
    "id": "il4p",
    "staged": false,
    "parent": "pile2"
  },
  "gameID10": {
    "id": "gameID10",
    "x": -526,
    "y": 1321,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort2": "sortKentucky",
    "roundsTemp": [
      "Card Points"
    ],
    "settingsArray": [
      [
        "showBidSuit",
        false
      ],
      [
        "showTricks",
        false
      ],
      [
        "showDiscard",
        true
      ]
    ],
    "text": "Crow (Similar to Rook)",
    "sort1": "suit",
    "scoreSystem": [
      [
        0,
        15,
        20,
        0,
        0,
        5,
        0,
        0,
        0,
        0,
        10,
        0,
        0,
        0,
        10,
        20
      ],
      [],
      [],
      []
    ],
    "gameID": true,
    "hintText": "\"After round is over, if any point cards were discarded, move them to the appropriate holder (usually the player that took the last trick). Press Add Card Points button to calculate captured points and display them on the small temporary holder. After verifying points, press Transfer Score button to move points to main scoreboard.\\a\\a Versions: The default version uses 180 point scoring. The other version adds the orange two back into the deck worth 20 points as the highest card, even above the crow.\"",
    "preSetExceptionsRoutine": [
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "faces",
        "value": "${PROPERTY trumpFaces}"
      },
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "customFaceCount",
        "value": 5
      }
    ],
    "versionArray": [
      {
        "value": "0",
        "text": "Click here to choose version"
      },
      {
        "value": "1",
        "text": "Kentucky 180 Points"
      },
      {
        "value": "2",
        "text": "Kentucky 200 Points"
      }
    ],
    "version1": {
      "settingsDecksArray": [
        [
          "cardCount",
          10
        ],
        [
          "deckType",
          3
        ],
        [
          "hideCards",
          3
        ],
        [
          "seatCount",
          4
        ],
        [
          "teamScore",
          true
        ],
        [
          "tempScore",
          true
        ]
      ],
      "hideCardsByType": [
        "1 black",
        "2 black",
        "3 black",
        "4 black",
        "5 black",
        "6 black",
        "7 black",
        "8 black",
        "9 black",
        "10 black",
        "11 black",
        "12 black",
        "13 black",
        "14 black",
        "-5 auction",
        "x2 auction",
        "ally auction"
      ]
    },
    "version2": {
      "settingsDecksArray": [
        [
          "cardCount",
          10
        ],
        [
          "deckType",
          3
        ],
        [
          "seatCount",
          4
        ],
        [
          "teamScore",
          true
        ],
        [
          "tempScore",
          true
        ]
      ],
      "hideCardsByType": [
        "2 red",
        "3 red",
        "4 red",
        "2 green",
        "3 green",
        "4 green",
        "2 yellow",
        "3 yellow",
        "4 yellow",
        "2 orange",
        "3 orange",
        "4 orange",
        "1 black",
        "3 black",
        "4 black",
        "5 black",
        "6 black",
        "7 black",
        "8 black",
        "9 black",
        "10 black",
        "11 black",
        "12 black",
        "13 black",
        "14 black",
        "-5 auction",
        "x2 auction",
        "ally auction"
      ]
    },
    "settingsDecksArray": [
      [
        "cardCount",
        10
      ],
      [
        "deckType",
        3
      ],
      [
        "hideCards",
        3
      ],
      [
        "seatCount",
        4
      ],
      [
        "teamScore",
        true
      ],
      [
        "tempScore",
        true
      ]
    ],
    "hideCardsByType": [
      "1 black",
      "2 black",
      "3 black",
      "4 black",
      "5 black",
      "6 black",
      "7 black",
      "8 black",
      "9 black",
      "10 black",
      "11 black",
      "12 black",
      "13 black",
      "14 black",
      "-5 auction",
      "x2 auction",
      "ally auction"
    ],
    "transferButtonReturn": false,
    "transferExceptionsRoutine": [
      "var bidNS = max ${PROPERTY text OF bidValue1} ${PROPERTY text OF bidValue5}",
      "var bidEW = max ${PROPERTY text OF bidValue3} ${PROPERTY text OF bidValue7}",
      "var bidValue = max ${bidNS} ${bidEW}",
      "var bidValueString = ${bidValue} + ''",
      {
        "func": "SELECT",
        "property": "id",
        "relation": "in",
        "value": [
          "bidValue1",
          "bidValue3",
          "bidValue5",
          "bidValue7"
        ]
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "text",
        "value": "${bidValueString}"
      },
      {
        "func": "GET",
        "property": "parent",
        "variable": "bidWinner"
      },
      "var bidWinnerNS = ${bidNS} == ${bidValue}",
      "var bidWinnerEW = ${bidEW} == ${bidValue}",
      {
        "func": "FOREACH",
        "in": "${PROPERTY _totals OF tempScoreboard}",
        "loopRoutine": [
          {
            "func": "IF",
            "operand1": "${key}",
            "operand2": 2,
            "thenRoutine": [
              "var key = 3"
            ]
          },
          "var seat = 'seat' + ${key}",
          {
            "func": "IF",
            "operand1": "${key}",
            "operand2": 1,
            "thenRoutine": [
              {
                "func": "IF",
                "condition": "${bidWinnerNS}",
                "thenRoutine": [
                  {
                    "func": "IF",
                    "operand1": "${value}",
                    "relation": "<",
                    "operand2": "${bidValue}",
                    "thenRoutine": [
                      "var value = ${bidValue} * -1"
                    ]
                  }
                ]
              }
            ]
          },
          {
            "func": "IF",
            "operand1": "${key}",
            "operand2": 3,
            "thenRoutine": [
              {
                "func": "IF",
                "condition": "${bidWinnerEW}",
                "thenRoutine": [
                  {
                    "func": "IF",
                    "operand1": "${value}",
                    "relation": "<",
                    "operand2": "${bidValue}",
                    "thenRoutine": [
                      "var value = ${bidValue} * -1"
                    ]
                  }
                ]
              }
            ]
          },
          {
            "func": "SCORE",
            "mode": "set",
            "property": "score",
            "round": "${PROPERTY currentRound OF scoreboard}",
            "seats": "${seat}",
            "value": "${value}"
          }
        ]
      }
    ]
  },
  "y6hi": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "0 crow",
    "id": "y6hi",
    "staged": false,
    "parent": "pile2"
  },
  "y2nf": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "CS",
    "id": "y2nf",
    "staged": false,
    "parent": "pile2"
  },
  "ndj3": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "CC",
    "id": "ndj3",
    "staged": false,
    "parent": "pile2"
  },
  "f58q": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "CH",
    "id": "f58q",
    "staged": false,
    "parent": "pile2"
  },
  "y26i": {
    "deck": "tarokyDeck",
    "type": "card",
    "cardType": "CD",
    "id": "y26i",
    "staged": false,
    "parent": "pile2"
  },
  "gameID11": {
    "id": "gameID11",
    "x": -261,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort2": "suit",
    "roundsTemp": [
      "Card Points"
    ],
    "settingsArray": [
      [
        "showBidSuit",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        9
      ],
      [
        "hideCards",
        5
      ],
      [
        "seatCount",
        4
      ],
      [
        "teamScore",
        true
      ],
      [
        "tempScore",
        true
      ]
    ],
    "sort1": "sortDefault",
    "scoreSystem": [
      [
        0,
        10,
        0,
        0,
        0,
        5,
        0,
        0,
        0,
        0,
        10,
        0,
        0,
        0
      ],
      [],
      [],
      []
    ],
    "text": "200",
    "gameID": true,
    "hintText": "\"After round is over, press Add Card Points button to display totals of captured points on the small tempoarary scoreboard. Compare to bid to determine what declarers' scores and opponsents' scores should be. If scores are correct, you can press the Transfer Score button.  Otherwise, when ready to enter final score on main scoreboard, use green/red +/- buttons.\"",
    "y": 286
  },
  "itemsHolder8": {
    "inheritFrom": {
      "itemsHolder1": "*"
    },
    "type": "holder",
    "id": "itemsHolder8",
    "x": 210,
    "y": 112,
    "dropTarget": {
      "item": 8
    },
    "parent": "itemsBox"
  },
  "itemsHolder9": {
    "inheritFrom": {
      "itemsHolder1": "*"
    },
    "type": "holder",
    "id": "itemsHolder9",
    "x": 310,
    "y": 112,
    "dropTarget": {
      "item": 9
    },
    "parent": "itemsBox"
  },
  "itemsHolder10": {
    "inheritFrom": {
      "itemsHolder1": "*"
    },
    "type": "holder",
    "id": "itemsHolder10",
    "x": 410,
    "y": 112,
    "dropTarget": {
      "item": 10
    },
    "parent": "itemsBox"
  },
  "itemsHolder11": {
    "inheritFrom": {
      "itemsHolder1": "*"
    },
    "type": "holder",
    "id": "itemsHolder11",
    "x": 510,
    "y": 112,
    "dropTarget": {
      "item": 11
    },
    "parent": "itemsBox"
  },
  "gameID12": {
    "id": "gameID12",
    "x": -272,
    "y": -91,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortDefault",
    "sort2": "suit",
    "text": "Coiffeur Jass (4P)",
    "messageArray": [
      {
        "value": "Default",
        "text": "Click here to choose message"
      },
      {
        "value": "Obenabe",
        "text": "Obenabe"
      },
      {
        "value": "Undenufe",
        "text": "Undenufe"
      },
      {
        "value": "Slalom",
        "text": "Slalom"
      },
      {
        "value": "Gustav",
        "text": "Gustav"
      },
      {
        "value": "Joker1",
        "text": "Joker1"
      },
      {
        "value": "Joker2",
        "text": "Joker2"
      }
    ],
    "roundsTemp": [
      "Card Points"
    ],
    "displayArray": [
      [
        "playerAidButton",
        1
      ],
      [
        "reverseSortButton",
        1
      ]
    ],
    "settingsArray": [
      [
        "showBidValue",
        false
      ],
      [
        "showTricks",
        false
      ],
      [
        "turnDirection",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        9
      ],
      [
        "hideCards",
        4
      ],
      [
        "seatCount",
        4
      ],
      [
        "tempScore",
        true
      ]
    ],
    "scoreSystem": [
      [],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        14,
        10,
        20,
        3,
        4
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        10,
        2,
        3,
        4
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        8,
        0,
        10,
        2,
        3,
        4
      ]
    ],
    "gameID": true,
    "hintText": "\"Scorekeeping is mostly automated so long as players make bids using the suit bid buttons (for suit contracts) and the message button (for other contracts).\\a\\aTo calculate points for the round, any player can press Add Card Points. Verify total in small bottom scoreboard. Then ensure Trump indicator is correctly set. NOTE: if bidding a joker contract in a suit, the Trump indicator must be changed to No Trumps before the next step.\\a\\aThe player with the contract then presses the Transfer Score button and the score is moved to the appropriate cell in the main scoreboard.\\a\\a Any player can press the Convert button to create the final score in the scoreboard to the right of the main one.\\a\\a An up/down arrow is available by presing the Actions button and selecting Show Arrow. When playing a Slalom contract, the arrow reverses direction every time the Take button is pressed (but NOT if completing a joker contract).\\a\\a The Sort button will correctly sort Jacks and Nine of trumps once the Trump indicator is set, but the button has to be pressed again.\\a\\a The Reverse Sort button is useful when playing a contract when the rank value of the cards is reversed (so 6 is high and Ace is low).\"",
    "trumpIndicator": true,
    "preSetExceptionsRoutine": [
      "var coiffeur3P = ${PROPERTY preSet OF preSetsButton} == '6'",
      "var coiffeur4P = ${PROPERTY preSet OF preSetsButton} == '12'",
      "var coiffeur = ${coiffeur3P} || ${coiffeur4P}",
      {
        "func": "IF",
        "condition": "${coiffeur}",
        "thenRoutine": [
          {
            "func": "SELECT",
            "property": "id",
            "value": "scoreboard"
          },
          {
            "func": "SET",
            "property": "rounds",
            "value": "${PROPERTY roundsCoiffeur OF scoreboard}"
          },
          {
            "func": "SET",
            "property": "css",
            "value": "${PROPERTY cssCoiffeur OF scoreboard}"
          },
          {
            "func": "SET",
            "property": "showTotals",
            "value": false
          },
          {
            "func": "SET",
            "collection": [
              "scoreboard3"
            ],
            "property": "scale",
            "value": 1
          }
        ]
      }
    ],
    "takeRoutine": [
      {
        "func": "IF",
        "operand1": "${PROPERTY message OF bids}",
        "operand2": "Slalom",
        "thenRoutine": [
          {
            "func": "CLICK",
            "collection": [
              "arrow"
            ]
          }
        ]
      }
    ],
    "sortExceptionsRoutine": [
      "var trump = ${PROPERTY trump OF trump}",
      "var isNum = ${trump} / 1",
      {
        "func": "IF",
        "operand1": "${isNum}",
        "operand2": "${trump}",
        "thenRoutine": [
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "suit",
            "value": "${trump}",
            "collection": "trumpSuit"
          },
          {
            "func": "IF",
            "condition": "${reverseSort}",
            "thenRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortJassTrump"
              }
            ],
            "elseRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortJassTrump",
                "reverse": "${PROPERTY sortDirection OF $seatID}"
              }
            ]
          },
          {
            "func": "SORT",
            "key": "suit"
          }
        ]
      }
    ],
    "transferExceptionsRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Transferring score ..."
          },
          {
            "type": "subtitle",
            "text": "This will transfer the score in the temporary scoreboard to the main one. Only the player with the contract should use this buttons. Also, this only works if the activity log reflects the player's contract. Are you sure you want to continue?"
          }
        ],
        "confirmButtonText": "Yes",
        "cancelButtonText": "No"
      },
      "var contract = ${PROPERTY message OF bids}",
      {
        "func": "IF",
        "condition": "${contract}",
        "thenRoutine": [
          "var round = ${PROPERTY coiffeurContractArray} indexOf ${contract}",
          "var total = ${PROPERTY _totals OF tempScoreboard}",
          "var total = ${total.$seatIndex}",
          {
            "func": "SCORE",
            "seats": [
              "${seatID}"
            ],
            "round": "${round}",
            "value": "${total}"
          }
        ]
      }
    ],
    "transferButtonReturn": false,
    "coiffeurContractArray": [
      "null",
      "spades",
      "clubs",
      "diamonds",
      "hearts",
      "Obenabe",
      "Undenufe",
      "Slalom",
      "Gustav",
      "Joker1",
      "Joker2"
    ],
    "scoreExceptionsRoutine": [
      "var result = ${points}",
      "var last = ${PROPERTY lastPressedBy OF takeButton}",
      {
        "func": "IF",
        "operand1": "${value}",
        "operand2": "${last}",
        "thenRoutine": [
          "var result = ${result} + 5"
        ]
      }
    ],
    "playerAidDetail1": "Notes",
    "resetRoutine": [
      {
        "func": "FOREACH",
        "range": [
          8
        ],
        "loopRoutine": [
          {
            "func": "SET",
            "collection": [
              "seat${value}"
            ],
            "property": "scoreCoiffeur",
            "value": [
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " "
            ]
          },
          {
            "func": "SET",
            "collection": [
              "seat${value}"
            ],
            "property": "score",
            "value": [
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " "
            ]
          }
        ]
      }
    ]
  },
  "gameID13": {
    "id": "gameID13",
    "x": -142,
    "y": 287,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortAceTen",
    "sort2": "suit",
    "messageArray": [
      {
        "value": "Default",
        "text": "Click here to choose message"
      },
      {
        "value": "♠ Marriage",
        "text": "♠ Marriage (40)"
      },
      {
        "value": "♣ Marriage",
        "text": "♣ Marriage (60)"
      },
      {
        "value": "♦ Marriage",
        "text": "♦ Marriage (80)"
      },
      {
        "value": "♥ Marriage",
        "text": "♥ Marriage (100)"
      }
    ],
    "roundsTemp": [
      "Card Points",
      "♠ 40",
      "♣ 60",
      "♦ 80",
      "♥ 100"
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        9
      ],
      [
        "hideCards",
        4
      ],
      [
        "seatCount",
        4
      ],
      [
        "teamScore",
        true
      ],
      [
        "tempScore",
        true
      ]
    ],
    "settingsArray": [
      [
        "showTricks",
        false
      ],
      [
        "showBidSuit",
        false
      ]
    ],
    "scoreSystem": [
      [
        0,
        10,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        10,
        5,
        5,
        5
      ],
      [],
      [],
      []
    ],
    "gameID": true,
    "text": "Huutopussi",
    "displayArray": [
      [
        "transferScoreButton",
        0
      ]
    ],
    "hintText": "\"After round is over, press Add Card Points button. Twenty point is automatically added to value of the last player to press the Take button. Use the small temporary scoreboard as an aid to determine actual score that should be entered on main scoreboard. Enter points on main scoreboard using green/red +/- buttons.\"",
    "scoreExceptionsRoutine": [
      "var result = ${points}",
      "var last = ${PROPERTY lastPressedBy OF takeButton}",
      {
        "func": "IF",
        "operand1": "${value}",
        "operand2": "${last}",
        "thenRoutine": [
          "var result = ${result} + 20"
        ]
      }
    ]
  },
  "gameID14": {
    "id": "gameID14",
    "x": -527,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortAceTen",
    "sort2": "suit",
    "messageArray": [
      {
        "value": "Default",
        "text": "Click here to choose message"
      },
      {
        "value": "♠ Marriage",
        "text": "♠ Marriage (40)"
      },
      {
        "value": "♣ Marriage",
        "text": "♣ Marriage (60)"
      },
      {
        "value": "♦ Marriage",
        "text": "♦ Marriage (80)"
      },
      {
        "value": "♥ Marriage",
        "text": "♥ Marriage (100)"
      }
    ],
    "roundsTemp": [
      "Card Points",
      "♠ 40",
      "♣ 60",
      "♦ 80",
      "♥ 100"
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        7
      ],
      [
        "hideCards",
        8
      ],
      [
        "seatCount",
        3
      ],
      [
        "tempScore",
        true
      ]
    ],
    "settingsArray": [
      [
        "showTricks",
        false
      ],
      [
        "showBidSuit",
        false
      ]
    ],
    "scoreSystem": [
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        10,
        2,
        3,
        4
      ],
      [],
      [],
      []
    ],
    "gameID": true,
    "displayArray": [
      [
        "transferScoreButton",
        0
      ]
    ],
    "text": "1000",
    "hintText": "\"Use Items button during play to take out widgets as needed to indicate various game conditions.\\a\\a After round is over, press Add Card Points button. To score bonus points in the small scoreboard, move the scrollbar to highlight the row and press the green/red +/- buttons.\\a\\a When score on the temporary scoreboard is correct, move scrollbar all the way to the top and then the green/red +/- buttons will work on the main scoreboard.\"",
    "y": 406
  },
  "gameIDLabel": {
    "id": "gameIDLabel",
    "x": 391,
    "y": 7,
    "width": 310,
    "height": 30,
    "css": {
      "default": {
        "color": "darkblue",
        "font-size": "25px"
      },
      "::after": {
        "content": " ${PROPERTY hintText}",
        "display": "none",
        "position": "absolute",
        "margin-left": "0px",
        "margin-right": "2px",
        "color": "black",
        "background-color": "#a9c6e8",
        "font-size": "16px",
        "font-weight": "normal",
        "width": "310px"
      },
      ":hover::after": {
        "display": "block"
      }
    },
    "text": "Default",
    "movable": false,
    "movableInEdit": false,
    "hintText": "\"Choose a pre-set game by pressing the Game button to the left.\\a\\a Even if no pre-set is available, many trick taking card games can be played in this room. Use the Options buttons in the lower-right corner to configure the number of players, decks, and other settings.\\a\\a Without a pre-set, there will be limited automation, but you can still have fun. If you want to make your own pre-set, visit https://github.com/96LawDawg/Cards-Tricks/wiki.\""
  },
  "gameID15": {
    "id": "gameID15",
    "x": -393,
    "y": 407,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortDefault",
    "sort2": "suit",
    "roundsTemp": [
      "Card Points",
      "A ♥ Exposed",
      "Q ♠ Exposed",
      "J ♦ Exposed",
      "10 ♣ Exposed"
    ],
    "displayArray": [
      [
        "trump",
        0
      ]
    ],
    "settingsArray": [
      [
        "capturedHolder",
        true
      ],
      [
        "showBidSuit",
        false
      ],
      [
        "showScore",
        true
      ],
      [
        "showTricks",
        true
      ],
      [
        "turnDirection",
        true
      ]
    ],
    "settingsDecksArray": [
      [
        "tempScore",
        true
      ]
    ],
    "gameID": true,
    "hintText": "\"Points are calculated automatically for cards in player piles after the Add Card Points button is pressed. However, bonuses for exposing cards have to be manually calculated. \\a\\a To score exposed card bonus in the small scoreboard, move the scrollbar to highlight the row and press the green/red +/- buttons.\\a\\a When score on the temporary scoreboard is correct, press Transfer Score button to record score in main scoreboard.\"",
    "text": "Gong Zhu",
    "scoreSystem": [
      [],
      [
        0,
        -50,
        0,
        0,
        0,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -20,
        -30,
        -40
      ],
      [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      []
    ],
    "preSetExceptionsRoutine": [
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "scale",
        "value": 0
      }
    ],
    "scoreExceptionsRoutine": [
      "var result = ${points}",
      {
        "func": "SELECT",
        "source": "otherCards",
        "property": "cardType",
        "value": "S 3Q",
        "collection": "pig"
      },
      {
        "func": "COUNT",
        "collection": "pig",
        "variable": "countPig"
      },
      {
        "func": "SELECT",
        "source": "otherCards",
        "property": "cardType",
        "value": "C 10",
        "collection": "ten"
      },
      {
        "func": "COUNT",
        "collection": "ten",
        "variable": "countTen"
      },
      {
        "func": "SELECT",
        "source": "otherCards",
        "property": "cardType",
        "value": "D 2J",
        "collection": "sheep"
      },
      {
        "func": "COUNT",
        "collection": "sheep",
        "variable": "countSheep"
      },
      {
        "func": "COUNT",
        "collection": "trumpCards",
        "variable": "countTrumps"
      },
      "var anyCountCards = ${countTrumps} + ${countPig}",
      "var anyCountCards = ${anyCountCards} + ${countSheep}",
      "var countPig = ${countPig} * -100",
      "var result = ${result} + ${countPig}",
      "var countSheep = ${countSheep} * 100",
      "var result = ${result} + ${countSheep}",
      {
        "func": "IF",
        "operand1": "${anyCountCards}",
        "relation": ">",
        "operand2": 0,
        "thenRoutine": [
          {
            "func": "IF",
            "operand1": "${countTen}",
            "operand2": 1,
            "thenRoutine": [
              "var result = ${result} * 2"
            ]
          }
        ],
        "elseRoutine": [
          {
            "func": "IF",
            "operand1": "${countTen}",
            "operand2": 1,
            "thenRoutine": [
              "var result = 50"
            ]
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${countTrumps}",
        "operand2": 13,
        "thenRoutine": [
          "var result = 200",
          {
            "func": "IF",
            "operand1": "${countPig}",
            "operand2": -100,
            "thenRoutine": [
              "var result = 300",
              {
                "func": "IF",
                "operand1": "${countSheep}",
                "operand2": 100,
                "thenRoutine": [
                  "var result = 400",
                  {
                    "func": "IF",
                    "operand1": "${countSheep}",
                    "operand2": 100,
                    "thenRoutine": [
                      "var result = 800"
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "messageArray": [
      {
        "value": "Default",
        "text": "Click here to choose message"
      },
      {
        "value": "A ♥ Exposed",
        "text": "A ♥ Exposed"
      },
      {
        "value": "Q ♠ Exposed",
        "text": "Q ♠ Exposed"
      },
      {
        "value": "J ♦ Exposed",
        "text": "J ♦ Exposed"
      },
      {
        "value": "10 ♣ Exposed",
        "text": "10 ♣ Exposed"
      }
    ],
    "trumps": 4,
    "capturedArray": [
      [],
      [
        "S 3Q",
        "D 2J",
        "C 10"
      ],
      [
        4
      ]
    ]
  },
  "take1Button": {
    "type": "button",
    "id": "take1Button",
    "x": 1317,
    "y": 26,
    "width": 60,
    "height": 35,
    "css": {
      "border-radius": "10px 4px 4px 10px",
      "font-size": "17px"
    },
    "text": "Take 1",
    "clickRoutine": [
      {
        "func": "MOVE",
        "from": "deckHolder",
        "to": "hand",
        "count": 1
      },
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "autoSortRoutine"
      }
    ]
  },
  "score+50": {
    "type": "button",
    "id": "score+50",
    "x": 185,
    "inheritFrom": {
      "score+10": "*"
    },
    "text": "+50",
    "thisSign": "inc",
    "thisValue": 50
  },
  "score+100": {
    "type": "button",
    "id": "score+100",
    "x": 245,
    "inheritFrom": {
      "score+10": "*"
    },
    "text": "+ 100",
    "thisSign": "inc",
    "thisValue": 100
  },
  "score-50": {
    "type": "button",
    "id": "score-50",
    "x": 185,
    "y": -79,
    "inheritFrom": {
      "score-1": "*"
    },
    "text": "- 50",
    "thisSign": "dec",
    "thisValue": 50
  },
  "score-100": {
    "type": "button",
    "id": "score-100",
    "x": 245,
    "y": -79,
    "inheritFrom": {
      "score-1": "*"
    },
    "text": "- 100",
    "thisSign": "dec",
    "thisValue": 100
  },
  "reverseSortButton": {
    "type": "button",
    "id": "reverseSortButton",
    "x": 420,
    "y": 860,
    "height": 35,
    "movableInEdit": false,
    "css": {
      "border-radius": "10px 0px 0px 10px"
    },
    "clickRoutine": [
      {
        "func": "SELECT",
        "property": "parent",
        "value": "hand"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "owner",
        "value": "${playerName}"
      },
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      "var reverse = ${PROPERTY sortDirection OF $seatID}",
      {
        "func": "CALL",
        "routine": "sortRoutine",
        "arguments": {
          "thisPlayerName": "${playerName}"
        }
      },
      {
        "func": "CALL",
        "widget": [
          "${gameID}"
        ],
        "routine": "sortExceptionsRoutine",
        "arguments": {
          "thisPlayerName": "${playerName}",
          "reverseSort": true
        }
      }
    ],
    "sortRoutine": [
      {
        "func": "IF",
        "condition": "${reverse}",
        "thenRoutine": [
          {
            "func": "SORT",
            "collection": "DEFAULT",
            "key": "${PROPERTY sort1 OF $gameID}",
            "reverse": true
          }
        ],
        "elseRoutine": [
          {
            "func": "SORT",
            "collection": "DEFAULT",
            "key": "${PROPERTY sort1 OF $gameID}"
          }
        ]
      },
      {
        "func": "SORT",
        "collection": "DEFAULT",
        "key": "${PROPERTY sort2 OF $gameID}"
      },
      {
        "func": "SELECT",
        "type": "card",
        "property": "parent",
        "value": "hand"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "staged",
        "value": true
      },
      {
        "func": "SET",
        "property": "y",
        "relation": "-",
        "value": 20
      }
    ],
    "text": "Reverse Sort",
    "scale": 0
  },
  "slideHolderVertical": {
    "id": "slideHolderVertical",
    "x": 300,
    "width": 25,
    "borderRadius": 100,
    "css": {
      "background": "gray"
    },
    "movableInEdit": false,
    "height": 280,
    "fixedParent": true,
    "parent": "tempScoreboard",
    "movable": false
  },
  "roundSlider": {
    "id": "roundSlider",
    "parent": "tempScoreboard",
    "fixedParent": true,
    "x": 301,
    "width": 22,
    "height": 32,
    "borderRadius": 100,
    "movableInEdit": false,
    "css": {
      "background": "white",
      "box-shadow": "5px 5px 10px black"
    },
    "xLock": 301,
    "yMin": 0,
    "yRange": 245,
    "changeRoutine": [
      "var length = length ${PROPERTY rounds OF tempScoreboard}",
      "var interval = ${PROPERTY yRange} / ${length}",
      "var thisStep = ${PROPERTY y} / ${interval}",
      "var thisStep = ceil ${thisStep}",
      {
        "func": "SET",
        "collection": [
          "tempScoreboard"
        ],
        "property": "currentRound",
        "value": "${thisStep}"
      },
      {
        "func": "CALL",
        "routine": "limitRangeRoutine"
      }
    ],
    "limitRangeRoutine": [
      "var xLock = ${PROPERTY xLock}",
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "x",
        "value": "${xLock}"
      },
      "var yMin = ${PROPERTY yMin}",
      "var yRange = ${PROPERTY yRange}",
      "var yMax = ${yRange} + ${yMin}",
      "var ySlide = ${PROPERTY y}",
      {
        "Note": "If y goes above the maximum, set y to the maximum.",
        "func": "IF",
        "operand1": "${ySlide}",
        "operand2": "${yMax}",
        "relation": ">",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "y",
            "value": "${yMax}"
          }
        ],
        "elseRoutine": [
          {
            "Note": "If y goes below the minimum, then set y to the minimum.",
            "func": "IF",
            "operand1": "${ySlide}",
            "operand2": "${yMin}",
            "relation": "<",
            "thenRoutine": [
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "y",
                "value": "${yMin}"
              }
            ]
          }
        ]
      }
    ]
  },
  "itemsHolder12": {
    "inheritFrom": {
      "itemsHolder1": "*"
    },
    "type": "holder",
    "id": "itemsHolder12",
    "x": 10,
    "y": 180,
    "dropTarget": {
      "item": 12
    },
    "parent": "itemsBox"
  },
  "itemsHolder13": {
    "inheritFrom": {
      "itemsHolder1": "*"
    },
    "type": "holder",
    "id": "itemsHolder13",
    "x": 110,
    "y": 180,
    "dropTarget": {
      "item": 13
    },
    "parent": "itemsBox"
  },
  "itemsHolder14": {
    "inheritFrom": {
      "itemsHolder1": "*"
    },
    "type": "holder",
    "id": "itemsHolder14",
    "x": 210,
    "y": 180,
    "dropTarget": {
      "item": 14
    },
    "parent": "itemsBox"
  },
  "itemsHolder15": {
    "inheritFrom": {
      "itemsHolder1": "*"
    },
    "type": "holder",
    "id": "itemsHolder15",
    "x": 310,
    "y": 180,
    "dropTarget": {
      "item": 15
    },
    "parent": "itemsBox"
  },
  "_meta": {
    "version": 13,
    "info": {
      "name": "Card Games",
      "image": "/assets/-2012896688_55008",
      "rules": "",
      "bgg": "",
      "year": "",
      "mode": "vs",
      "time": "5-60",
      "attribution": "The room and most game elements and mechanics are by LawDawg96 and are released into the Public Domain under CC0.<div><br></div><div>Additional contributions to game pre-sets&nbsp;<span style=\"color: var(--overlayFontColor);\">released into the Public Domain under CC0&nbsp;</span><span style=\"color: var(--overlayFontColor);\">by: jade-alarm.</span></div><div><div><br></div><div>Items (CC BY 3.0):</div><div><ul><li>Caro Asercion</li><ul><li>Fox, https://game-icons.net/1x1/caro-asercion/fox.html</li></ul><li>Delapouite</li><ul><li>Barrel,&nbsp;https://game-icons.net/1x1/delapouite/barrel.html</li><li>Lovers, https://game-icons.net/1x1/delapouite/lovers.html</li></ul><li><span style=\"color: var(--overlayFontColor);\">Lorc</span></li><ul><li>Screw, https://game-icons.net/1x1/lorc/screw.html</li></ul></ul><div>Player Aids:</div><div><ul><li>Doppelkopf by jkandell</li><li>Königrufen by jkandell<br></li></ul><div>Decks and Cards</div></div></div><div><ul><li>Crow</li><ul><li>Card design by LawDawg96 and released to the Public Domain under CC0.</li><li>Ally/friend icon used in Auction pre-set by Random Panda and available under CC BY 3.0 at https://thenounproject.com/icon/friend-96006/</li></ul></ul></div></div>",
      "lastUpdate": 1688774417056,
      "showName": true,
      "skill": "",
      "description": "This room can be used to play many types of card games. It is especially suited for trick taking and point-trick types of games.  It is highly customizable with many games available with pre-set configurations including:\n\n99, 200, 1000, Agony Aunt, Bouncers, Coiffeur Jass, Coinche, Collusion, Counterpoint, Crow (Similar to Rook), Czech Taroky, Differenzler Jass, Doppelkopf, French Tarot, Gong Zhu, Hearts, Huutopussi, Israeli Whist, Klaverjassen, Königrufen, La Bâtarde, Mighty, Mittlere Jass, Molotow Jass, Pitch Pawnee 10 Point, Schieber Jass, Secret Agent, Sidi Barrani Jass, Spades, State (Similar to Ohio), Tracktrick, Truco\n\nv1.1",
      "similarImage": "",
      "similarName": "",
      "similarAwards": "",
      "ruleText": "",
      "helpText": "<div><i><font color=\"#2d5da8\"><b>Game Button</b></font></i><div><br></div>Use the Game button to automatically configure the room to a particular game type. If a game type is available in the drop-down menu, it will configure the room using the option settings described below for the most common variation of that game type. Even if you use an available pre-set, you can still change other values using the Option Buttons described below.</div><div><br></div><div>If a game pre-set is not available, you can still play many games by configuring the options. The only limitation is that there will be very little automation.</div><div><br></div><div>To the right of the Game button is the name of the current pre-set game. In many rooms, hovering over that text with the cursor will display tips on how to use the automation in that particular pre-set game.</div><div><span style=\"color: var(--overlayFontColor);\"><br></span></div><div><div><i style=\"color: var(--overlayFontColor);\"><font color=\"#2d5da8\"><b>Option Buttons</b></font></i><br></div></div><div><br></div>Use the option buttons in the lower right to set up room as desired.&nbsp;<div><br></div><div><b>Visuals and Other</b></div><div><ul><li><b>Play Holder</b></li><ul><li>Clicking a card in the hand sends the card to the play holder but click to play can be turned off. See Playing A Card in the automation section below for more information.</li><li>Cards are played to either a common holder in the middle of the board or to the holders adjacent to each seat. The common holder is off by default.</li><li>The common holder can display cards spread out or in a pile. When spread out, the space between cards will get smaller if there are more than 5 so they all fit without extending past the holder. About 12 cards fit before it becomes difficult to identify the cards.</li><li>The play holder can force cards to be face up when they enter or face down.</li><li>A mini-holder can be added on top of the normal holder for captured cards. This is useful in games that require some or all captured cards to be displayed face up during play.</li></ul></ul><ul><li><b>Bid &amp; Score Displays</b></li><ul><li>The scoreboard on the left side of the screen can be displayed or hidden.</li><li>The count of tricks taken per player in this round can be displayed or hidden. The total trick count is always displayed beneath the Recall &amp; Shuffle button.</li><li>The white, square bid value widgets to the left at each player's seat can be displayed or hidden.</li><li>The white, square bid suit widgets to the right at each player's seat can be displayed or hidden.</li><li>The discard holder below the trick count score can be displayed or hidden.</li><li>An activity log showing a history of bidding and other messages can be displayed or hidden.</li><li>Bidding values can be displayed to everyone or kept private until the player chooses to reveal them.</li></ul></ul><ul><li><b style=\"color: var(--overlayFontColor);\">Other</b><br></li><ul><li><span style=\"color: var(--overlayFontColor);\">The turn button can be set to move the glowing turn indicator on the seats clockwise or counter-clockwise.</span><br></li><li><span style=\"color: var(--overlayFontColor);\">You can change the background color of the room to a different color.</span></li></ul></ul><div><div><b>Decks and Players</b></div><div><ul><li><b>Players</b></li><ul><li>The number of players can be set between 2 and 8. Each player count has pre-defined seats that cannot be changed. Changing the player count while players are seated will kick all players out of existing seats.</li><li>A dummy hand can be added to seat 1 (bottom-center). Cards can be dealt to the dummy hand either face up or face down. All players may see and interact with the dummy hand.</li></ul></ul><ul><li><b>Cards and Decks</b></li><ul><li>Available decks:</li><ul><li>Standard 52 card French-suited deck</li><li>Two standard 52 card decks</li><li>Taroky (54 cards)</li><li>Tarot (78 cards)</li><li>Crow (similar to Rook)</li><li>Spanish (1-12, clubs, coins, cups, swords)</li><li>German (5-A, acorns, bells, leaves, hearts)</li><li>Swiss (6-A, acorns, bells, roses, shields)</li></ul><li>The number of jokers can be set between 0 (default) and 4. The first joker added is the black 1, the second is a red 2, the third is another black 1, and the fourth is another red 2.</li><li>You can set the number of cards dealt to each seat (including the dummy, when used) from 0 to any value.</li><li>There are options to remove certain cards. This works on the standard, Spanish and Crow decks, but not Tarot.</li><li>A delete button can be displayed in the room. To use this feature, check the box in the settings, drag cards that should be removed from the deck to the Discard holder, and press the red Delete button. All cards in the Discard holder are deleted from the room after confirming your intent in a pop-up menu. Those cards can only be returned to the room by reloading the game from the Game Shelf.</li></ul></ul><ul><li><b style=\"color: var(--overlayFontColor);\">Scoring</b></li><ul><li>Team/partnership scoring using North-South and East-West partners is available when playing a 4-player game.</li><li>Small widgets can be added to indicate \"teams\" that change from round-to-round. This makes variable partnership scoring automated when using certain pre-sets. Otherwise, this is just a visual reminder.</li><li>A smaller, temporary scoreboard on the left side of the screen can also be displayed or hidden (default). This is used to calculate bonuses and other values before entering a final tally in the main scoreboard. The temporary scoreboard records only one round of scores. This is mainly used by pre-sets.</li></ul></ul><i><font color=\"#2d5da8\"><b>Automation</b></font></i><div><br></div>Several widgets and buttons are available in the room to assist with automating some basic tasks.</div></div></div><div><div><ul><li><b>Deal</b></li><ul><li>This will deal the number of cards set in the Decks &amp; Players button automatically to each seat (and to the dummy hand, if being used).</li><li>This button only deals cards in the holder next to it. To start a new round, first press the Recall &amp; Shuffle button.</li></ul></ul></div><div><ul><li><b>Recall &amp; Shuffle</b></li><ul><li>This ends the current round, erases the activity log, and recalls and shuffles the cards.</li></ul></ul><div><ul><li><b>Take 1</b></li><ul><li>This sends one card from the main deck holder to the hand of the player pressing the button.</li></ul></ul></div></div></div><div><ul><li><b>Playing A Card</b></li><ul><li>When click to play is enabled:</li><ul><li>Any player can play the first trick of a new round. After that, the turn indicator moves to the next player. The turn indicator must be correct for click-to-play to work.</li><li>During a player's turn, clicking on a card will immediately play it to the selected play area.</li><li>While players are waiting for their turn, they can click on a card to stage it for play (it will raise up a few pixels above the other cards). Any card in that position when the turn indicator moves to that player will be immediately played.</li><li>If any of these scenarios are incompatible with the game you are playing, turn click to play off. You can always manually drag cards, even when click to play is enabled.</li></ul><li>The circles with numbers on the upper-left of each seat indicate the number of cards in that player's hand.</li></ul></ul></div><div><ul><li><b>Primary Scoreboard</b></li><ul><li>The red and green buttons above the scoreboard decrease and increase the score for the current round for the player pressing the button. Note: the +/- buttons may work on the secondary scoreboard instead; see below.</li><li>A new round is created every time the Recall &amp; Shuffle button is pressed.</li><li>Players can also click on the scoreboard widget directly. A pop-up prompts for which player score to set, which round, and a value. Entering data this way immediately overrides existing values in the selected round for the selected player.</li><li>If a score system was selected in the options menu, then an Add Card Points button, trump indicator, declarer indicator, and possibly a Transfer Score button are displayed at the bottom of the scoreboard.</li><ul><li>The trump indicator is set automatically based on the last bid suit button pressed by a player or by rolling the die (only displayed in some games in the upper right-hand corner for a random trump). But you can override that by clicking on the square trump widget to rotate through the options. If card point values are different for trump cards or when a bid of \"no trumps\" or \"all trumps\" changes point values, then this widget must be set correctly before entering scores. The indicator can be dragged around the room.</li><li>The Declarer indicator shows the player making the last bid. But you can override that by clicking on it to rotate through the names of the players.</li><li>The Add Card Points button will apply the pre-defined point values to the secondary scoreboard for the current round. If there are points already in the current round, pressing the button will replace the existing values with the new ones. Only cards in the holders near each players' seat are counted. There are 3 holders near each players' seat (not all are visible) and all 3 will be counted for that player.</li><li>The Transfer Score button is available in some pre-set games to move and/or convert scores between the secondary scoreboard and the main scoreboard. If available, check the game tips by hovering over the name of the pre-set. If not available, you need to manually enter values in the primary scoreboard before pressing the Recall &amp; Shuffle button.</li></ul></ul></ul><ul><li><b>Secondary Scoreboard</b></li><ul><li>The secondary scoreboard is a smaller scoreboard below the main one. It is used in many pre-sets as a temporary place to calculate interim scores, such as the value of captured card points.</li><li>In addition to the Card Points row, other rows may be available. Drag the slider to the right of the secondary scoreboard up and down to highlight different rows. The red and green +/- buttons work on whichever row is highlighted.</li><li>The red and green +/- buttons can only work on one scoreboard at a time. To reenable the buttons on the primary scoreboard, move the slider all the back up to the top.</li></ul></ul><ul><li><b>Bidding</b></li><ul><li>The square widget on the left side of the player's seat is used to indicate a bid value. The widget on the right is used to indicate the bid's suit.</li><li>Pressing either widget will open a menu in the middle of the screen only visible to that player. On that menu, the player can press numbers and/or suits to indicate a bid. Numbers are entered like a calculator one at a time. Use the blank square to erase a number entry and start over.</li><li>Bids are immediately reflected on the white square widgets for other players to see unless secret bidding is enabled.</li><li>Pressing the green Bid button will optionally display the bid in an activity log in the lower right corner in reverse chronological order. If secret bidding is enabled, the activity log only reports that the player made a bid. The bid history is erased when the cards are recalled for the next round.</li><li>If additional messages are enabled in the pre-set, then a white rectangular Message button appears above the activity log. Pressing that button allows players to choose from a selection of game-related messages that are posted in the activity log.</li><li>To close the bidding menu, press the Close button, the geen Bid button, or once again press one of the white square bidding widgets.</li><li>If secret bidding was enabled in the settings, then at the appropriate time, each player should press the Actions button to the right of the hand. In the pop-up menu, press the Show Bids button. Press the Actions button again to close the pop-up.</li></ul></ul><ul><li><b>Sorting</b></li><ul><li>A Sort button to the left of the hand will sort cards in the hand only for the player pressing the button. Suits are always sorted left to right in order: clubs, diamonds, hearts, spades when using the standard deck. Other decks have similar default sorting.</li><li>The first time a player presses the Sort button, the player is prompted to choose how to sort by value within each suit: high to low or low to high. After making the selection, the player will not see the option again until a new pre-set game is selected.</li><li>After making selections, all subsequent deals to those players will automatically be sorted.</li><li>In some pre-set games, pressing the sort button again after trumps is chosen will change the sort order.</li><li>Some pre-set games also add an additional sort button for unique behavior linked to that game.</li></ul></ul><ul><li><b>Take</b></li><ul><li>The Take button moves all cards played in the round to a holder belonging to the player pressing the button. The cards are turned face-down and placed into a pile.</li><ul><li>If using the common play holder, the cards are moved to the holder near the player's seat.</li><li>If not using the common play holder, the cards are moved to a holder behind and just slightly above and to the right of the holder near the player's seat. This holder is invisible, but can be used, so be careful if manually dragging cards.</li><li>If using the mini-holder to display captured cards, cards can be manually dragged from the holder with the captured cards to the mini-holder. Some games pre-sets do that automatically.</li></ul><li>Clicking the button will increase the count of the number of tricks taken by 1 in the trick scoring widget on the right side of the room.</li><li>The turn indicator moves to the seat of the player pressing the button to lead the next trick.</li></ul></ul><ul><li><b>Actions</b></li><ul><li>This displays a pop-up menu with other buttons that can be used in the game.</li><li>The Show Hand button will create a mini holder over the seat of the player pressing the button. Copies of the cards in the hand of the player will be displayed there in miniature. No player can interact with those copies. They appear and disappear as needed to reflect the cards in the hand of that player.</li><li>The Show Bid button is used as described above to reveal bids that had been secret.</li><li>The Show Arrow button displays a black and white arrow to the left of the hand that can point up or down. This is used in some pre-set games to indicate when low cards are high and vice versa.</li></ul></ul><ul><li><b>Items</b></li><ul><li>This displays a pop-up menu with multiple widgets that can be dragged around and used in the game.</li><li>Most of the widgets (except for the 4 card suits) change color to reflect the color of the player that took it.</li><li>The Label widget can be dragged by grabbing the thick border and you can type short messages in it by clicking in the text area.</li><li>The widgets with numbers can be clicked to change.</li><ul><li>The circular widgets change from 1 to x1, 6 to x6, etc.</li><li>The square widget is a doubling cube and cycles through x2, x4, x8, x16, x32, x64.</li></ul><li>To remove a single widget from the board, just drop it anywhere on the Items \"tray\".</li><li>A player can delete all of their own widgets by pressing the Recall Mine button.</li><li>Any player can delete all of the widgets in the room by pressing the Recall All button.</li></ul></ul><ul><li><b>Reset Scores</b></li><ul><li>The reset scores button will erase all player scores in the scoreboard widget and the trick count in the trick scoring widget. It also deletes all widgets taken from the Items \"tray\".</li></ul></ul><div><b style=\"color: rgb(45, 93, 168);\"><i>Making a New Pre-Set</i></b><br></div></div><div><br></div><div>If you are interested in adding your own pre-set (and hopefully contribute it back to the public library), then see the wiki discussion at&nbsp;https://github.com/96LawDawg/Cards-Tricks/wiki.</div>",
      "variantImage": "",
      "variant": "",
      "language": "en-US",
      "players": "2-8"
    }
  },
  "gameID16": {
    "id": "gameID16",
    "x": -267,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortDefault",
    "sort2": "suit",
    "roundsTemp": [
      "Card Points",
      "Adjustments"
    ],
    "displayArray": [
      [
        "trump",
        0
      ]
    ],
    "settingsArray": [
      [
        "showBidSuit",
        false
      ],
      [
        "showScore",
        true
      ],
      [
        "showTricks",
        true
      ],
      [
        "turnDirection",
        true
      ]
    ],
    "settingsDecksArray": [
      [
        "tempScore",
        true
      ]
    ],
    "gameID": true,
    "hintText": "\"Points are calculated automatically for cards in player piles after the Add Cards Points button is pressed. Press the Transfer Score button to move scores from the small temporary scoreboard to the main scoreboard.\\a\\a Hearts are 1 point each and Q♠ is 13 points. All other scores, including shooting the mooon and capturing all 26 points, must be manually accounted for.\"",
    "scoreSystem": [
      [],
      [
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1
      ],
      [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      []
    ],
    "preSetExceptionsRoutine": [
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "scale",
        "value": 0
      }
    ],
    "scoreExceptionsRoutine": [
      "var result = ${points}",
      {
        "func": "SELECT",
        "source": "otherCards",
        "property": "cardType",
        "value": "S 3Q"
      },
      {
        "func": "COUNT"
      },
      {
        "func": "IF",
        "operand1": "${COUNT}",
        "operand2": 1,
        "thenRoutine": [
          "var result = ${result} + 13"
        ]
      }
    ],
    "trumps": 4,
    "text": "Hearts",
    "y": 411
  },
  "gameID17": {
    "id": "gameID17",
    "x": -133,
    "y": 412,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortDefault",
    "sort2": "suit",
    "roundsTemp": [
      "Bags"
    ],
    "displayArray": [
      [
        "trump",
        0
      ],
      [
        "scoreButton",
        0
      ],
      [
        "transferScoreButton",
        0
      ]
    ],
    "settingsArray": [
      [
        "showBidSuit",
        false
      ],
      [
        "showScore",
        true
      ],
      [
        "showTricks",
        true
      ],
      [
        "turnDirection",
        true
      ]
    ],
    "settingsDecksArray": [
      [
        "tempScore",
        true
      ],
      [
        "teamScore",
        true
      ]
    ],
    "gameID": true,
    "hintText": "\"This room is only set up for 4-player partnership spades using a regular 52-card deck.\\a\\aUse bid widget near seat to enter bid. Be sure to press green Bid button when bid is ready. Only bid the number of tricks to be taken. Other bids (nil, 10 for 200, etc.) can be optionally be announced using the Message button.\\a\\aTeam bids and tricks taken are displayed in the scoreboard to the right of the screen.\\a\\a After round ends, enter score on main scoreboard using green and red +/- buttons.\\a\\a Bags can optionally be recorded on the small scoreboard in the bottom left. This is provided because the main scoreboard will not correctly reflect bags without adjustment in some negative score cases. To use the small scoreboard, move the slider until the Bags row is highlighted. Then use the green and red +/- buttons. Move the slider back to the top to use the +/- buttons on the large scoreboard again.\"",
    "scoreSystem": [
      [],
      [],
      [],
      []
    ],
    "preSetExceptionsRoutine": [
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "scale",
        "value": 0
      },
      {
        "func": "SET",
        "collection": [
          "trickCount"
        ],
        "property": "seats",
        "value": {
          "N - S": [
            "seat1",
            "seat5"
          ],
          "E - W": [
            "seat3",
            "seat7"
          ]
        }
      },
      {
        "func": "SET",
        "collection": [
          "trickCount"
        ],
        "property": "rounds",
        "value": [
          "Tricks",
          "Bids"
        ]
      },
      {
        "func": "SET",
        "collection": [
          "tempScoreboard"
        ],
        "property": "y",
        "value": 885
      },
      {
        "func": "SET",
        "collection": [
          "scoreboard"
        ],
        "property": "height",
        "value": 790
      }
    ],
    "text": "Spades",
    "messageArray": [
      {
        "value": "Default",
        "text": "Click here to choose message"
      },
      {
        "value": "10 for 200",
        "text": "10 for 200"
      },
      {
        "value": "Nil",
        "text": "Nil"
      },
      {
        "value": "Blind Nil",
        "text": "Blind Nil"
      },
      {
        "value": "Moon",
        "text": "Moon"
      },
      {
        "value": "Blind Moon",
        "text": "Blind Moon"
      },
      {
        "value": "Big Bemo",
        "text": "Big Bemo"
      },
      {
        "value": "Little Bemo",
        "text": "Little Bemo"
      },
      {
        "value": "Blind 6",
        "text": "Blind 6"
      },
      {
        "value": "Blind 7",
        "text": "Blind 7"
      },
      {
        "value": "Blind 8",
        "text": "Blind 8"
      },
      {
        "value": "Blind 9",
        "text": "Blind 9"
      }
    ],
    "bidRoutine": [
      "var bidNS = ${PROPERTY text OF bidValue1} + ${PROPERTY text OF bidValue5}",
      "var bidEW = ${PROPERTY text OF bidValue3} + ${PROPERTY text OF bidValue7}",
      {
        "func": "SCORE",
        "mode": "set",
        "property": "tricks",
        "round": 2,
        "seats": "seat1",
        "value": "${bidNS}"
      },
      {
        "func": "SCORE",
        "mode": "set",
        "property": "tricks",
        "round": 2,
        "seats": "seat3",
        "value": "${bidEW}"
      }
    ],
    "tempScoreReset": false
  },
  "capturedHolder1": {
    "type": "holder",
    "id": "capturedHolder1",
    "parent": "seat1",
    "fixedParent": true,
    "x": -227,
    "y": -130,
    "width": 604,
    "height": 190,
    "scale": 0,
    "layer": 1,
    "movableInEdit": false,
    "css": {
      "default": {
        "overflow": "hidden",
        "border": "1px solid black",
        "background": "#dddddd80"
      },
      "#enlarged": {
        "top": "calc(var(--roomTop) + var(--scale)*350px)",
        "left": "calc(var(--roomLeft) + var(--scale)*475px)",
        "right": "unset",
        "transform-origin": "top left"
      }
    },
    "dropOffsetX": 50,
    "dropOffsetY": 100,
    "enlarge": 1.3,
    "stackOffsetX": 45,
    "enterRoutine": [
      {
        "func": "SET",
        "collection": "child",
        "property": "scale",
        "value": 1.9
      },
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "IF",
        "condition": "${PROPERTY capturedEnterRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "${gameID}",
            "routine": "capturedEnterRoutine"
          }
        ]
      }
    ],
    "onEnter": {
      "activeFace": 1,
      "scale": 1.9
    },
    "dropShadow": true,
    "leaveRoutine": [
      {
        "func": "SET",
        "collection": "child",
        "property": "scale",
        "value": 1
      },
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "IF",
        "condition": "${PROPERTY capturedLeaveRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "${gameID}",
            "routine": "capturedLeaveRoutine"
          }
        ]
      }
    ],
    "onLeave": {
      "scale": 1
    },
    "dropLimit": 0
  },
  "capturedHolder2": {
    "inheritFrom": {
      "capturedHolder1": "*"
    },
    "type": "holder",
    "id": "capturedHolder2",
    "x": -78,
    "y": 5,
    "parent": "seat2",
    "scale": 0,
    "dropLimit": 0
  },
  "capturedHolder3": {
    "inheritFrom": {
      "capturedHolder1": "*"
    },
    "type": "holder",
    "id": "capturedHolder3",
    "x": -88,
    "y": 5,
    "parent": "seat3",
    "scale": 0,
    "dropLimit": 0
  },
  "capturedHolder4": {
    "inheritFrom": {
      "capturedHolder1": "*"
    },
    "type": "holder",
    "id": "capturedHolder4",
    "x": -78,
    "y": 5,
    "parent": "seat4",
    "scale": 0,
    "dropLimit": 0
  },
  "capturedHolder5": {
    "inheritFrom": {
      "capturedHolder1": "*"
    },
    "type": "holder",
    "id": "capturedHolder5",
    "x": -227,
    "y": 100,
    "parent": "seat5",
    "scale": 0,
    "dropLimit": 0
  },
  "capturedHolder6": {
    "inheritFrom": {
      "capturedHolder1": "*"
    },
    "type": "holder",
    "id": "capturedHolder6",
    "x": -383,
    "y": 5,
    "parent": "seat6",
    "scale": 0,
    "dropLimit": 0
  },
  "capturedHolder7": {
    "inheritFrom": {
      "capturedHolder1": "*"
    },
    "type": "holder",
    "id": "capturedHolder7",
    "x": -378,
    "y": 5,
    "parent": "seat7",
    "scale": 0,
    "dropLimit": 0
  },
  "capturedHolder8": {
    "inheritFrom": {
      "capturedHolder1": "*"
    },
    "type": "holder",
    "id": "capturedHolder8",
    "x": -383,
    "y": 5,
    "parent": "seat8",
    "scale": 0,
    "dropLimit": 0
  },
  "gameID18": {
    "id": "gameID18",
    "x": -526,
    "y": 532,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortDefault",
    "sort2": "suit",
    "roundsTemp": [
      "Card Points"
    ],
    "settingsArray": [
      [
        "capturedHolder",
        true
      ],
      [
        "showTricks",
        false
      ],
      [
        "showDiscard",
        true
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        10
      ],
      [
        "jokerCount",
        1
      ],
      [
        "seatCount",
        5
      ],
      [
        "tempScore",
        true
      ],
      [
        "variableScore",
        true
      ]
    ],
    "gameID": true,
    "hintText": "\"This room is set-up for 5 players. Scoring is automatic with 5 players using the Add Card Points and Transfer Score buttons. The sort button will move the Mighty, the Joker, and the Ripper (in that order) to a position above the higest trump card.\\a\\aTo make automatic scoring work, the declarer must indicate the bid using the bidding menu, the declarer's name must appear on the widget in the bottom-left corner, and variable teams must be set using the black/red/white widget below the seat. Point cards in the discard holder must be moved to the declarer or partner's holder.\\a\\aMinimum bid is 12. Score calculated using  2 * (Bid minus minimum bid) + (Points earned minus bid).\\a\\a\\a\\a At end of round, press Add Card Points button to enter total of captured cards on temporary small scoreboard. Check score, then press Transfer Score button to enter score on main scoreboard and perform additional calculations based on the rules.\\a\\a Using adjustments in the Options buttons, the room could be configured to play with a different number of players. The Add Card Points button should still work, but the Transfer Score button would not.\"",
    "text": "Mighty",
    "scoreSystem": [
      [
        0,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        1,
        1,
        1
      ],
      [],
      [],
      []
    ],
    "capturedArray": [
      [],
      [
        "C 01",
        "C 4K",
        "C 3Q",
        "C 2J",
        "C 10",
        "D 01",
        "D 4K",
        "D 3Q",
        "D 2J",
        "D 10",
        "S 01",
        "S 4K",
        "S 3Q",
        "S 2J",
        "S 10",
        "H 01",
        "H 4K",
        "H 3Q",
        "H 2J",
        "H 10"
      ],
      []
    ],
    "takeRoutine": [
      "//This sends the captured cards of the declarer and partner back to the face down backHolders for their seats. This first part calculates the index value for the declarer and partner.",
      {
        "func": "SELECT",
        "property": "id",
        "relation": "in",
        "value": [
          "teamGroup1",
          "teamGroup2",
          "teamGroup3",
          "teamGroup4",
          "teamGroup5",
          "teamGroup6",
          "teamGroup7",
          "teamGroup8"
        ]
      },
      {
        "func": "GET",
        "aggregation": "array",
        "property": "parent"
      },
      "var indexArray = []",
      "var teamArray = []",
      {
        "func": "FOREACH",
        "in": "${parent}",
        "loopRoutine": [
          {
            "func": "IF",
            "operand1": "${PROPERTY scale OF $value}",
            "operand2": 1,
            "thenRoutine": [
              "var indexValue = ${PROPERTY index OF $value}",
              "var indexArray = push ${indexValue}",
              "var teams = 'teamGroup' + ${indexValue}",
              "var teamArray = push ${teams}"
            ]
          }
        ]
      },
      "var declarer = ${PROPERTY text OF bidWinner}",
      {
        "func": "SELECT",
        "type": "seat",
        "property": "player",
        "value": "${declarer}"
      },
      {
        "func": "GET",
        "property": "index",
        "variable": "indexDeclarer"
      },
      "var teamDeclarerName = 'teamGroup' + ${indexDeclarer}",
      "var teamDeclarer = ${PROPERTY teamID OF $teamDeclarerName}",
      {
        "func": "SELECT",
        "property": "id",
        "relation": "in",
        "value": "${teamArray}"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "teamID",
        "value": "${teamDeclarer}"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "mode": "remove",
        "property": "id",
        "value": "${teamDeclarerName}"
      },
      {
        "func": "GET",
        "property": "index",
        "variable": "indexPartner"
      },
      "//Once the index values are known for the declarer and partner, this MOVEs any cards in the mini-holder for captured cards to the regular holder.",
      {
        "func": "IF",
        "condition": "${PROPERTY centerShow OF settings}",
        "thenRoutine": [
          "var toDeclarer = 'holder' + ${indexDeclarer}",
          "var toPartner = 'holder' + ${indexPartner}"
        ],
        "elseRoutine": [
          "var toDeclarer = 'backHolder' + ${indexDeclarer}",
          "var toPartner = 'backHolder' + ${indexPartner}"
        ]
      },
      {
        "func": "MOVE",
        "from": "capturedHolder${indexDeclarer}",
        "to": "${toDeclarer}",
        "count": 0
      },
      {
        "func": "MOVE",
        "from": "capturedHolder${indexPartner}",
        "to": "${toPartner}",
        "count": 0
      }
    ],
    "transferButtonReturn": false,
    "transferExceptionsRoutine": [
      "var indexPartner = 'none'",
      "var result = ${points}",
      "//This duplicates the same code from the first part of the takeRoutine. A call to a common routine is not used because it would be hard to get the 2 different values needed back as the result of the call.",
      {
        "func": "SELECT",
        "property": "id",
        "relation": "in",
        "value": [
          "teamGroup1",
          "teamGroup2",
          "teamGroup3",
          "teamGroup4",
          "teamGroup5",
          "teamGroup6",
          "teamGroup7",
          "teamGroup8"
        ]
      },
      {
        "func": "GET",
        "aggregation": "array",
        "property": "parent"
      },
      "var indexArray = []",
      "var teamArray = []",
      {
        "func": "FOREACH",
        "in": "${parent}",
        "loopRoutine": [
          {
            "func": "IF",
            "operand1": "${PROPERTY scale OF $value}",
            "operand2": 1,
            "thenRoutine": [
              "var indexValue = ${PROPERTY index OF $value}",
              "var indexArray = push ${indexValue}",
              "var teams = 'teamGroup' + ${indexValue}",
              "var teamArray = push ${teams}"
            ]
          }
        ]
      },
      "var declarer = ${PROPERTY text OF bidWinner}",
      {
        "func": "SELECT",
        "type": "seat",
        "property": "player",
        "value": "${declarer}"
      },
      {
        "func": "GET",
        "property": "index",
        "variable": "indexDeclarer"
      },
      "var teamDeclarerName = 'teamGroup' + ${indexDeclarer}",
      "var teamDeclarer = ${PROPERTY teamID OF $teamDeclarerName}",
      {
        "func": "SELECT",
        "property": "id",
        "relation": "in",
        "value": "${teamArray}"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "teamID",
        "value": "${teamDeclarer}"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "mode": "remove",
        "property": "id",
        "value": "${teamDeclarerName}"
      },
      {
        "func": "GET",
        "property": "index",
        "variable": "indexPartner"
      },
      "//Once the index values for the declarer and partner are known, get the combined score for both, figure out the bids, and whether the contract was won.",
      "var combined = ${PROPERTY _totals OF tempScoreboard}",
      "var combined = ${combined.$indexDeclarer}",
      "var bid = 'bidValue' + ${indexDeclarer}",
      "var bid = ${PROPERTY text OF $bid}",
      "var scoreLine = ${bid} - 12",
      "var overTake = ${combined} - ${bid}",
      "var overTake = abs ${overTake}",
      "var wonContract = ${combined} >= ${bid}",
      "var basicValue = ${scoreLine} * 2",
      "var basicValue = ${basicValue} + ${overTake}",
      {
        "func": "IF",
        "operand1": "${indexPartner}",
        "operand2": "none",
        "thenRoutine": [
          "//If declarer played alone",
          {
            "func": "IF",
            "condition": "${wonContract}",
            "thenRoutine": [
              "var pointsDeclarer = ${basicValue} * 4",
              "var pointsDefender = 0 - ${basicValue}",
              "var pointsPartner = 0"
            ],
            "elseRoutine": [
              "var pointsDeclarer = ${overTake} * 4",
              "var pointsDeclarer = 0 - ${pointsDeclarer}",
              "var pointsDefender = ${overTake}",
              "var pointsPartner = 0"
            ]
          }
        ],
        "elseRoutine": [
          "//If declarer played with a partner",
          {
            "func": "IF",
            "condition": "${wonContract}",
            "thenRoutine": [
              "var pointsDeclarer = ${basicValue} * 2",
              "var pointsPartner = ${basicValue}",
              "var pointsDefender = 0 - ${basicValue}"
            ],
            "elseRoutine": [
              "var pointsDeclarer = ${overTake} * 2",
              "var pointsDeclarer = 0 - ${pointsDeclarer}",
              "var pointsPartner = ${overTake}",
              "var pointsPartner = 0 - ${pointsPartner}",
              "var pointsDefender = ${overTake}"
            ]
          }
        ]
      },
      "var double1 = ${combined} == 20",
      "var double2 = ${combined} <= 9",
      "var double = ${double1} || ${double2}",
      {
        "func": "IF",
        "condition": "${double}",
        "thenRoutine": [
          "//If declarer and/or partner take all points, or if they take 9 or less points, then values double",
          "var pointsDeclarer = ${pointsDeclarer} * 2",
          "var pointsPartner = ${pointsPartner} * 2",
          "var pointsDefender = ${pointsDefender} * 2"
        ]
      },
      "//Score everybody as a defender since we haven't calculated who those are. Then set the values for Declarer and Partner (which are known) after that.",
      {
        "func": "SCORE",
        "mode": "set",
        "seats": [
          "seat1",
          "seat2",
          "seat3",
          "seat5",
          "seat7"
        ],
        "value": "${pointsDefender}",
        "round": "${PROPERTY currentRound OF scoreboard}"
      },
      {
        "func": "SCORE",
        "mode": "set",
        "seats": "seat${indexDeclarer}",
        "value": "${pointsDeclarer}",
        "round": "${PROPERTY currentRound OF scoreboard}"
      },
      {
        "func": "SCORE",
        "mode": "set",
        "seats": "seat${indexPartner}",
        "value": "${pointsPartner}",
        "round": "${PROPERTY currentRound OF scoreboard}"
      }
    ],
    "autoTeam": true,
    "displayArray": [
      [
        "mightyWidgets",
        1
      ]
    ],
    "sortPreExceptionsRoutine": [
      "var trump = ${PROPERTY trump OF trump}",
      {
        "func": "IF",
        "operand1": "${trump}",
        "operand2": 3,
        "thenRoutine": [
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "type": "card",
            "property": "cardType",
            "value": "D 01",
            "collection": "mighty"
          }
        ],
        "elseRoutine": [
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "type": "card",
            "property": "cardType",
            "value": "S 01",
            "collection": "mighty"
          }
        ]
      },
      {
        "func": "SET",
        "collection": "mighty",
        "property": "suit",
        "value": "${trump}"
      },
      {
        "func": "SET",
        "collection": "mighty",
        "property": "sortDefault",
        "value": 17
      },
      {
        "func": "IF",
        "operand1": "${trump}",
        "operand2": 1,
        "thenRoutine": [
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "type": "card",
            "property": "cardType",
            "value": "S 03",
            "collection": "ripper"
          }
        ],
        "elseRoutine": [
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "type": "card",
            "property": "cardType",
            "value": "C 03",
            "collection": "ripper"
          }
        ]
      },
      {
        "func": "SET",
        "collection": "ripper",
        "property": "suit",
        "value": "${trump}"
      },
      {
        "func": "SET",
        "collection": "ripper",
        "property": "sortDefault",
        "value": 15
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "type": "card",
        "property": "order",
        "value": 14,
        "collection": "blackJoker"
      },
      {
        "func": "SET",
        "collection": "blackJoker",
        "property": "suit",
        "value": "${trump}"
      },
      {
        "func": "SET",
        "collection": "blackJoker",
        "property": "sortDefault",
        "value": 16
      }
    ]
  },
  "mightyLabel": {
    "id": "mightyLabel",
    "parent": "mightyWidgets",
    "fixedParent": true,
    "width": 40,
    "height": 20,
    "movable": false,
    "movableInEdit": false,
    "css": {
      "color": "black"
    },
    "text": "Mighty"
  },
  "ripperLabel": {
    "id": "ripperLabel",
    "parent": "mightyWidgets",
    "fixedParent": true,
    "x": 60,
    "width": 40,
    "height": 20,
    "movable": false,
    "movableInEdit": false,
    "css": {
      "color": "black"
    },
    "text": "Ripper"
  },
  "mighty": {
    "id": "mighty",
    "parent": "mightyWidgets",
    "fixedParent": true,
    "y": 21,
    "width": 40,
    "height": 40,
    "borderRadius": 8,
    "movableInEdit": false,
    "css": {
      "background": "white",
      "border": "1px solid black",
      "color": "${PROPERTY textColor}",
      "font-size": "${PROPERTY fontSize}",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "faces": [
      {
        "text": "spades",
        "textColor": "black",
        "fontSize": "40px",
        "classes": "symbols"
      },
      {
        "text": "diamonds",
        "textColor": "#e50932",
        "fontSize": "40px",
        "classes": "symbols"
      }
    ],
    "movable": false,
    "x": 3
  },
  "ripper": {
    "id": "ripper",
    "parent": "mightyWidgets",
    "fixedParent": true,
    "x": 60,
    "y": 21,
    "width": 40,
    "height": 40,
    "borderRadius": 8,
    "movableInEdit": false,
    "css": {
      "background": "white",
      "border": "1px solid black",
      "color": "${PROPERTY textColor}",
      "font-size": "${PROPERTY fontSize}",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "faces": [
      {
        "text": "clubs",
        "textColor": "black",
        "fontSize": "40px",
        "classes": "symbols"
      },
      {
        "text": "spades",
        "textColor": "black",
        "fontSize": "40px",
        "classes": "symbols"
      }
    ],
    "movable": false
  },
  "mightyWidgets": {
    "id": "mightyWidgets",
    "x": 307,
    "y": 930,
    "height": 70,
    "width": 110,
    "resetProperties": {
      "x": 307,
      "y": 930
    },
    "scale": 0
  },
  "trackTrick3": {
    "inheritFrom": {
      "trackTrick1": [
        "!parent",
        "*"
      ]
    },
    "id": "trackTrick3",
    "x": 206,
    "y": 0,
    "text": 3,
    "faces": [
      {
        "text": 3,
        "fontSize": "70px"
      },
      {
        "text": "26 - 37",
        "fontSize": "33px"
      }
    ],
    "parent": "trackTrickHolder2"
  },
  "trackTrick4": {
    "inheritFrom": {
      "trackTrick1": [
        "!parent",
        "*"
      ]
    },
    "id": "trackTrick4",
    "x": 0,
    "y": 0,
    "text": 4,
    "faces": [
      {
        "text": 4,
        "fontSize": "70px"
      },
      {
        "text": "38 - 49",
        "fontSize": "33px"
      }
    ],
    "parent": "trackTrickHolder2"
  },
  "trackTrick0": {
    "id": "trackTrick0",
    "borderRadius": 8,
    "css": {
      "background": "lightgray",
      "color": "black",
      "font-size": "${PROPERTY fontSize}",
      "border": "1px solid gray",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "trackCard": true,
    "faces": [
      {
        "text": 0,
        "fontSize": "70px"
      },
      {
        "text": "None/\n125+",
        "fontSize": "33px"
      }
    ],
    "movableInEdit": false,
    "clickable": false,
    "parent": "trackTrickHolder2",
    "x": 103,
    "movable": false
  },
  "trackTrick1": {
    "id": "trackTrick1",
    "x": 0,
    "y": 0,
    "width": 100,
    "height": 100,
    "inheritFrom": {
      "trackTrick0": [
        "!parent",
        "*"
      ]
    },
    "faces": [
      {
        "text": 1,
        "fontSize": "70px"
      },
      {
        "text": "1 - 13",
        "fontSize": "33px"
      }
    ],
    "parent": "trackTrickHolder1"
  },
  "trackTrick2": {
    "inheritFrom": {
      "trackTrick1": [
        "!parent",
        "*"
      ]
    },
    "id": "trackTrick2",
    "x": 103,
    "y": 0,
    "text": 2,
    "faces": [
      {
        "text": 2,
        "fontSize": "70px"
      },
      {
        "text": "14 - 25",
        "fontSize": "33px"
      }
    ],
    "parent": "trackTrickHolder3"
  },
  "trackTrick5": {
    "inheritFrom": {
      "trackTrick1": [
        "!parent",
        "*"
      ]
    },
    "id": "trackTrick5",
    "x": 103,
    "y": 0,
    "text": 5,
    "faces": [
      {
        "text": 5,
        "fontSize": "70px"
      },
      {
        "text": "50 - 61",
        "fontSize": "33px"
      }
    ],
    "parent": "trackTrickHolder1"
  },
  "trackTrick6": {
    "inheritFrom": {
      "trackTrick1": [
        "!parent",
        "*"
      ]
    },
    "id": "trackTrick6",
    "x": 206,
    "y": 0,
    "text": 6,
    "faces": [
      {
        "text": 6,
        "fontSize": "70px"
      },
      {
        "text": "62 - 73",
        "fontSize": "33px"
      }
    ],
    "parent": "trackTrickHolder1"
  },
  "trackTrick7": {
    "inheritFrom": {
      "trackTrick1": [
        "!parent",
        "*"
      ]
    },
    "id": "trackTrick7",
    "x": 206,
    "y": 0,
    "text": 7,
    "faces": [
      {
        "text": 7,
        "fontSize": "70px"
      },
      {
        "text": "74 - 85",
        "fontSize": "33px"
      }
    ],
    "parent": "trackTrickHolder3"
  },
  "trackTrick8": {
    "inheritFrom": {
      "trackTrick1": [
        "!parent",
        "*"
      ]
    },
    "id": "trackTrick8",
    "x": 0,
    "y": 0,
    "text": 8,
    "faces": [
      {
        "text": 8,
        "fontSize": "70px"
      },
      {
        "text": "86 - 97",
        "fontSize": "33px"
      }
    ],
    "parent": "trackTrickHolder3"
  },
  "trackTrickBack": {
    "type": "",
    "id": "trackTrickBack",
    "x": 1150,
    "y": 600,
    "width": 309,
    "height": 308,
    "movableInEdit": false,
    "css": {
      "border": "2px solid black",
      "background": "white"
    },
    "preventPiles": true,
    "borderRadius": 8,
    "movable": false,
    "scale": 0
  },
  "trackTrickHolder1": {
    "type": "holder",
    "id": "trackTrickHolder1",
    "dropTarget": {
      "trackCard": true
    },
    "parent": "trackTrickBack",
    "width": 308,
    "height": 102,
    "movableInEdit": false,
    "dropOffsetX": 0,
    "dropOffsetY": 0,
    "stackOffsetX": 103,
    "classes": "transparent"
  },
  "trackTrickHolder2": {
    "inheritFrom": {
      "trackTrickHolder1": "*"
    },
    "type": "holder",
    "id": "trackTrickHolder2",
    "x": 0,
    "y": 102
  },
  "trackTrickHolder3": {
    "inheritFrom": {
      "trackTrickHolder1": "*"
    },
    "type": "holder",
    "id": "trackTrickHolder3",
    "x": 0,
    "y": 204
  },
  "gameID19": {
    "id": "gameID19",
    "x": -397,
    "y": 530,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortDefault",
    "sort2": "suit",
    "roundsTemp": [
      "Card Points"
    ],
    "settingsArray": [
      [
        "showTricks",
        true
      ],
      [
        "showBidSuit",
        false
      ],
      [
        "showBidValue",
        false
      ],
      [
        "showBidHistory",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        9
      ],
      [
        "hideCards",
        4
      ],
      [
        "seatCount",
        3
      ],
      [
        "tempScore",
        true
      ]
    ],
    "scoreSystem": [
      [],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        14,
        10,
        20,
        3,
        4
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        10,
        2,
        3,
        4
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        8,
        0,
        10,
        2,
        3,
        4
      ]
    ],
    "gameID": true,
    "hintText": "\"An original game by David Parlett with modificans by Johnathan Kandell. Rules at https://www.parlettgames.uk/oricards/tractric.html\\a\\a Use the Tricks/Jass button to the right of the 3x3 grid to switch between the original game and the modified game. The original game counts tricks won. The modified game uses Jass scoring.\\a\\a Tricks are displayed in the scoreboard above the 3x3 grid. Jass points can be autoscored at the end of the round using the Add Card Points button.\"",
    "trumpIndicator": true,
    "sortExceptionsRoutine": [
      {
        "func": "IF",
        "operand1": "${PROPERTY text OF trackTrickSelectButton}",
        "operand2": "Tricks",
        "thenRoutine": [
          {
            "func": "SORT",
            "collection": "DEFAULT",
            "key": "${PROPERTY sort1 OF gameID0}",
            "reverse": "${PROPERTY sortDirection OF $seatID}"
          },
          {
            "func": "SORT",
            "collection": "DEFAULT",
            "key": "${PROPERTY sort2 OF gameID0}"
          }
        ],
        "elseRoutine": [
          "var trump = ${PROPERTY trump OF trump}",
          "var isNum = ${trump} / 1",
          {
            "func": "IF",
            "operand1": "${isNum}",
            "operand2": "${trump}",
            "thenRoutine": [
              {
                "func": "SELECT",
                "source": "DEFAULT",
                "property": "suit",
                "value": "${trump}",
                "collection": "trumpSuit"
              },
              {
                "func": "IF",
                "condition": "${reverseSort}",
                "thenRoutine": [
                  {
                    "func": "SORT",
                    "collection": "trumpSuit",
                    "key": "sortJassTrump"
                  }
                ],
                "elseRoutine": [
                  {
                    "func": "SORT",
                    "collection": "trumpSuit",
                    "key": "sortJassTrump",
                    "reverse": "${PROPERTY sortDirection OF $seatID}"
                  }
                ]
              },
              {
                "func": "SORT",
                "key": "suit"
              }
            ]
          }
        ]
      }
    ],
    "scoreExceptionsRoutine": [
      "var result = ${points}",
      "var last = ${PROPERTY lastPressedBy OF takeButton}",
      {
        "func": "IF",
        "operand1": "${value}",
        "operand2": "${last}",
        "thenRoutine": [
          "var result = ${result} + 5"
        ]
      }
    ],
    "text": "Tracktrick",
    "displayArray": [
      [
        "trackTrickBack",
        1
      ],
      [
        "suitDice",
        1
      ],
      [
        "transferScoreButton",
        0
      ]
    ]
  },
  "trackTrickSelectButton": {
    "type": "button",
    "id": "trackTrickSelectButton",
    "parent": "trackTrickBack",
    "fixedParent": true,
    "x": 310,
    "y": 5,
    "width": 60,
    "height": 35,
    "css": {
      "border-radius": "0px 10px 10px 0px"
    },
    "text": "Tricks",
    "clickRoutine": [
      {
        "func": "SELECT",
        "property": "id",
        "value": "trackTrick0"
      },
      {
        "func": "SET",
        "property": "clickable",
        "value": true
      },
      {
        "func": "CLICK"
      },
      {
        "func": "SET",
        "property": "clickable",
        "value": false
      },
      "var text = ${PROPERTY text} == 'Tricks'",
      {
        "func": "IF",
        "condition": "${text}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "text",
            "value": "Jass"
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "text",
            "value": "Tricks"
          }
        ]
      }
    ]
  },
  "trackTrickShuffleButton": {
    "type": "button",
    "id": "trackTrickShuffleButton",
    "parent": "trackTrickBack",
    "fixedParent": true,
    "x": 310,
    "y": 50,
    "width": 60,
    "height": 35,
    "css": {
      "border-radius": "0px 10px 10px 0px"
    },
    "text": "Shuffle",
    "clickRoutine": [
      {
        "func": "SELECT",
        "property": "id",
        "value": "trackTrick0",
        "collection": "center"
      },
      {
        "func": "SET",
        "collection": "center",
        "property": "parent",
        "value": null
      },
      {
        "func": "MOVE",
        "from": "trackTrickHolder1",
        "to": "tempHolder",
        "count": 0
      },
      {
        "func": "MOVE",
        "from": "trackTrickHolder2",
        "to": "tempHolder",
        "count": 0
      },
      {
        "func": "MOVE",
        "from": "trackTrickHolder3",
        "to": "tempHolder",
        "count": 0
      },
      {
        "func": "SELECT",
        "property": "parent",
        "value": "tempHolder"
      },
      {
        "func": "SHUFFLE",
        "collection": "DEFAULT"
      },
      {
        "func": "CALL",
        "routine": "setParentRoutine",
        "arguments": {
          "count": 3,
          "holder": "trackTrickHolder1"
        }
      },
      {
        "func": "CALL",
        "routine": "setParentRoutine",
        "arguments": {
          "count": 1,
          "holder": "trackTrickHolder2"
        }
      },
      {
        "func": "SET",
        "collection": "center",
        "property": "parent",
        "value": "trackTrickHolder2"
      },
      {
        "func": "CALL",
        "routine": "setParentRoutine",
        "arguments": {
          "count": 1,
          "holder": "trackTrickHolder2"
        }
      },
      {
        "func": "CALL",
        "routine": "setParentRoutine",
        "arguments": {
          "count": 3,
          "holder": "trackTrickHolder3"
        }
      }
    ],
    "setParentRoutine": [
      {
        "func": "FOREACH",
        "range": [
          "${count}"
        ],
        "loopRoutine": [
          {
            "func": "SELECT",
            "property": "parent",
            "value": "tempHolder"
          },
          {
            "func": "GET",
            "property": "z",
            "aggregation": "min"
          },
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "trackCard",
            "value": true
          },
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "z",
            "value": "${z}"
          },
          {
            "func": "SET",
            "property": "parent",
            "value": "${holder}"
          }
        ]
      }
    ]
  },
  "dummyHand": {
    "type": "holder",
    "id": "dummyHand",
    "parent": "seat1",
    "fixedParent": true,
    "x": -225,
    "y": -75,
    "width": 604,
    "height": 190,
    "layer": 3,
    "movableInEdit": false,
    "css": {
      "default": {
        "overflow": "hidden",
        "border": "1px solid black"
      },
      "#enlarged": {
        "top": "calc(var(--roomTop) + var(--scale)*350px)",
        "left": "calc(var(--roomLeft) + var(--scale)*475px)",
        "right": "unset",
        "transform-origin": "top left"
      }
    },
    "dropOffsetX": 50,
    "dropOffsetY": 100,
    "dropShadow": true,
    "enlarge": 1.3,
    "onEnter": {
      "activeFace": 1,
      "scale": 1.9
    },
    "onLeave": {
      "scale": 1
    },
    "stackOffsetX": 45,
    "enterRoutine": [
      {
        "func": "SET",
        "collection": "child",
        "property": "scale",
        "value": 1.9
      }
    ],
    "leaveRoutine": [
      {
        "func": "SET",
        "collection": "child",
        "property": "scale",
        "value": 1
      }
    ],
    "scale": 0,
    "dropLimit": 0
  },
  "takeDummyButton": {
    "type": "button",
    "id": "takeDummyButton",
    "x": 891,
    "y": 652,
    "width": 63,
    "height": 63,
    "text": "Dummy Takes",
    "clickRoutine": [
      {
        "func": "CALL",
        "widget": "takeButton",
        "routine": "clickRoutine",
        "arguments": {
          "seatID": "seat1",
          "seatIndex": 1
        }
      }
    ],
    "scale": 0
  },
  "playerAidDetail1": {
    "type": "seat",
    "id": "playerAidDetail1",
    "index": 9,
    "x": 1790,
    "tricks": 0,
    "tempScore": [],
    "showing": false,
    "y": 37,
    "score6": [
      "Spades are trumps",
      "Clubs are trumps",
      "Diamonds are trumps",
      "Hearts are trumps",
      "No trumps",
      "No trumps; rank inverted",
      "No trumps; alternate rank",
      "No trumps; swap rank after 6 tricks",
      "Any of the above contracts"
    ],
    "score": [],
    "score12": [
      "Spades are trumps",
      "Clubs are trumps",
      "Diamonds are trumps",
      "Hearts are trumps",
      "No trumps",
      "No trumps; rank inverted",
      "No trumps; alternate rank",
      "No trumps; swap rank after 6 tricks",
      "Any of the above contracts"
    ],
    "displayEmpty": "only for playerAids",
    "score2": [
      "Winner 2 sticks; others 1 potato each",
      "Loser 2 potatoes; others 1 stick each",
      "Winner 2 potatoes; others 1 stick each",
      "Ties 1 potato each; other 2 sticks",
      "High/low score 1 stick each; other 2 potatoes"
    ],
    "score21": [
      "High/low 1 stick each; middle 1 potato each",
      "3 potatoes; others 1 stick each",
      "3 sticks; others 1 potato each",
      "-Tie high: ties nothing; 3rd player 1 potato; lowest 1 stick\n-Tie middle: ties 1 potato each; high/low 1 stick each\n-Tie low: high 1 stick; 2nd player 1 potato; ties nothing",
      "Odd score 1 stick; 1 random other player gets potato"
    ],
    "score25": [
      "Run of 3, same suit",
      "Run of 3, same suit, includes trump KQ",
      "Run of 4 same suit",
      "Run of 4, same suit, includes trump KQ",
      "4 K, Q, A or 10",
      "4 J",
      "KQ of trumps"
    ],
    "movableInEdit": false,
    "score26": [
      3,
      2,
      1,
      0
    ],
    "score27": [
      30,
      20,
      10,
      0
    ],
    "score29": [
      10,
      20,
      30
    ],
    "score30": [
      "1 each",
      1,
      "n/a",
      1,
      "n/a",
      1,
      "n/a",
      "n/a"
    ],
    "playerAidSeat": true,
    "score31": [
      "AT - S - H - D - C - NT",
      "K-Q-C-J-10-9-8-7-6",
      "10-9-8-K-Q-C-J-7-6"
    ],
    "score33": [
      "Take back all your counters",
      "Take back all your counters unless another player wins all tricks",
      "Take back 1/2 your counters if win 1+ tricks but have 0 penalties"
    ],
    "player": "Description"
  },
  "playerAid6": {
    "type": "scoreboard",
    "id": "playerAid6",
    "x": 1225,
    "y": 265,
    "width": 360,
    "height": 305,
    "clickable": false,
    "css": {
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "roundLabel": "Contract",
    "rounds": [
      "Spades",
      "Clubs",
      "Diamonds",
      "Hearts",
      "Obenabe",
      "Undenufe",
      "Slalom",
      "Gustav",
      "Joker 1/2"
    ],
    "seats": "playerAidDetail1",
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "onlyVisibleForSeat": [],
    "playerAid": true,
    "scoreProperty": "score6",
    "movable": false,
    "movableInEdit": false
  },
  "gameID20": {
    "id": "gameID20",
    "x": -406,
    "y": 1012,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "text": "Königrufen",
    "gameID": true,
    "hintText": "\"You may use Message button to announce contracts. You can use the Items button and the doubling cube for doubles and redoubles (Kontra). Click on small red, black, and white letter icons to set teams once known.\\a\\a During play, you can use the Bonus player aid to show what bonuses are available. If bonus is announced, use Items button and drag the 'x2' cube and drop it on the appropriate line. When bonus is won or lost, drag the appropriate value circle to the line on the player aid.\\a\\a At end of round, be sure all talon cards are in the appropriate player holders.\\a\\aPress Add Card Points button to calculate the card points. Use the slider to highlight the Contract row on the small scoreboard and enter values using the +/- buttons at top left of screen.\\a\\a Use slider to select Bonus row and enter values. When done, press Transfer Score button to move scores from the small scoreboard to the main scoreboard. Only the sum of the Contract and Bonus rows is transferred. \"",
    "messageArray": [
      {
        "value": "Default",
        "text": "Click here to choose message"
      },
      {
        "value": "Pass",
        "text": "Pass"
      },
      {
        "value": "My Game/Mein Spiel",
        "text": "My Game/Mein Spiel"
      },
      {
        "value": "Called King/Rufer",
        "text": "Called King/Rufer"
      },
      {
        "value": "Misere/Trischaken",
        "text": "Misere/Trischaken"
      },
      {
        "value": "Piccolo/Piccolo",
        "text": "Piccolo/Piccolo"
      },
      {
        "value": "Zwiccolo/Zwiccolo",
        "text": "Zwiccolo/Zwiccolo"
      },
      {
        "value": "Called, Without Talon/Solorufer",
        "text": "Called, Without Talon/Solorufer"
      },
      {
        "value": "Begger/Bettel",
        "text": "Begger/Bettel"
      },
      {
        "value": "Called With a Bird/Besserrufer",
        "text": "Called With a Bird/Besserrufer"
      },
      {
        "value": "No Trump With 3/Farbendreier",
        "text": "No Trump With 3/Farbendreier"
      },
      {
        "value": "Self With Six/Sechserdreier",
        "text": "Self With Six/Sechserdreier"
      },
      {
        "value": "Alone With Three/Dreier",
        "text": "Alone With Three/Dreier"
      },
      {
        "value": "Open Piccolo/Piccolo Ouvert",
        "text": "Open Piccolo/Piccolo Ouvert"
      },
      {
        "value": "No Trump, Without Talon/Farbensolo",
        "text": "No Trump, Without Talon/Farbensolo"
      },
      {
        "value": "Open Begger/Bettel Ouvert",
        "text": "Open Begger/Bettel Ouvert"
      },
      {
        "value": "Alone Without Talon/Solodreier",
        "text": "Alone Without Talon/Solodreier"
      }
    ],
    "roundsTemp": [
      "Card Points",
      "Contract",
      "Bonus"
    ],
    "scoreSystem": [
      [
        0,
        0.333,
        1.333,
        2.333,
        3.333,
        4.333
      ]
    ],
    "settingsArray": [
      [
        "showBidSuit",
        false
      ],
      [
        "showBidValue",
        false
      ],
      [
        "showTricks",
        false
      ],
      [
        "showDiscard",
        false
      ],
      [
        "turnDirection",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        12
      ],
      [
        "deckType",
        2
      ],
      [
        "seatCount",
        4
      ],
      [
        "tempScore",
        true
      ],
      [
        "variableScore",
        true
      ]
    ],
    "sort1": "sortDefault",
    "sort2": "suit",
    "preSetExceptionsRoutine": [
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "scale",
        "value": 0
      }
    ],
    "displayArray": [
      [
        "playerAidButton",
        1
      ]
    ],
    "playerAidDetail1": "Description",
    "transferExceptionsRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Transferring score ..."
          },
          {
            "type": "subtitle",
            "text": "This will transfer the score in the temporary scoreboard to the main one. Only the Contract row and the Bonus row will be transferred. The Card Points row is only displayed as an aid to assist in determining if players made their contract. The Card Points row should automatically show the same for each player on the same 'team' for this round. However, Contract and Bonus row values must be entered separately for each player."
          }
        ],
        "confirmButtonText": "Yes",
        "cancelButtonText": "No"
      },
      {
        "func": "FOREACH",
        "in": "${PROPERTY _totals OF tempScoreboard}",
        "loopRoutine": [
          "var seat = 'seat' + ${key}",
          "var cardPoints = ${PROPERTY tempScore OF $seat}",
          "var cardPoints = ${cardPoints.0}",
          "var value = ${value} - ${cardPoints}",
          {
            "func": "SCORE",
            "mode": "set",
            "property": "score",
            "round": "${PROPERTY currentRound OF scoreboard}",
            "seats": "${seat}",
            "value": "${value}"
          }
        ]
      }
    ],
    "transferButtonReturn": false,
    "recallRoutine": [
      {
        "func": "CALL",
        "widget": "itemsRecallAllButton",
        "routine": "clickRoutine"
      }
    ]
  },
  "playerAid12": {
    "type": "scoreboard",
    "id": "playerAid12",
    "x": 1225,
    "width": 360,
    "height": 305,
    "clickable": false,
    "css": {
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "onlyVisibleForSeat": [],
    "roundLabel": "Contract",
    "rounds": [
      "Spades",
      "Clubs",
      "Diamonds",
      "Hearts",
      "Obenabe",
      "Undenufe",
      "Slalom",
      "Gustav",
      "Joker 1/2"
    ],
    "seats": "playerAidDetail1",
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "playerAid": true,
    "scoreProperty": "score12",
    "movable": false,
    "movableInEdit": false,
    "y": 265
  },
  "messageButton": {
    "id": "messageButton",
    "x": 1274,
    "y": 703,
    "width": 70,
    "height": 35,
    "borderRadius": 6,
    "movable": false,
    "movableInEdit": false,
    "css": {
      "background": "#ffffff",
      "border": "1px solid black",
      "font-size": "16px",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center",
      "color": "black"
    },
    "text": "Message",
    "coiffeurBids": [
      "Obenabe",
      "Undenufe",
      "Slalom",
      "Gustav"
    ],
    "clickRoutine": [
      "var preSet = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "select",
            "variable": "message",
            "value": "Default",
            "options": "${PROPERTY messageArray OF $preSet}"
          }
        ],
        "confirmButtonText": "Submit Message",
        "cancelButtonText": "Cancel"
      },
      "var isIn = ${message} in ${PROPERTY coiffeurBids}",
      {
        "func": "SET",
        "collection": [
          "bids"
        ],
        "property": "message",
        "value": "${message}"
      },
      {
        "func": "IF",
        "operand1": "${message}",
        "relation": "!=",
        "operand2": "Default",
        "thenRoutine": [
          {
            "func": "IF",
            "condition": "${isIn}",
            "thenRoutine": [
              {
                "func": "SET",
                "collection": [
                  "trump"
                ],
                "property": "customFace",
                "value": 5
              }
            ]
          },
          "var oldText = ${PROPERTY text OF bids}",
          "var text = '\\u000a'",
          "var text = ${text} + ${message}",
          "var text = ${text} + ': '",
          "var text = ${text} + ${playerName}",
          "var text = ${text} + ${oldText}",
          {
            "func": "SET",
            "collection": [
              "bids"
            ],
            "property": "text",
            "value": "${text}"
          }
        ]
      }
    ],
    "scale": 0
  },
  "itemsHolder16": {
    "inheritFrom": {
      "itemsHolder1": "*"
    },
    "type": "holder",
    "id": "itemsHolder16",
    "x": 25,
    "y": 73,
    "dropTarget": {
      "item": 16
    },
    "width": 25,
    "height": 25,
    "dropOffsetX": 0,
    "dropOffsetY": 0,
    "parent": "itemsBox"
  },
  "itemsHolder17": {
    "inheritFrom": {
      "itemsHolder16": "*"
    },
    "type": "holder",
    "id": "itemsHolder17",
    "x": 76,
    "y": 73,
    "dropTarget": {
      "item": 17
    },
    "width": 25,
    "height": 25,
    "parent": "itemsBox"
  },
  "itemsHolder18": {
    "inheritFrom": {
      "itemsHolder16": "*"
    },
    "type": "holder",
    "id": "itemsHolder18",
    "x": 127,
    "y": 73,
    "dropTarget": {
      "item": 18
    },
    "width": 25,
    "height": 25,
    "parent": "itemsBox"
  },
  "itemsHolder19": {
    "inheritFrom": {
      "itemsHolder16": "*"
    },
    "type": "holder",
    "id": "itemsHolder19",
    "x": 178,
    "y": 73,
    "dropTarget": {
      "item": 19
    },
    "width": 25,
    "height": 25,
    "parent": "itemsBox"
  },
  "itemsHolder20": {
    "inheritFrom": {
      "itemsHolder16": "*"
    },
    "type": "holder",
    "id": "itemsHolder20",
    "x": 229,
    "y": 73,
    "dropTarget": {
      "item": 20
    },
    "width": 25,
    "height": 25,
    "parent": "itemsBox"
  },
  "itemsHolder21": {
    "inheritFrom": {
      "itemsHolder16": "*"
    },
    "type": "holder",
    "id": "itemsHolder21",
    "x": 280,
    "y": 73,
    "dropTarget": {
      "item": 21
    },
    "width": 25,
    "height": 25,
    "parent": "itemsBox"
  },
  "itemsHolder22": {
    "inheritFrom": {
      "itemsHolder16": "*"
    },
    "type": "holder",
    "id": "itemsHolder22",
    "x": 331,
    "y": 73,
    "dropTarget": {
      "item": 22
    },
    "width": 25,
    "height": 25,
    "parent": "itemsBox"
  },
  "itemsHolder23": {
    "inheritFrom": {
      "itemsHolder16": "*"
    },
    "type": "holder",
    "id": "itemsHolder23",
    "x": 383,
    "y": 73,
    "dropTarget": {
      "item": 23
    },
    "width": 25,
    "height": 25,
    "parent": "itemsBox"
  },
  "itemsHolder24": {
    "inheritFrom": {
      "itemsHolder16": "*"
    },
    "type": "holder",
    "id": "itemsHolder24",
    "x": 434,
    "y": 73,
    "dropTarget": {
      "item": 24
    },
    "width": 25,
    "height": 25,
    "parent": "itemsBox"
  },
  "itemsHolder25": {
    "inheritFrom": {
      "itemsHolder16": "*"
    },
    "type": "holder",
    "id": "itemsHolder25",
    "x": 485,
    "y": 73,
    "dropTarget": {
      "item": 25
    },
    "width": 25,
    "height": 25,
    "parent": "itemsBox"
  },
  "itemsHolder26": {
    "inheritFrom": {
      "itemsHolder16": "*"
    },
    "type": "holder",
    "id": "itemsHolder26",
    "x": 536,
    "y": 73,
    "dropTarget": {
      "item": 26
    },
    "width": 25,
    "height": 25,
    "parent": "itemsBox"
  },
  "playerAid9a": {
    "id": "playerAid9a",
    "parent": "playerAid9",
    "fixedParent": true,
    "x": 74,
    "y": 55,
    "width": 420,
    "height": 173,
    "scale": 0.75,
    "layer": -4,
    "movable": false,
    "movableInEdit": false,
    "enlarge": 1.3,
    "image": "/assets/540552680_36949"
  },
  "playerAid9b": {
    "id": "playerAid9b",
    "parent": "playerAid9",
    "fixedParent": true,
    "x": 82,
    "y": 172,
    "width": 403,
    "height": 346,
    "scale": 0.77,
    "layer": -4,
    "movable": false,
    "movableInEdit": false,
    "enlarge": 1.3,
    "image": "/assets/-1916416668_55183"
  },
  "gamesJassLabel": {
    "id": "gamesJassLabel",
    "x": -548,
    "y": -374,
    "width": 400,
    "borderRadius": 10,
    "css": {
      "font-size": "60px",
      "background": "black",
      "border": "5px solid white",
      "color": "white",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "text": "Jass",
    "height": 140
  },
  "gamesStandardLabel": {
    "id": "gamesStandardLabel",
    "x": -540,
    "y": 119,
    "width": 400,
    "borderRadius": 10,
    "css": {
      "font-size": "60px",
      "background": "black",
      "border": "5px solid white",
      "color": "white",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "text": "Standard Deck Misc",
    "height": 140
  },
  "gamesOtherLabel": {
    "id": "gamesOtherLabel",
    "x": -533,
    "y": 1143,
    "width": 400,
    "height": 140,
    "borderRadius": 10,
    "css": {
      "font-size": "60px",
      "background": "black",
      "border": "5px solid white",
      "color": "white",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "text": "Other Decks Misc"
  },
  "gamesTarotLabel": {
    "id": "gamesTarotLabel",
    "x": -532,
    "y": 836,
    "width": 400,
    "height": 140,
    "borderRadius": 10,
    "css": {
      "font-size": "60px",
      "background": "black",
      "border": "5px solid white",
      "color": "white",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "text": "Tarot"
  },
  "playerAid2": {
    "type": "scoreboard",
    "id": "playerAid2",
    "x": 1225,
    "y": 300,
    "width": 360,
    "height": 257,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "css": {
      "default": {
        "font-size": "14px"
      },
      ".scoreboard td:first-child": {
        "--firstColWidth": "120px"
      },
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "onlyVisibleForSeat": [],
    "roundLabel": "Scenario",
    "rounds": [
      "1 wins all tricks",
      "1 wins no tricks",
      "1 wins 100+ points",
      "2 win same points",
      "All others"
    ],
    "scoreProperty": "score2",
    "seats": "playerAidDetail1",
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "playerAid": true
  },
  "gameID21": {
    "id": "gameID21",
    "x": -136,
    "y": -91,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "text": "Molotow Jass",
    "sort1": "sortDefault",
    "sort2": "suit",
    "roundsTemp": [
      "Card Points"
    ],
    "settingsArray": [
      [
        "showBidHistory",
        false
      ],
      [
        "showBidSuit",
        false
      ],
      [
        "showBidValue",
        false
      ],
      [
        "showTricks",
        false
      ],
      [
        "turnDirection",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        9
      ],
      [
        "hideCards",
        4
      ],
      [
        "seatCount",
        4
      ],
      [
        "tempScore",
        true
      ],
      [
        "variableScore",
        false
      ]
    ],
    "scoreSystem": [
      [],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        14,
        10,
        20,
        3,
        4
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        10,
        2,
        3,
        4
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        8,
        0,
        10,
        2,
        3,
        4
      ]
    ],
    "gameID": true,
    "hintText": "\"After round is over, press Add Card Points button. Use player aid to determine scoring (1 stick = +1 point; 1 potato = -2 points). Enter points on main scoreboard using red/green +/- buttons.\"",
    "trumpIndicator": true,
    "sortExceptionsRoutine": [
      "var trump = ${PROPERTY trump OF trump}",
      "var isNum = ${trump} / 1",
      {
        "func": "IF",
        "operand1": "${isNum}",
        "operand2": "${trump}",
        "thenRoutine": [
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "suit",
            "value": "${trump}",
            "collection": "trumpSuit"
          },
          {
            "func": "IF",
            "condition": "${reverseSort}",
            "thenRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortJassTrump"
              }
            ],
            "elseRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortJassTrump",
                "reverse": "${PROPERTY sortDirection OF $seatID}"
              }
            ]
          },
          {
            "func": "SORT",
            "key": "suit"
          }
        ]
      }
    ],
    "scoreExceptionsRoutine": [
      "var result = ${points}",
      "var last = ${PROPERTY lastPressedBy OF takeButton}",
      {
        "func": "IF",
        "operand1": "${value}",
        "operand2": "${last}",
        "thenRoutine": [
          "var result = ${result} + 5"
        ]
      }
    ],
    "displayArray": [
      [
        "playerAidButton",
        1
      ],
      [
        "transferScoreButton",
        0
      ]
    ],
    "playerAidDetail1": "Scoring"
  },
  "playerAid21": {
    "type": "scoreboard",
    "id": "playerAid21",
    "x": 1225,
    "y": 300,
    "width": 360,
    "height": 325,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "css": {
      "default": {
        "font-size": "15px"
      },
      ".scoreboard td:first-child": {
        "--firstColWidth": "100px !important"
      },
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "onlyVisibleForSeat": [],
    "roundLabel": "Scenario",
    "rounds": [
      "4 different totals; all < 100",
      "1 wins between\n100 and 156",
      "1 wins 157",
      "2-way tie",
      "3-way tie"
    ],
    "scoreProperty": "score21",
    "seats": "playerAidDetail1",
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "playerAid": true
  },
  "playerAid20": {
    "id": "playerAid20",
    "width": 1,
    "height": 1,
    "movable": false,
    "movableInEdit": false,
    "onlyVisibleForSeat": [],
    "layer": 14,
    "playerAid": true,
    "y": -126,
    "x": 115
  },
  "playerAid20a": {
    "id": "playerAid20a",
    "parent": "playerAid20",
    "fixedParent": true,
    "height": 508,
    "movable": false,
    "movableInEdit": false,
    "css": {
      "default": {
        "background-size": "900px 500px",
        "background-position": "0%"
      },
      "::after": {
        "content": "url(${PROPERTY image})",
        "display": "none",
        "position": "absolute",
        "margin-top": "4px",
        "margin-left": "0px",
        "color": "black"
      },
      ":hover::after": {
        "display": "block"
      }
    },
    "image": "/assets/-1621614558_232776",
    "width": 107,
    "x": 315,
    "y": 100,
    "scale": 1.15
  },
  "versionButton": {
    "type": "button",
    "id": "versionButton",
    "x": 320,
    "y": 42,
    "width": 65,
    "height": 35,
    "css": {
      "default": {
        "font-size": "14px",
        "color": "white",
        "background": "black",
        "border-color": "lightgray"
      },
      ":hover": {
        "border-color": "black",
        "background": "white",
        "color": "black"
      }
    },
    "text": "Version",
    "clickRoutine": [
      "var preSet = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "select",
            "variable": "version",
            "value": "${PROPERTY versionNumber}",
            "options": "${PROPERTY versionArray OF $preSet}"
          }
        ],
        "confirmButtonText": "Choose version",
        "cancelButtonText": "Cancel"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "versionNumber",
        "value": "${version}"
      },
      {
        "func": "IF",
        "operand1": "${version}",
        "relation": ">",
        "operand2": 0,
        "thenRoutine": [
          "var version = 'version' + ${version}",
          "var versionProp = ${PROPERTY $version OF $preSet}",
          {
            "func": "FOREACH",
            "in": "${versionProp}",
            "loopRoutine": [
              {
                "func": "SET",
                "collection": [
                  "${preSet}"
                ],
                "property": "${key}",
                "value": "${value}"
              }
            ]
          }
        ]
      },
      {
        "func": "CALL",
        "widget": "preSetsButton",
        "routine": "setupRoutine"
      }
    ],
    "movableInEdit": false,
    "versionNumber": "0",
    "scale": 0
  },
  "cloneButton": {
    "type": "button",
    "id": "cloneButton",
    "x": 1500,
    "y": 660,
    "height": 30,
    "css": {
      "default": {
        "color": "white",
        "background": "green",
        "border-color": "darkgreen"
      },
      ":hover": {
        "border-color": "green",
        "background": "lightgreen",
        "color": "black"
      }
    },
    "clickRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Cloning cards ..."
          },
          {
            "type": "subtitle",
            "text": "This will clone all cards in the Discard holder from this game. They will be deleted when a new game pre-set is selected or when the room is reloaded from its saved state. Are you sure?"
          }
        ],
        "confirmButtonText": "Yes",
        "cancelButtonText": "No"
      },
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "value": "discard"
      },
      {
        "func": "CLONE",
        "properties": {
          "clonedCard": true
        }
      }
    ],
    "text": "Clone",
    "scale": 0
  },
  "gameID22": {
    "id": "gameID22",
    "x": -406,
    "y": 1318,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort2": "sortState",
    "roundsTemp": [
      "Card Points"
    ],
    "settingsArray": [
      [
        "centerShow",
        true
      ],
      [
        "showBidSuit",
        false
      ],
      [
        "showBidValue",
        false
      ],
      [
        "showBidHistory",
        false
      ],
      [
        "showTricks",
        false
      ]
    ],
    "sort1": "suit",
    "scoreSystem": [
      [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        0,
        0,
        0,
        0,
        -10
      ],
      [],
      [],
      []
    ],
    "gameID": true,
    "hintText": "\"Choose number of players between 2 and 5 using the Decks & Players button in lower right corner.\\a\\a The current point total of cards played to the center area are displayed directly above the center holder.\\a\\a At the end of the round, press the Add Card Points button to calculate the total of captured cards. Press Transfer Score button to move total from the temporary small scoreboard to the main scoreboard.\"",
    "settingsDecksArray": [
      [
        "cardCount",
        10
      ],
      [
        "deckType",
        3
      ],
      [
        "seatCount",
        4
      ],
      [
        "tempScore",
        true
      ]
    ],
    "hideCardsByType": [
      "11 red",
      "12 red",
      "13 red",
      "14 red",
      "11 green",
      "12 green",
      "13 green",
      "14 green",
      "11 yellow",
      "12 yellow",
      "13 yellow",
      "14 yellow",
      "11 orange",
      "12 orange",
      "13 orange",
      "14 orange",
      "11 black",
      "12 black",
      "13 black",
      "14 black",
      "-5 auction",
      "x2 auction",
      "ally auction"
    ],
    "cardsExceptionsRoutine": [
      {
        "func": "SELECT",
        "property": "clonedCard",
        "value": true
      },
      {
        "func": "DELETE"
      },
      "var cloneCount = ${PROPERTY seatCount OF settingsDecks} - 1",
      {
        "func": "SELECT",
        "type": "card",
        "property": "deck",
        "value": "crowDeck"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "cardType",
        "value": "0 crow"
      },
      {
        "func": "CLONE",
        "count": "${cloneCount}",
        "properties": {
          "clonedCard": true
        }
      }
    ],
    "text": "State (Similar to Ohio)",
    "displayArray": [
      [
        "trump",
        0
      ]
    ],
    "preSetExceptionsRoutine": [
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "scale",
        "value": 0
      },
      {
        "func": "SET",
        "collection": [
          "statePoints"
        ],
        "property": "scale",
        "value": 1
      }
    ],
    "dealRoutine": [
      {
        "func": "MOVE",
        "from": "hand",
        "to": "deckHolder",
        "count": 0
      },
      {
        "func": "FOREACH",
        "in": [
          1,
          2,
          3,
          4,
          5
        ],
        "loopRoutine": [
          "var seatNum = ${key} + 1",
          {
            "func": "IF",
            "operand1": "${seatNum}",
            "operand2": 4,
            "thenRoutine": [
              "var seatNum = 7"
            ]
          },
          {
            "func": "SELECT",
            "type": "card",
            "property": "_ancestor",
            "value": "deckHolder"
          },
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "suit",
            "value": "${value}"
          },
          {
            "func": "SET",
            "property": "parent",
            "value": "tempHolder"
          },
          {
            "func": "MOVE",
            "from": "tempHolder",
            "to": "seat${seatNum}",
            "count": 0
          },
          {
            "func": "MOVE",
            "from": "tempHolder",
            "to": "deckHolder",
            "count": 0
          },
          {
            "func": "SELECT",
            "type": "card",
            "property": "_ancestor",
            "value": "deckHolder"
          },
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "suit",
            "value": 0,
            "max": 1
          },
          {
            "func": "SET",
            "property": "parent",
            "value": "tempHolder"
          },
          {
            "func": "MOVE",
            "from": "tempHolder",
            "to": "seat${seatNum}"
          },
          {
            "func": "MOVE",
            "from": "tempHolder",
            "to": "deckHolder",
            "count": 0
          }
        ]
      },
      {
        "func": "SORT",
        "holder": "hand",
        "key": "sortState"
      }
    ],
    "centerEnterRoutine": [
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "value": "centerHolder"
      },
      {
        "func": "GET",
        "property": "sortState",
        "aggregation": "sum"
      },
      {
        "func": "SET",
        "collection": [
          "statePoints"
        ],
        "property": "text",
        "value": "${sortState}"
      }
    ],
    "centerLeaveRoutine": [
      {
        "func": "CALL",
        "routine": "centerEnterRoutine"
      }
    ]
  },
  "8oho": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "1 black",
    "id": "8oho",
    "staged": false,
    "parent": "pile2"
  },
  "64sh": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "2 black",
    "id": "64sh",
    "staged": false,
    "parent": "pile2"
  },
  "dk9p": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "3 black",
    "id": "dk9p",
    "staged": false,
    "parent": "pile2"
  },
  "f44h": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "4 black",
    "id": "f44h",
    "staged": false,
    "parent": "pile2"
  },
  "d2im": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "5 black",
    "id": "d2im",
    "staged": false,
    "parent": "pile2"
  },
  "iuob": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "6 black",
    "id": "iuob",
    "staged": false,
    "parent": "pile2"
  },
  "fzbc": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "7 black",
    "id": "fzbc",
    "staged": false,
    "parent": "pile2"
  },
  "gjox": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "8 black",
    "id": "gjox",
    "staged": false,
    "parent": "pile2"
  },
  "l7jt": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "9 black",
    "id": "l7jt",
    "staged": false,
    "parent": "pile2"
  },
  "zcx7": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "10 black",
    "id": "zcx7",
    "staged": false,
    "parent": "pile2"
  },
  "f9al": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "11 black",
    "id": "f9al",
    "staged": false,
    "parent": "pile2",
    "activeFace": 1
  },
  "g7mu": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "12 black",
    "id": "g7mu",
    "staged": false,
    "parent": "pile2"
  },
  "m28x": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "13 black",
    "id": "m28x",
    "parent": "pile2",
    "staged": false
  },
  "uu8d": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "14 black",
    "id": "uu8d",
    "parent": "pile2",
    "staged": false
  },
  "statePoints": {
    "id": "statePoints",
    "x": 751,
    "y": 285,
    "height": 20,
    "movable": false,
    "movableInEdit": false,
    "css": {
      "font-size": "22px",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "text": 0,
    "scale": 0
  },
  "gameID23": {
    "id": "gameID23",
    "x": -265,
    "y": 527,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "suitTruco",
    "displayArray": [
      [
        "trump",
        0
      ],
      [
        "scoreButton",
        0
      ],
      [
        "transferScoreButton",
        0
      ]
    ],
    "settingsArray": [
      [
        "showBidSuit",
        false
      ],
      [
        "showBidValue",
        false
      ],
      [
        "showScore",
        true
      ],
      [
        "showBidHistory",
        false
      ],
      [
        "showTricks",
        false
      ],
      [
        "turnDirection",
        false
      ],
      [
        "centerFace",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        3
      ],
      [
        "hideCards",
        9
      ],
      [
        "teamScore",
        true
      ]
    ],
    "gameID": true,
    "hintText": "\"Choose from a version below. If playing Paulista (default), press the Deal button to give 3 cards to each player. Then click the top card to show the vira.\\a\\a If playing Mineriro, the mão should press Take 1 three times. After mão accepts a batch of cards, press Deal to give 3 cards to each player that does not already have 3 cards.\\a\\a If playing a mão de ferro round, each player should take one card at a time from the main pile and drag it to the play area. Do not deal cards as they are always delivered face-up in the hand.\\a\\a To play a card from the hand, click it once. It is played face down in the center area. Click it again to turn it over (when not prohibited by rule).\\a\\a At end of round, one player from winning team press green +1 button to add 1 point to their score.\"",
    "preSetExceptionsRoutine": [
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "scale",
        "value": 0
      }
    ],
    "bidRoutine": [
      "var bidNS = ${PROPERTY text OF bidValue1} + ${PROPERTY text OF bidValue5}",
      "var bidEW = ${PROPERTY text OF bidValue3} + ${PROPERTY text OF bidValue7}",
      {
        "func": "SCORE",
        "mode": "set",
        "property": "tricks",
        "round": 2,
        "seats": "seat1",
        "value": "${bidNS}"
      },
      {
        "func": "SCORE",
        "mode": "set",
        "property": "tricks",
        "round": 2,
        "seats": "seat3",
        "value": "${bidEW}"
      }
    ],
    "text": "Truco",
    "versionArray": [
      {
        "value": "0",
        "text": "Click here to choose version"
      },
      {
        "value": "1",
        "text": "Truco Paulista"
      },
      {
        "value": "2",
        "text": "Truco Mineiro"
      }
    ],
    "version2": {
      "sort2": "sortTrucoMineiro",
      "sort1": "suitTruco"
    },
    "version1": {
      "sort2": "sortTrucoPaulista",
      "sort1": "suitTruco"
    },
    "sort2": "sortTrucoPaulista",
    "sortExceptionsRoutine": [
      {
        "func": "SORT",
        "collection": "DEFAULT",
        "key": "${PROPERTY sort1}"
      },
      {
        "func": "SORT",
        "collection": "DEFAULT",
        "key": "${PROPERTY sort2}",
        "reverse": "${PROPERTY sortDirection OF $seatID}"
      }
    ],
    "sortPreExceptionsRoutine": [
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "turnedCard",
        "value": null
      },
      "// Get the sort order of the card turned up on the pile and set that value on this widget.",
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "value": "deckHolder"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "activeFace",
        "value": 1
      },
      {
        "func": "GET",
        "property": "sortTrucoPaulista"
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "turnedCard",
        "value": "${sortTrucoPaulista}"
      },
      "//Calculate what the highest card should be and set those cards to be the highest priority in the osrt order.",
      {
        "func": "SELECT",
        "type": "card",
        "property": "deck",
        "value": "deck1",
        "collection": "allCards"
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY turnedCard}",
        "operand2": 2,
        "thenRoutine": [
          "var highest = 11"
        ],
        "elseRoutine": [
          "var highest = ${PROPERTY turnedCard} - 1"
        ]
      },
      {
        "func": "SELECT",
        "source": "allCards",
        "property": "sortTrucoPaulista",
        "value": "${highest}"
      },
      {
        "func": "SET",
        "property": "sortTrucoPaulista",
        "value": 1
      }
    ],
    "turnedCard": 8,
    "dealLimit": 3
  },
  "playerAid20b": {
    "id": "playerAid20b",
    "x": 1478,
    "y": 270,
    "width": 466,
    "height": 319,
    "css": {
      "#enlarged": {
        "top": "calc(var(--roomTop) + var(--scale)*270px)",
        "left": "calc(var(--roomLeft) + var(--scale)*1183px)",
        "right": "unset",
        "transform-origin": "top left"
      }
    },
    "enlarge": 1,
    "image": "/assets/-1385636741_20708",
    "fixedParent": true,
    "parent": "playerAid20"
  },
  "gameID24": {
    "id": "gameID24",
    "x": -135,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "text": "Israeli Whist",
    "sort1": "sortDefault",
    "sort2": "suit",
    "roundsTemp": [
      "Card Points"
    ],
    "displayArray": [
      [
        "scoreButton",
        0
      ],
      [
        "score+10",
        1
      ],
      [
        "trump",
        1
      ]
    ],
    "gameID": true,
    "hintText": "\"Use bid widgets to enter bids. That is required for automatic scoring. At the end of the round, press Score button to calculate and enter scores.\"",
    "y": 525,
    "autoTeam": false,
    "transferButtonReturn": false,
    "preSetExceptionsRoutine": [
      {
        "func": "SET",
        "collection": [
          "scoreSpecial"
        ],
        "property": "scale",
        "value": 1
      }
    ],
    "scoreSpecialRoutine": [
      "var under = ${PROPERTY text OF bidValue1} + ${PROPERTY text OF bidValue3}",
      "var under = ${under} + ${PROPERTY text OF bidValue5}",
      "var under = ${under} + ${PROPERTY text OF bidValue7}",
      "var under = ${under} < 13",
      {
        "func": "FOREACH",
        "in": [
          1,
          3,
          5,
          7
        ],
        "loopRoutine": [
          "var bidValue = 'bidValue' + ${value}",
          "var seat = 'seat' + ${value}",
          "var isZero = ${PROPERTY text OF $bidValue} == 0",
          "var isExact = ${PROPERTY tricks OF $seat} == ${PROPERTY text OF $bidValue}",
          {
            "func": "IF",
            "condition": "${isZero}",
            "thenRoutine": [
              "// If player bid 0 tricks",
              {
                "func": "IF",
                "condition": "${isExact}",
                "thenRoutine": [
                  "// and took 0 tricks",
                  {
                    "func": "IF",
                    "condition": "${under}",
                    "thenRoutine": [
                      "// and game is 'under'",
                      "var score = 50"
                    ],
                    "elseRoutine": [
                      "// and game is 'over'",
                      "var score = 30"
                    ]
                  }
                ],
                "elseRoutine": [
                  "// and took at least 1 trick",
                  "var score = -50",
                  "var tricks = ${PROPERTY tricks OF $seat} * 10",
                  "var tricks = ${tricks} - 10",
                  "var score = ${score} + ${tricks}"
                ]
              }
            ],
            "elseRoutine": [
              "// If player bid at least one trick",
              {
                "func": "IF",
                "condition": "${isExact}",
                "thenRoutine": [
                  "// and took exactly as many tricks as bid",
                  "var score = ${PROPERTY tricks OF $seat} pow 2",
                  "var score = ${score} + 10"
                ],
                "elseRoutine": [
                  "// and took something other than tricks bid",
                  "var score = ${PROPERTY tricks OF $seat} - ${PROPERTY text OF $bidValue}",
                  "var score = abs ${score}",
                  "var score = ${score} * -10"
                ]
              }
            ]
          },
          {
            "func": "SCORE",
            "mode": "set",
            "property": "score",
            "round": "${PROPERTY currentRound OF scoreboard}",
            "seats": "${seat}",
            "value": "${score}"
          }
        ]
      }
    ]
  },
  "gameID25": {
    "id": "gameID25",
    "y": 16,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortAceTen",
    "sort2": "suit",
    "text": "Klaverjassen",
    "roundsTemp": [
      "Captured Points",
      "Captured Combo"
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        8
      ],
      [
        "hideCards",
        6
      ],
      [
        "seatCount",
        4
      ],
      [
        "teamScore",
        true
      ],
      [
        "tempScore",
        true
      ]
    ],
    "settingsArray": [
      [
        "showTricks",
        false
      ],
      [
        "showBidValue",
        false
      ]
    ],
    "scoreSystem": [
      [
        0,
        6,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        9,
        5,
        14,
        1,
        3
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        14,
        10,
        20,
        3,
        4
      ],
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        10,
        2,
        3,
        4
      ],
      [
        0,
        19,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        10,
        2,
        3,
        4
      ]
    ],
    "gameID": true,
    "hintText": "\"Player that chooses trumps must use bid widget near seat so that automatic scoring works properly.\\a\\a After round is over, press Add Card Points button. Ten points for the player taking the last trick are automatically added. Bonus points must be manually completed in the small scoreboard using the scrollbar to highlight the row and press the red/green +/- buttons.\\a\\a When ready to enter final score on main scoreboard, press Transfer Score button. Points are automatically calculated.\"",
    "preSetExceptionsRoutine": [
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "faces",
        "value": "${PROPERTY trumpFaces}"
      }
    ],
    "sortExceptionsRoutine": [
      "var trump = ${PROPERTY trump OF trump}",
      "var isNum = ${trump} / 1",
      {
        "func": "IF",
        "operand1": "${isNum}",
        "operand2": "${trump}",
        "thenRoutine": [
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "suit",
            "value": "${trump}",
            "collection": "trumpSuit"
          },
          {
            "func": "IF",
            "condition": "${reverseSort}",
            "thenRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortCoincheTrump"
              }
            ],
            "elseRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortCoincheTrump",
                "reverse": "${PROPERTY sortDirection OF $seatID}"
              }
            ]
          },
          {
            "func": "SORT",
            "key": "suit"
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY text OF trump}",
        "operand2": "All\nTrump",
        "thenRoutine": [
          {
            "func": "IF",
            "condition": "${reverseSort}",
            "thenRoutine": [
              {
                "func": "SORT",
                "key": "sortCoincheTrump"
              }
            ],
            "elseRoutine": [
              {
                "func": "SORT",
                "key": "sortCoincheTrump",
                "reverse": "${PROPERTY sortDirection OF $seatID}"
              }
            ]
          },
          {
            "func": "SORT",
            "key": "suit"
          }
        ]
      }
    ],
    "trumpIndicator": true,
    "scoreExceptionsRoutine": [
      "var result = ${points}",
      "var last = ${PROPERTY lastPressedBy OF takeButton}",
      {
        "func": "IF",
        "operand1": "${value}",
        "operand2": "${last}",
        "thenRoutine": [
          "var result = ${result} + 10"
        ]
      }
    ],
    "x": -543,
    "displayArray": [
      [
        "playerAidButton",
        1
      ],
      [
        "bidWinner",
        0
      ]
    ],
    "transferButtonReturn": false,
    "playerAidDetail1": "Bonus (Run Order: A/K/Q/J/10/9/8/7)",
    "transferExceptionsRoutine": [
      {
        "func": "SELECT",
        "collection": [
          "bidSuit1",
          "bidSuit3",
          "bidSuit5",
          "bidSuit7"
        ],
        "property": "text",
        "relation": "!=",
        "value": ""
      },
      {
        "func": "GET",
        "property": "parent"
      },
      {
        "func": "SELECT",
        "property": "id",
        "value": "${parent}"
      },
      {
        "func": "GET",
        "property": "index"
      },
      "var isS = ${index} == 1",
      "var isN = ${index} == 5",
      "var isNS = ${isN} || ${isS}"
    ],
    "customFaceCount": 5
  },
  "playerAid25": {
    "type": "scoreboard",
    "id": "playerAid25",
    "x": 1225,
    "width": 360,
    "height": 245,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "css": {
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "onlyVisibleForSeat": [],
    "roundLabel": "Value",
    "rounds": [
      20,
      50,
      40,
      70,
      100,
      200,
      20
    ],
    "seats": "playerAidDetail1",
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "playerAid": true,
    "scoreProperty": "score25",
    "y": 260
  },
  "3w0o": {
    "width": 30,
    "height": 30,
    "item": 18,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "svgReplaces": {
      "#000000": "color"
    },
    "text": 1,
    "css": {
      "border": "1px solid ${PROPERTY color2}",
      "color": "${PROPERTY color2}",
      "background": "${PROPERTY color}",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "borderRadius": 30,
    "faces": [
      {
        "text": 3
      },
      {
        "text": "x3"
      }
    ],
    "clonedFrom": "ll3d",
    "itemMarker": true,
    "ownedBy": null,
    "id": "3w0o",
    "parent": "itemsHolder18",
    "clickable": false
  },
  "yi6b": {
    "x": 4,
    "y": 4,
    "image": "/assets/561096434_3030",
    "width": 50,
    "height": 50,
    "item": 10,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "240e",
    "svgReplaces": {
      "#000000": "color"
    },
    "itemMarker": true,
    "ownedBy": null,
    "id": "yi6b",
    "parent": "itemsHolder10",
    "clickable": false
  },
  "6qt4": {
    "width": 30,
    "height": 30,
    "item": 17,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "svgReplaces": {
      "#000000": "color"
    },
    "text": 1,
    "css": {
      "border": "1px solid ${PROPERTY color2}",
      "color": "${PROPERTY color2}",
      "background": "${PROPERTY color}",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "borderRadius": 30,
    "faces": [
      {
        "text": 2
      },
      {
        "text": "x2"
      }
    ],
    "clonedFrom": "lhgg",
    "itemMarker": true,
    "ownedBy": null,
    "id": "6qt4",
    "parent": "itemsHolder17",
    "clickable": false
  },
  "h904": {
    "x": 4,
    "y": 4,
    "image": "/assets/401943957_1066",
    "width": 50,
    "height": 50,
    "item": 8,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "j957",
    "svgReplaces": {
      "#000000": "color"
    },
    "itemMarker": true,
    "ownedBy": null,
    "id": "h904",
    "parent": "itemsHolder8",
    "clickable": false
  },
  "vzn7": {
    "x": 4,
    "y": 4,
    "width": 36,
    "height": 40,
    "color": "#fcf0d4",
    "css": "border-radius: 50%/35%;",
    "image": "/i/game-pieces/3D/Cube-3D.svg",
    "svgReplaces": {
      "#primaryColor": "color",
      "#secondaryColor": "secondaryColor",
      "#borderColor": "borderColor",
      "#borderWidth": "borderWidth"
    },
    "borderColor": "white",
    "borderWidth": 1,
    "secondaryColor": "black",
    "item": 3,
    "layer": 10,
    "clonedFrom": "4y43",
    "color2": "#000000",
    "color3": "#f8dd9f",
    "itemMarker": true,
    "ownedBy": null,
    "id": "vzn7",
    "parent": "itemsHolder3",
    "clickable": false
  },
  "yywx": {
    "type": "label",
    "text": "Label",
    "x": 4,
    "y": 8,
    "item": 7,
    "movable": true,
    "css": {
      "border": "10px solid ${PROPERTY color3}",
      "background": "${PROPERTY color}",
      "color": "${PROPERTY color2}"
    },
    "color": "#fcf0d4",
    "layer": 10,
    "clonedFrom": "ryv1",
    "color2": "#000000",
    "color3": "#f8dd9f",
    "borderRadius": 8,
    "editable": true,
    "width": 110,
    "itemMarker": true,
    "ownedBy": null,
    "clickable": null,
    "id": "yywx",
    "parent": "itemsHolder7"
  },
  "sprn": {
    "x": 4,
    "y": 4,
    "width": 35,
    "height": 40,
    "color": "#fcf0d4",
    "css": "border-radius: 80% 80% 40% 110%",
    "image": "/i/game-pieces/3D/Pin-3D.svg",
    "svgReplaces": {
      "#borderWidth": "borderWidth",
      "#borderColor": "borderColor",
      "#primaryColor": "color"
    },
    "borderColor": "black",
    "borderWidth": "1",
    "item": 1,
    "layer": 10,
    "clonedFrom": "yk8q",
    "color2": "#000000",
    "color3": "#f8dd9f",
    "itemMarker": true,
    "ownedBy": null,
    "id": "sprn",
    "parent": "itemsHolder1",
    "clickable": false
  },
  "k9on": {
    "x": 4,
    "y": 4,
    "width": 35,
    "height": 35,
    "color": "#fcf0d4",
    "css": "border-radius: 50%;",
    "image": "/i/game-pieces/3D/Marble-3D.svg",
    "svgReplaces": {
      "#primaryColor": "color",
      "#secondaryColor": "secondaryColor",
      "#borderColor": "borderColor",
      "#borderWidth": "borderWidth"
    },
    "borderColor": "#ffffff",
    "borderWidth": 1,
    "secondaryColor": "#000000",
    "item": 2,
    "clonedFrom": "i6se",
    "layer": 10,
    "color2": "#000000",
    "color3": "#f8dd9f",
    "itemMarker": true,
    "ownedBy": null,
    "id": "k9on",
    "parent": "itemsHolder2",
    "clickable": false
  },
  "kt1e": {
    "width": 30,
    "height": 30,
    "item": 16,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "svgReplaces": {
      "#000000": "color"
    },
    "text": 1,
    "css": {
      "border": "1px solid ${PROPERTY color2}",
      "color": "${PROPERTY color2}",
      "background": "${PROPERTY color}",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "borderRadius": 30,
    "faces": [
      {
        "text": 1
      },
      {
        "text": "x1"
      }
    ],
    "clonedFrom": "g894",
    "itemMarker": true,
    "ownedBy": null,
    "id": "kt1e",
    "parent": "itemsHolder16",
    "clickable": false
  },
  "ftel": {
    "width": 30,
    "height": 30,
    "item": 25,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "svgReplaces": {
      "#000000": "color"
    },
    "text": 1,
    "css": {
      "border": "1px solid ${PROPERTY color2}",
      "color": "${PROPERTY color2}",
      "background": "${PROPERTY color}",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "borderRadius": 30,
    "faces": [
      {
        "text": 10
      },
      {
        "text": "x10"
      }
    ],
    "clonedFrom": "5n7p",
    "itemMarker": true,
    "ownedBy": null,
    "id": "ftel",
    "parent": "itemsHolder25",
    "clickable": false
  },
  "95mt": {
    "width": 30,
    "height": 30,
    "item": 26,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "svgReplaces": {
      "#000000": "color"
    },
    "text": 1,
    "css": {
      "border": "1px solid ${PROPERTY color2}",
      "color": "${PROPERTY color2}",
      "background": "${PROPERTY color}",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "faces": [
      {
        "text": "x2"
      },
      {
        "text": "x4"
      },
      {
        "text": "x8"
      },
      {
        "text": "x16"
      },
      {
        "text": "x32"
      },
      {
        "text": "x64"
      }
    ],
    "clonedFrom": "aijn",
    "borderRadius": 3,
    "itemMarker": true,
    "ownedBy": null,
    "id": "95mt",
    "parent": "itemsHolder26",
    "clickable": false
  },
  "6wrx": {
    "x": 15,
    "y": -15,
    "width": 20,
    "rotation": 60,
    "activeFace": 2,
    "color": "#fcf0d4",
    "faces": [
      {
        "image": "i/game-pieces/3D/Road-3D.svg",
        "rotation": 0
      },
      {
        "image": "i/game-pieces/3D/Road240-3D.svg",
        "rotation": 60
      },
      {
        "image": "i/game-pieces/3D/Road90-3D.svg",
        "rotation": 90
      },
      {
        "image": "i/game-pieces/3D/Road120-3D.svg",
        "rotation": 300
      }
    ],
    "image": "i/game-pieces/3D/Road240-3D.svg",
    "svgReplaces": {
      "#primaryColor": "color",
      "#borderColor": "borderColor",
      "#borderWidth": "borderWidth"
    },
    "note": "Game designer: You can remove any face you may not need. That way you can limit rotation",
    "borderColor": "#000000",
    "borderWidth": 1,
    "item": 5,
    "layer": 10,
    "clonedFrom": "tatk",
    "height": 75,
    "color2": "#000000",
    "color3": "#f8dd9f",
    "itemMarker": true,
    "ownedBy": null,
    "id": "6wrx",
    "parent": "itemsHolder5",
    "clickable": false
  },
  "z60k": {
    "y": 4,
    "x": 4,
    "width": 50,
    "height": 50,
    "image": "i/icons/spades.svg",
    "item": 15,
    "itemColor": "#e50932",
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "ov75",
    "itemMarker": true,
    "ownedBy": null,
    "id": "z60k",
    "parent": "itemsHolder15",
    "clickable": false
  },
  "gw03": {
    "y": 4,
    "x": 4,
    "width": 50,
    "height": 50,
    "image": "i/icons/clubs.svg",
    "item": 14,
    "itemColor": "#e50932",
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "eqqc",
    "itemMarker": true,
    "ownedBy": null,
    "id": "gw03",
    "parent": "itemsHolder14",
    "clickable": false
  },
  "uevu": {
    "width": 30,
    "height": 30,
    "item": 20,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "svgReplaces": {
      "#000000": "color"
    },
    "text": 1,
    "css": {
      "border": "1px solid ${PROPERTY color2}",
      "color": "${PROPERTY color2}",
      "background": "${PROPERTY color}",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "borderRadius": 30,
    "faces": [
      {
        "text": 5
      },
      {
        "text": "x5"
      }
    ],
    "clonedFrom": "bosr",
    "itemMarker": true,
    "ownedBy": null,
    "id": "uevu",
    "parent": "itemsHolder20",
    "clickable": false
  },
  "3pk6": {
    "x": -4,
    "y": -4,
    "image": "/assets/1223694940_1675",
    "width": 50,
    "height": 50,
    "item": 6,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "31of",
    "svgReplaces": {
      "#000000": "color"
    },
    "itemMarker": true,
    "ownedBy": null,
    "id": "3pk6",
    "parent": "itemsHolder6",
    "clickable": false
  },
  "18op": {
    "width": 30,
    "height": 30,
    "item": 19,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "svgReplaces": {
      "#000000": "color"
    },
    "text": 1,
    "css": {
      "border": "1px solid ${PROPERTY color2}",
      "color": "${PROPERTY color2}",
      "background": "${PROPERTY color}",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "borderRadius": 30,
    "faces": [
      {
        "text": 4
      },
      {
        "text": "x4"
      }
    ],
    "clonedFrom": "sunn",
    "itemMarker": true,
    "ownedBy": null,
    "id": "18op",
    "parent": "itemsHolder19",
    "clickable": false
  },
  "dwg8": {
    "width": 30,
    "height": 30,
    "item": 21,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "svgReplaces": {
      "#000000": "color"
    },
    "text": 1,
    "css": {
      "border": "1px solid ${PROPERTY color2}",
      "color": "${PROPERTY color2}",
      "background": "${PROPERTY color}",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "borderRadius": 30,
    "faces": [
      {
        "text": 6
      },
      {
        "text": "x6"
      }
    ],
    "clonedFrom": "qlr7",
    "itemMarker": true,
    "ownedBy": null,
    "id": "dwg8",
    "parent": "itemsHolder21",
    "clickable": false
  },
  "thzy": {
    "width": 30,
    "height": 30,
    "item": 23,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "svgReplaces": {
      "#000000": "color"
    },
    "text": 1,
    "css": {
      "border": "1px solid ${PROPERTY color2}",
      "color": "${PROPERTY color2}",
      "background": "${PROPERTY color}",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "borderRadius": 30,
    "faces": [
      {
        "text": 8
      },
      {
        "text": "x8"
      }
    ],
    "clonedFrom": "zcay",
    "itemMarker": true,
    "ownedBy": null,
    "id": "thzy",
    "parent": "itemsHolder23",
    "clickable": false
  },
  "fa5f": {
    "x": 4,
    "y": 4,
    "image": "/assets/300806009_987",
    "width": 50,
    "height": 50,
    "item": 9,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "dzc0",
    "svgReplaces": {
      "#000000": "color"
    },
    "itemMarker": true,
    "ownedBy": null,
    "id": "fa5f",
    "parent": "itemsHolder9",
    "clickable": false
  },
  "edj7": {
    "y": 4,
    "x": 4,
    "width": 50,
    "height": 50,
    "image": "i/icons/diamonds.svg",
    "svgReplaces": {
      "currentColor": "itemColor"
    },
    "item": 13,
    "itemColor": "#e50932",
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "w3ne",
    "itemMarker": true,
    "ownedBy": null,
    "id": "edj7",
    "parent": "itemsHolder13",
    "clickable": false
  },
  "q5fk": {
    "width": 30,
    "height": 30,
    "item": 22,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "svgReplaces": {
      "#000000": "color"
    },
    "text": 1,
    "css": {
      "border": "1px solid ${PROPERTY color2}",
      "color": "${PROPERTY color2}",
      "background": "${PROPERTY color}",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "borderRadius": 30,
    "faces": [
      {
        "text": 7
      },
      {
        "text": "x7"
      }
    ],
    "clonedFrom": "u4aq",
    "itemMarker": true,
    "ownedBy": null,
    "id": "q5fk",
    "parent": "itemsHolder22",
    "clickable": false
  },
  "qa29": {
    "x": 4,
    "y": 4,
    "image": "/assets/-1902243833_1899",
    "width": 50,
    "height": 50,
    "item": 11,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "maj9",
    "svgReplaces": {
      "#000000": "color"
    },
    "itemMarker": true,
    "ownedBy": null,
    "id": "qa29",
    "parent": "itemsHolder11",
    "clickable": false
  },
  "gameID26": {
    "id": "gameID26",
    "x": -526,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortDefault",
    "sort2": "suit",
    "displayArray": [
      [
        "playerAidButton",
        1
      ],
      [
        "scoreButton",
        1
      ],
      [
        "score+10",
        1
      ],
      [
        "trump",
        1
      ],
      [
        "bidWinner",
        0
      ],
      [
        "transferScoreButton",
        0
      ]
    ],
    "gameID": true,
    "hintText": "\"Put 3 cards into holder next to seat to indicate bid. Cards are played to the main central holder.\\a\\a To declare bid openly for additional pionts, use Actions button then Show Bid button. To reveal hand for additional points, use Actions button then Show Hand button.\\a\\a At the end of the round, press Score button to calculate and enter scores. Manually flipping over bid cards is not necessary, but if a player wants to show their bid, do not manually flip over bid cards until after scoring.\\a\\a Next trump suit is automatically set on the trump indicator widget after recalling cards.\"",
    "y": 646,
    "autoTeam": false,
    "preSetExceptionsRoutine": [
      {
        "func": "SET",
        "collection": [
          "takeSpecial"
        ],
        "property": "scale",
        "value": 1
      },
      {
        "func": "SET",
        "collection": [
          "scoreSpecial"
        ],
        "property": "scale",
        "value": 1
      },
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "nextTrump",
        "value": 0
      }
    ],
    "text": "99",
    "settingsArray": [
      [
        "centerShow",
        true
      ],
      [
        "showBidHistory",
        false
      ],
      [
        "showBidSuit",
        false
      ],
      [
        "showBidValue",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        12
      ],
      [
        "hideCards",
        4
      ],
      [
        "seatCount",
        3
      ],
      [
        "tempScore",
        false
      ]
    ],
    "playerAidDetail1": "Tricks",
    "takeSpecialRoutine": [
      {
        "func": "MOVE",
        "from": "centerHolder",
        "to": "backHolder${seatIndex}",
        "count": 999,
        "face": 0
      },
      {
        "func": "SELECT",
        "type": "seat",
        "property": "id",
        "relation": "!=",
        "value": null
      },
      {
        "func": "SET",
        "property": "turn",
        "value": false
      },
      {
        "func": "SET",
        "collection": [
          "seat${seatIndex}"
        ],
        "property": "turn",
        "value": true
      },
      {
        "func": "SCORE",
        "mode": "inc",
        "value": 1,
        "property": "tricks",
        "seats": "${seatID}",
        "round": 1
      },
      {
        "func": "SET",
        "collection": [
          "tricksCount"
        ],
        "property": "text",
        "relation": "+",
        "value": 1
      }
    ],
    "scoreSpecialRoutine": [
      "var bidValues = '0,3,0,1,2' split ','",
      "var nextTrumpArray = '2,3,4,1' split ','",
      "var contractValues = '0,30,20,10' split ','",
      "var bidArray = []",
      "var winnerArray = []",
      "var allWinners = 0",
      "// Calculate what each player bid.",
      {
        "func": "FOREACH",
        "in": [
          "holder1",
          "holder3",
          "holder7"
        ],
        "loopRoutine": [
          "var bidTotal = 0",
          {
            "func": "SELECT",
            "type": "card",
            "property": "_ancestor",
            "value": "${value}",
            "collection": "bidCards"
          },
          {
            "func": "FOREACH",
            "range": [
              4
            ],
            "loopRoutine": [
              {
                "func": "SELECT",
                "source": "bidCards",
                "property": "suit",
                "value": "${value}"
              },
              {
                "func": "COUNT"
              },
              "var suitTotal = ${COUNT} * ${bidValues.$value}",
              "var bidTotal = ${bidTotal} + ${suitTotal}"
            ]
          },
          "var bidArray = push ${bidTotal}"
        ]
      },
      "// Calculate which and how many players made bid.",
      {
        "func": "FOREACH",
        "in": [
          1,
          3,
          7
        ],
        "loopRoutine": [
          "var tricksTotal = ${PROPERTY _totals OF trickCount}",
          {
            "func": "IF",
            "operand1": "${tricksTotal.$value}",
            "operand2": "${bidArray.$key}",
            "thenRoutine": [
              "var allWinners = ${allWinners} + 1",
              "var thisHolder = 'holder' + ${value}",
              "var winnerArray = push ${thisHolder}"
            ],
            "elseRoutine": [
              "var winnerArray = push 'null'"
            ]
          }
        ]
      },
      "// Calculate which player, if any, tried for extra points through a bid declaration or hand reveal",
      {
        "func": "SELECT",
        "type": "card",
        "property": "parent",
        "relation": "in",
        "value": [
          "holder1",
          "holder3",
          "holder7"
        ]
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "activeFace",
        "value": 1
      },
      {
        "func": "GET",
        "property": "_ancestor",
        "variable": "declared"
      },
      {
        "func": "SELECT",
        "property": "id",
        "value": "${declared}"
      },
      {
        "func": "GET",
        "property": "parent"
      },
      {
        "func": "SELECT",
        "property": "id",
        "value": "${parent}"
      },
      {
        "func": "GET",
        "property": "index"
      },
      "var showHolder = 'showHolder' + ${index}",
      {
        "func": "IF",
        "operand1": "${PROPERTY scale OF $showHolder}",
        "relation": ">",
        "operand2": 0,
        "thenRoutine": [
          "var revealed = ${declared}"
        ]
      },
      "// Calculate if player that declared or revealed got enough tricks",
      "var declaredWon = ${declared} in ${winnerArray}",
      "// Calculate and enter score",
      {
        "func": "FOREACH",
        "in": [
          1,
          3,
          7
        ],
        "loopRoutine": [
          "var thisHolder = 'holder' + ${value}",
          "var didWin = ${thisHolder} in ${winnerArray}",
          "var points = 0",
          "// Add 1 point for each trick captured no matter what",
          "var points = ${tricksTotal.$value}",
          "// Add 10, 20, or 30 points depending on whether 3, 2, or 1 players met their goal",
          {
            "func": "IF",
            "condition": "${didWin}",
            "thenRoutine": [
              "var thisContractValue = ${contractValues.$allWinners}",
              "var points = ${points} + ${thisContractValue}"
            ]
          },
          "// If the person declaring or revealing won their bid, then give that player 30 points for declaring or 60 points for revealing",
          {
            "func": "IF",
            "condition": "${declaredWon}",
            "thenRoutine": [
              {
                "func": "IF",
                "operand1": "${declared}",
                "operand2": "${thisHolder}",
                "thenRoutine": [
                  "var points = ${points} + 30",
                  {
                    "func": "IF",
                    "operand1": "${revealed}",
                    "relation": "!=",
                    "operand2": null,
                    "thenRoutine": [
                      "var points = ${points} + 30"
                    ]
                  }
                ]
              }
            ]
          },
          "// If the person declaring or revealing did not win their bid, then give the other players 30 points for declaring or 60 points for revealing",
          {
            "func": "IF",
            "condition": "${declaredWon}",
            "elseRoutine": [
              {
                "func": "IF",
                "operand1": "${declared}",
                "relation": "!=",
                "operand2": null,
                "thenRoutine": [
                  {
                    "func": "IF",
                    "operand1": "${declared}",
                    "relation": "!=",
                    "operand2": "${thisHolder}",
                    "thenRoutine": [
                      "var points = ${points} + 30",
                      {
                        "func": "IF",
                        "operand1": "${revealed}",
                        "relation": "!=",
                        "operand2": null,
                        "thenRoutine": [
                          "var points = ${points} + 30"
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "func": "SCORE",
            "mode": "set",
            "round": "${PROPERTY currentRound OF scoreboard}",
            "seats": "seat${value}",
            "value": "${points}"
          }
        ]
      },
      "\\ Set trump for next round",
      "var nextTrump = ${nextTrumpArray.$allWinners}",
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "nextTrump",
        "value": "${nextTrump}"
      }
    ],
    "nextTrump": 0
  },
  "playerAid26": {
    "type": "scoreboard",
    "id": "playerAid26",
    "x": 1225,
    "y": 560,
    "width": 360,
    "height": 155,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "css": {
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "onlyVisibleForSeat": [],
    "roundLabel": "Suit",
    "rounds": [
      "Clubs",
      "Hearts",
      "Spades",
      "Diamonds"
    ],
    "seats": "playerAidDetail1",
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "playerAid": true,
    "scoreProperty": "score26"
  },
  "scoreSpecial": {
    "type": "button",
    "id": "scoreSpecial",
    "x": 120,
    "y": 933,
    "width": 120,
    "height": 30,
    "movableInEdit": false,
    "css": {
      "font-size": "15px"
    },
    "text": "Score",
    "clickRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Transferring score ..."
          },
          {
            "type": "subtitle",
            "text": "This will calculate the scores and enter them on the main scoreboard above. Are you sure you want to continue?"
          }
        ],
        "confirmButtonText": "Yes",
        "cancelButtonText": "No"
      },
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "IF",
        "condition": "${PROPERTY scoreSpecialRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "${gameID}",
            "routine": "scoreSpecialRoutine"
          }
        ]
      }
    ],
    "scale": 0
  },
  "takeSpecial": {
    "type": "button",
    "id": "takeSpecial",
    "x": 585,
    "y": 700,
    "width": 60,
    "height": 60,
    "layer": 1,
    "movableInEdit": false,
    "text": "Take",
    "clickRoutine": [
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "IF",
        "condition": "${PROPERTY takeSpecialRoutine OF $gameID}",
        "thenRoutine": [
          {
            "func": "CALL",
            "widget": "${gameID}",
            "routine": "takeSpecialRoutine"
          }
        ]
      }
    ],
    "scale": 0
  },
  "gameID27": {
    "id": "gameID27",
    "x": -392,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortAceTen",
    "sort2": "suitCounterpoint",
    "roundsTemp": [
      "Card Points",
      "Bid",
      "Bid Difference",
      "Sum Differences",
      "Bonus Points",
      "Final Score"
    ],
    "displayArray": [
      [
        "playerAidButton",
        1
      ],
      [
        "scoreButton",
        1
      ],
      [
        "score+10",
        1
      ],
      [
        "trump",
        1
      ],
      [
        "bidWinner",
        0
      ],
      [
        "transferScoreButton",
        1
      ]
    ],
    "gameID": true,
    "hintText": "\"An original game by David Parlett. Rules at https://www.parlettgames.uk/oricards/countpnt.html.\\a\\a Put 3 cards into holder next to seat to indicate bid. Cards are played to the main central holder. Trump is automatically indicated on the trump indicator widget in bottom left.\\a\\a At the end of the round, press Add Card Points button to calculate and enter card points captured that round for each player.\\a\\a Press Transfer Score button to autocalculate remaining values on small temporary scoreboard and enter the score onto the main scoreboard.\"",
    "y": 647,
    "autoTeam": false,
    "transferButtonReturn": false,
    "preSetExceptionsRoutine": [
      {
        "func": "SET",
        "collection": [
          "takeSpecial"
        ],
        "property": "scale",
        "value": 1
      }
    ],
    "settingsArray": [
      [
        "centerShow",
        true
      ],
      [
        "showBidHistory",
        false
      ],
      [
        "showBidSuit",
        false
      ],
      [
        "showBidValue",
        false
      ],
      [
        "showTricks",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        12
      ],
      [
        "hideCards",
        4
      ],
      [
        "seatCount",
        3
      ],
      [
        "tempScore",
        true
      ],
      [
        "jokerCount",
        1
      ]
    ],
    "playerAidDetail1": "Tricks",
    "takeSpecialRoutine": [
      {
        "func": "MOVE",
        "from": "centerHolder",
        "to": "backHolder${seatIndex}",
        "count": 999,
        "face": 0
      },
      {
        "func": "SELECT",
        "type": "seat",
        "property": "id",
        "relation": "!=",
        "value": null
      },
      {
        "func": "SET",
        "property": "turn",
        "value": false
      },
      {
        "func": "SET",
        "collection": [
          "seat${seatIndex}"
        ],
        "property": "turn",
        "value": true
      },
      {
        "func": "SET",
        "collection": [
          "tricksCount"
        ],
        "property": "text",
        "relation": "+",
        "value": 1
      }
    ],
    "text": "Counterpoint",
    "dealRoutine": [
      "// Flip over remaining card.",
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "value": "deckHolder"
      },
      {
        "func": "SET",
        "property": "activeFace",
        "value": 1
      },
      "// If last card is not the joker, then set the sort order and point value of the joker to be equivalent to that card.",
      {
        "func": "GET",
        "property": "suit"
      },
      {
        "func": "GET",
        "property": "order"
      },
      {
        "func": "GET",
        "property": "sortAceTen"
      },
      "var nine = ${order} == 9",
      "var joker = ${order} == 14",
      "var none = ${nine} || ${joker}",
      {
        "func": "IF",
        "condition": "${joker}",
        "elseRoutine": [
          {
            "func": "SELECT",
            "property": "id",
            "value": "jokerBlack1"
          },
          {
            "func": "SET",
            "property": "sortAceTen",
            "value": "${sortAceTen}"
          },
          {
            "func": "SET",
            "property": "suit",
            "value": "${suit}"
          },
          {
            "func": "SET",
            "property": "order",
            "value": "${order}"
          }
        ]
      },
      "// If remaining card is a 9 or the joker, then set No Trump",
      {
        "func": "IF",
        "condition": "${none}",
        "thenRoutine": [
          "var suit = 5"
        ]
      },
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "customFace",
        "value": "${suit}"
      }
    ],
    "scoreSystem": [
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        10,
        2,
        3,
        4
      ]
    ],
    "transferExceptionsRoutine": [
      {
        "func": "xSET",
        "collection": [
          "seat1",
          "seat3",
          "seat7"
        ],
        "property": "tempScore",
        "value": []
      },
      "var bidValues = '0,30,0,10,20' split ','",
      "var bidArray = []",
      "var diffArray = []",
      "var diffSum = 0",
      "var basicPoints = []",
      "var bonusArray = []",
      "// Calculate what each player bid.",
      {
        "func": "FOREACH",
        "in": [
          1,
          3,
          7
        ],
        "loopRoutine": [
          "var bidTotal = 0",
          "var thisHolder = 'holder' + ${value}",
          {
            "func": "SELECT",
            "type": "card",
            "property": "_ancestor",
            "value": "${thisHolder}",
            "collection": "bidCards"
          },
          {
            "func": "FOREACH",
            "range": [
              4
            ],
            "loopRoutine": [
              {
                "func": "SELECT",
                "source": "bidCards",
                "property": "suit",
                "value": "${value}"
              },
              {
                "func": "COUNT"
              },
              "var suitTotal = ${COUNT} * ${bidValues.$value}",
              "var bidTotal = ${bidTotal} + ${suitTotal}"
            ]
          },
          "var bidArray = push ${bidTotal}",
          {
            "func": "SCORE",
            "mode": "set",
            "property": "tempScore",
            "round": 2,
            "seats": "seat${value}",
            "value": "${bidArray.$key}"
          }
        ]
      },
      "// Calculate difference between bid and actual points.",
      {
        "func": "FOREACH",
        "in": [
          1,
          3,
          7
        ],
        "loopRoutine": [
          "var seat = 'seat' + ${value}",
          "var pointsTotal = ${PROPERTY tempScore OF $seat}",
          "var pointsTotal = ${pointsTotal.0}",
          "var bidDiff = ${pointsTotal} - ${bidArray.$key}",
          "var bidDiff = abs ${bidDiff}",
          "var diffArray = push ${bidDiff}",
          "var diffSum = ${diffSum} + ${bidDiff}",
          {
            "func": "SCORE",
            "mode": "set",
            "property": "tempScore",
            "round": 3,
            "seats": "seat${value}",
            "value": "${bidDiff}"
          }
        ]
      },
      "// Calculate basic score.",
      {
        "func": "FOREACH",
        "in": [
          1,
          3,
          7
        ],
        "loopRoutine": [
          "var pointsDiff = ${diffArray.$key} - ${diffSum}",
          "var pointsDiff = abs ${pointsDiff}",
          "var basicPoints = push ${pointsDiff}",
          {
            "func": "SCORE",
            "mode": "set",
            "property": "tempScore",
            "round": 4,
            "seats": "seat${value}",
            "value": "${pointsDiff}"
          }
        ]
      },
      "// Calculate bonus points.",
      {
        "func": "FOREACH",
        "in": [
          1,
          3,
          7
        ],
        "loopRoutine": [
          {
            "func": "IF",
            "operand1": "${diffArray.$key}",
            "operand2": 0,
            "thenRoutine": [
              "var bonusArray = push 30"
            ],
            "elseRoutine": [
              {
                "func": "IF",
                "operand1": "${diffArray.$key}",
                "relation": "<",
                "operand2": 3,
                "thenRoutine": [
                  "var bonusArray = push 20"
                ],
                "elseRoutine": [
                  {
                    "func": "IF",
                    "operand1": "${diffArray.$key}",
                    "relation": "<",
                    "operand2": 6,
                    "thenRoutine": [
                      "var bonusArray = push 10"
                    ],
                    "elseRoutine": [
                      "var bonusArray = push 0"
                    ]
                  }
                ]
              }
            ]
          },
          {
            "func": "SCORE",
            "mode": "set",
            "property": "tempScore",
            "round": 5,
            "seats": "seat${value}",
            "value": "${bonusArray.$key}"
          },
          "var points = ${basicPoints.$key} + ${bonusArray.$key}",
          {
            "func": "SCORE",
            "mode": "set",
            "property": "tempScore",
            "round": 6,
            "seats": "seat${value}",
            "value": "${points}"
          },
          {
            "func": "SCORE",
            "mode": "set",
            "round": "${PROPERTY currentRound OF scoreboard}",
            "seats": "seat${value}",
            "value": "${points}"
          }
        ]
      }
    ],
    "doNotCount": "holder"
  },
  "playerAid27": {
    "type": "scoreboard",
    "id": "playerAid27",
    "x": 1225,
    "y": 560,
    "width": 360,
    "height": 155,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "css": {
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "onlyVisibleForSeat": [],
    "roundLabel": "Suit",
    "rounds": [
      "Clubs",
      "Hearts",
      "Spades",
      "Diamonds"
    ],
    "seats": "playerAidDetail1",
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "playerAid": true,
    "scoreProperty": "score27"
  },
  "gameID28": {
    "id": "gameID28",
    "x": -267,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortDefault",
    "sort2": "suit",
    "displayArray": [
      [
        "scoreButton",
        1
      ],
      [
        "score+10",
        1
      ],
      [
        "trump",
        0
      ],
      [
        "bidWinner",
        0
      ],
      [
        "transferScoreButton",
        0
      ]
    ],
    "gameID": true,
    "hintText": "\"An original game by David Parlett. Rules at https://www.parlettgames.uk/oricards/bouncers.html.\\a\\a Hearts are removed from deck and used as score indicators. Tricks are discard and the face-up heart is automatically moved to the trick winner's captured cards holder and displayed face up.\\a\\a At end of round, press Score button to automatically enter score in main scoreboard.\"",
    "y": 649,
    "transferButtonReturn": false,
    "preSetExceptionsRoutine": [
      {
        "func": "SET",
        "collection": [
          "takeSpecial"
        ],
        "property": "scale",
        "value": 1
      },
      {
        "func": "SET",
        "collection": [
          "scoreSpecial"
        ],
        "property": "scale",
        "value": 1
      },
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "scale",
        "value": 0
      }
    ],
    "settingsArray": [
      [
        "capturedHolder",
        true
      ],
      [
        "showDiscard",
        true
      ],
      [
        "showBidHistory",
        false
      ],
      [
        "showBidSuit",
        false
      ],
      [
        "showBidValue",
        false
      ],
      [
        "showTricks",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        1
      ],
      [
        "seatCount",
        3
      ]
    ],
    "takeSpecialRoutine": [
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "relation": "in",
        "value": [
          "holder1",
          "holder3",
          "holder7"
        ]
      },
      {
        "func": "SET",
        "property": "parent",
        "value": "discard"
      },
      {
        "func": "SET",
        "property": "activeFace",
        "value": 0
      },
      {
        "func": "MOVE",
        "from": "deckHolder",
        "to": "capturedHolder${seatIndex}"
      },
      {
        "func": "SELECT",
        "type": "seat",
        "property": "id",
        "relation": "!=",
        "value": null
      },
      {
        "func": "SET",
        "property": "turn",
        "value": false
      },
      {
        "func": "SET",
        "collection": [
          "seat${seatIndex}"
        ],
        "property": "turn",
        "value": true
      },
      {
        "func": "SET",
        "collection": [
          "tricksCount"
        ],
        "property": "text",
        "relation": "+",
        "value": 1
      },
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "value": "deckHolder"
      },
      {
        "func": "COUNT",
        "variable": "countPile"
      },
      {
        "func": "IF",
        "operand1": "${countPile}",
        "operand2": 1,
        "thenRoutine": [
          {
            "func": "SELECT",
            "type": "card",
            "property": "parent",
            "value": "deckHolder"
          },
          {
            "func": "SET",
            "property": "x",
            "value": -620
          },
          {
            "func": "SET",
            "property": "activeFace",
            "value": 1
          }
        ]
      }
    ],
    "dealRoutine": [
      {
        "func": "MOVE",
        "from": "hand",
        "to": "deckHolder",
        "count": 0
      },
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "value": "deckHolder"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "suit",
        "value": 4
      },
      {
        "func": "SET",
        "property": "parent",
        "value": "tempHolder"
      },
      {
        "func": "MOVE",
        "from": "deckHolder",
        "to": [
          "seat1",
          "seat3",
          "seat7"
        ],
        "count": 13
      },
      {
        "func": "SET",
        "property": "parent",
        "value": "deckHolder"
      },
      {
        "func": "SHUFFLE",
        "holder": "deckHolder"
      },
      {
        "func": "SET",
        "property": "activeFace",
        "value": 1
      },
      {
        "func": "SELECT",
        "type": "pile",
        "property": "parent",
        "value": "deckHolder"
      },
      {
        "func": "SET",
        "property": "x",
        "value": -620
      },
      {
        "func": "IF",
        "condition": "${PROPERTY spreadHearts}",
        "thenRoutine": [
          {
            "func": "SET",
            "property": "x",
            "value": -730
          },
          {
            "func": "SELECT",
            "type": "card",
            "property": "_ancestor",
            "value": "deckHolder"
          },
          {
            "func": "GET",
            "aggregation": "array",
            "property": "z"
          },
          "var sortedZ = numericSort ${z}",
          "var base = 115",
          {
            "func": "FOREACH",
            "in": "${sortedZ}",
            "loopRoutine": [
              {
                "func": "SELECT",
                "property": "z",
                "value": "${value}"
              },
              {
                "func": "SET",
                "property": "x",
                "value": "${base}"
              },
              "var base = ${base} + 25"
            ]
          }
        ]
      }
    ],
    "scoreSystem": [
      [
        0,
        11,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        25,
        25,
        25
      ]
    ],
    "text": "Bouncers",
    "scoreSpecialRoutine": [
      {
        "func": "FOREACH",
        "in": [
          1,
          3,
          7
        ],
        "loopRoutine": [
          "var basePoints = 0",
          {
            "func": "SELECT",
            "type": "card",
            "property": "_ancestor",
            "value": "capturedHolder${value}",
            "collection": "allCards"
          },
          {
            "func": "FOREACH",
            "collection": "allCards",
            "loopRoutine": [
              {
                "func": "IF",
                "operand1": "${PROPERTY order OF $widgetID}",
                "relation": "<",
                "operand2": 11,
                "thenRoutine": [
                  {
                    "func": "IF",
                    "operand1": "${PROPERTY order OF $widgetID}",
                    "operand2": 1,
                    "thenRoutine": [
                      "var basePoints = ${basePoints} + 11"
                    ],
                    "elseRoutine": [
                      "var basePoints = ${basePoints} + ${PROPERTY order OF $widgetID}"
                    ]
                  }
                ]
              }
            ]
          },
          {
            "func": "SELECT",
            "source": "allCards",
            "property": "order",
            "relation": ">",
            "value": 10,
            "collection": "bouncers"
          },
          {
            "func": "SELECT",
            "source": "allCards",
            "property": "order",
            "relation": "<",
            "value": 11,
            "collection": "allCardsNoBouncers"
          },
          {
            "func": "FOREACH",
            "collection": "bouncers",
            "loopRoutine": [
              {
                "func": "SELECT",
                "source": "allCards",
                "property": "order",
                "value": 1,
                "collection": "ace"
              },
              {
                "func": "COUNT",
                "collection": "ace",
                "variable": "countAce"
              },
              {
                "func": "IF",
                "operand1": "${countAce}",
                "operand2": 1,
                "thenRoutine": [
                  "var basePoints = ${basePoints} - 11",
                  {
                    "func": "SELECT",
                    "source": "allCards",
                    "property": "order",
                    "value": 1,
                    "mode": "remove",
                    "collection": "allCards"
                  },
                  {
                    "func": "SELECT",
                    "source": "bouncers",
                    "property": "id",
                    "value": "${widgetID}",
                    "mode": "remove",
                    "collection": "bouncers"
                  }
                ],
                "elseRoutine": [
                  {
                    "func": "GET",
                    "collection": "allCardsNoBouncers",
                    "property": "order",
                    "aggregation": "max",
                    "variable": "maxOrder"
                  },
                  {
                    "func": "COUNT",
                    "collection": "allCardsNoBouncers",
                    "variable": "allCardsNoBouncers"
                  },
                  {
                    "func": "IF",
                    "operand1": "${allCardsNoBouncers}",
                    "relation": ">",
                    "operand2": 0,
                    "thenRoutine": [
                      "var basePoints = ${basePoints} - ${maxOrder}",
                      {
                        "func": "SELECT",
                        "source": "allCards",
                        "property": "order",
                        "value": "${maxOrder}",
                        "mode": "remove",
                        "collection": "allCardsNoBouncers"
                      },
                      {
                        "func": "SELECT",
                        "source": "bouncers",
                        "property": "id",
                        "value": "${widgetID}",
                        "mode": "remove",
                        "collection": "bouncers"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "func": "COUNT",
            "collection": "bouncers",
            "variable": "countBouncers"
          },
          "var deduct = ${countBouncers} * 25",
          "var basePoints = ${basePoints} + ${deduct}",
          {
            "func": "SCORE",
            "mode": "set",
            "property": "score",
            "seats": "seat${value}",
            "round": "${PROPERTY currentRound OF scoreboard}",
            "value": "${basePoints}"
          }
        ]
      }
    ],
    "spreadHearts": true,
    "version1": {
      "spreadHearts": false
    },
    "version2": {
      "spreadHearts": true
    },
    "versionArray": [
      {
        "value": "0",
        "text": "Click here to choose version"
      },
      {
        "value": "1",
        "text": "Show One Heart"
      },
      {
        "value": "2",
        "text": "Show All Hearts"
      }
    ]
  },
  "spanishDeck": {
    "type": "deck",
    "id": "spanishDeck",
    "parent": "offHolder",
    "x": 4,
    "y": 4,
    "width": 86,
    "height": 86,
    "movable": true,
    "movableInEdit": true,
    "clickable": true,
    "inheritFrom": {
      "deck1": [
        "cardDefaults"
      ]
    },
    "staged": false,
    "faceTemplates": [
      {
        "border": false,
        "radius": false,
        "objects": [
          {
            "type": "image",
            "x": 0,
            "y": 0,
            "width": 103,
            "height": 160,
            "color": "transparent",
            "value": "/i/cards-default/2B.svg"
          }
        ]
      },
      {
        "border": 1,
        "radius": 6,
        "objects": [
          {
            "type": "image",
            "width": 103,
            "height": 160,
            "color": "white"
          },
          {
            "type": "image",
            "x": 20,
            "y": 20,
            "width": 63,
            "height": 120,
            "color": "white",
            "dynamicProperties": {
              "value": "rankImage"
            },
            "svgReplaces": {
              "currentColor": "suitColor"
            }
          },
          {
            "type": "text",
            "x": -3,
            "y": -2,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "rank",
              "color": "suitColor"
            },
            "css": {
              "letter-spacing": "-6px"
            }
          },
          {
            "type": "text",
            "x": 81,
            "y": 127,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "rank",
              "color": "suitColor"
            },
            "rotation": 180,
            "css": {
              "letter-spacing": "-6px"
            }
          },
          {
            "type": "image",
            "x": 1,
            "y": 28,
            "width": 23,
            "height": 23,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImageR"
            },
            "css": {
              "background-size": "50% 50%"
            }
          },
          {
            "type": "image",
            "x": 1,
            "y": 28,
            "width": 23,
            "height": 23,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImage"
            }
          },
          {
            "type": "image",
            "x": 79,
            "y": 110,
            "width": 23,
            "height": 23,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImageR"
            },
            "rotation": 180,
            "css": {
              "background-size": "50% 50%"
            }
          },
          {
            "type": "image",
            "x": 79,
            "y": 110,
            "width": 23,
            "height": 23,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImage"
            },
            "rotation": 180
          }
        ]
      }
    ],
    "cardTypes": {
      "Club 01": {
        "rank": "1",
        "rankImage": "i/cards-spanish/1Club.svg",
        "suitImage": "i/cards-spanish/club.svg",
        "suit": 1,
        "order": 1,
        "sortDefault": 1
      },
      "Club 02": {
        "rank": "2",
        "rankImage": "i/cards-spanish/2Club.svg",
        "suitImage": "i/cards-spanish/club.svg",
        "suit": 1,
        "order": 2,
        "sortDefault": 2
      },
      "Club 03": {
        "rank": "3",
        "rankImage": "i/cards-spanish/3Club.svg",
        "suitImage": "i/cards-spanish/club.svg",
        "suit": 1,
        "order": 3,
        "sortDefault": 3
      },
      "Club 04": {
        "rank": "4",
        "rankImage": "i/cards-spanish/4Club.svg",
        "suitImage": "i/cards-spanish/club.svg",
        "suit": 1,
        "order": 4,
        "sortDefault": 4
      },
      "Club 05": {
        "rank": "5",
        "rankImage": "i/cards-spanish/5Club.svg",
        "suitImage": "i/cards-spanish/club.svg",
        "suit": 1,
        "order": 5,
        "sortDefault": 5
      },
      "Club 06": {
        "rank": "6",
        "rankImage": "i/cards-spanish/6Club.svg",
        "suitImage": "i/cards-spanish/club.svg",
        "suit": 1,
        "order": 6,
        "sortDefault": 6
      },
      "Club 07": {
        "rank": "7",
        "rankImage": "i/cards-spanish/7Club.svg",
        "suitImage": "i/cards-spanish/club.svg",
        "suit": 1,
        "order": 7,
        "sortDefault": 7
      },
      "Club 08": {
        "rank": "8",
        "rankImage": "i/cards-spanish/8Club.svg",
        "suitImage": "i/cards-spanish/club.svg",
        "suit": 1,
        "order": 8,
        "sortDefault": 8
      },
      "Club 09": {
        "rank": "9",
        "rankImage": "i/cards-spanish/9Club.svg",
        "suitImage": "i/cards-spanish/club.svg",
        "suit": 1,
        "order": 9,
        "sortDefault": 9
      },
      "Club 10": {
        "rank": "10",
        "rankImage": "i/cards-spanish/10Club.svg",
        "suitImage": "i/cards-spanish/club.svg",
        "suit": 1,
        "order": 10,
        "sortDefault": 10
      },
      "Club 11": {
        "rank": "11",
        "rankImage": "i/cards-spanish/11Club.svg",
        "suitImage": "i/cards-spanish/club.svg",
        "suit": 1,
        "order": 11,
        "sortDefault": 11
      },
      "Club 12": {
        "rank": "12",
        "rankImage": "i/cards-spanish/12Club.svg",
        "suitImage": "i/cards-spanish/club.svg",
        "suit": 1,
        "order": 12,
        "sortDefault": 12
      },
      "Coin 01": {
        "rank": "1",
        "rankImage": "i/cards-spanish/1Coin.svg",
        "suitImageR": "i/cards-spanish/coin.svg",
        "suit": 2,
        "order": 1,
        "sortDefault": 1
      },
      "Coin 02": {
        "rank": "2",
        "rankImage": "i/cards-spanish/2Coin.svg",
        "suitImageR": "i/cards-spanish/coin.svg",
        "suit": 2,
        "order": 2,
        "sortDefault": 2
      },
      "Coin 03": {
        "rank": "3",
        "rankImage": "i/cards-spanish/3Coin.svg",
        "suitImageR": "i/cards-spanish/coin.svg",
        "suit": 2,
        "order": 3,
        "sortDefault": 3
      },
      "Coin 04": {
        "rank": "4",
        "rankImage": "i/cards-spanish/4Coin.svg",
        "suitImageR": "i/cards-spanish/coin.svg",
        "suit": 2,
        "order": 4,
        "sortDefault": 4
      },
      "Coin 05": {
        "rank": "5",
        "rankImage": "i/cards-spanish/5Coin.svg",
        "suitImageR": "i/cards-spanish/coin.svg",
        "suit": 2,
        "order": 5,
        "sortDefault": 5
      },
      "Coin 06": {
        "rank": "6",
        "rankImage": "i/cards-spanish/6Coin.svg",
        "suitImageR": "i/cards-spanish/coin.svg",
        "suit": 2,
        "order": 6,
        "sortDefault": 6
      },
      "Coin 07": {
        "rank": "7",
        "rankImage": "i/cards-spanish/7Coin.svg",
        "suitImageR": "i/cards-spanish/coin.svg",
        "suit": 2,
        "order": 7,
        "sortDefault": 7
      },
      "Coin 08": {
        "rank": "8",
        "rankImage": "i/cards-spanish/8Coin.svg",
        "suitImageR": "i/cards-spanish/coin.svg",
        "suit": 2,
        "order": 8,
        "sortDefault": 8
      },
      "Coin 09": {
        "rank": "9",
        "rankImage": "i/cards-spanish/9Coin.svg",
        "suitImageR": "i/cards-spanish/coin.svg",
        "suit": 2,
        "order": 9,
        "sortDefault": 9
      },
      "Coin 10": {
        "rank": "10",
        "rankImage": "i/cards-spanish/10Coin.svg",
        "suitImageR": "i/cards-spanish/coin.svg",
        "suit": 2,
        "order": 10,
        "sortDefault": 10
      },
      "Coin 11": {
        "rank": "11",
        "rankImage": "i/cards-spanish/11Coin.svg",
        "suitImageR": "i/cards-spanish/coin.svg",
        "suit": 2,
        "order": 11,
        "sortDefault": 11
      },
      "Coin 12": {
        "rank": "12",
        "rankImage": "i/cards-spanish/12Coin.svg",
        "suitImageR": "i/cards-spanish/coin.svg",
        "suit": 2,
        "order": 12,
        "sortDefault": 12
      },
      "Cup 01": {
        "rank": "1",
        "rankImage": "i/cards-spanish/1Cup.svg",
        "suitImageR": "i/cards-spanish/cup.svg",
        "suit": 3,
        "order": 1,
        "sortDefault": 1
      },
      "Cup 02": {
        "rank": "2",
        "rankImage": "i/cards-spanish/2Cup.svg",
        "suitImageR": "i/cards-spanish/cup.svg",
        "suit": 3,
        "order": 2,
        "sortDefault": 2
      },
      "Cup 03": {
        "rank": "3",
        "rankImage": "i/cards-spanish/3Cup.svg",
        "suitImageR": "i/cards-spanish/cup.svg",
        "suit": 3,
        "order": 3,
        "sortDefault": 3
      },
      "Cup 04": {
        "rank": "4",
        "rankImage": "i/cards-spanish/4Cup.svg",
        "suitImageR": "i/cards-spanish/cup.svg",
        "suit": 3,
        "order": 4,
        "sortDefault": 4
      },
      "Cup 05": {
        "rank": "5",
        "rankImage": "i/cards-spanish/5Cup.svg",
        "suitImageR": "i/cards-spanish/cup.svg",
        "suit": 3,
        "order": 5,
        "sortDefault": 5
      },
      "Cup 06": {
        "rank": "6",
        "rankImage": "i/cards-spanish/6Cup.svg",
        "suitImageR": "i/cards-spanish/cup.svg",
        "suit": 3,
        "order": 6,
        "sortDefault": 6
      },
      "Cup 07": {
        "rank": "7",
        "rankImage": "i/cards-spanish/7Cup.svg",
        "suitImageR": "i/cards-spanish/cup.svg",
        "suit": 3,
        "order": 7,
        "sortDefault": 7
      },
      "Cup 08": {
        "rank": "8",
        "rankImage": "i/cards-spanish/8Cup.svg",
        "suitImageR": "i/cards-spanish/cup.svg",
        "suit": 3,
        "order": 8,
        "sortDefault": 8
      },
      "Cup 09": {
        "rank": "9",
        "rankImage": "i/cards-spanish/9Cup.svg",
        "suitImageR": "i/cards-spanish/cup.svg",
        "suit": 3,
        "order": 9,
        "sortDefault": 9
      },
      "Cup 10": {
        "rank": "10",
        "rankImage": "i/cards-spanish/10Cup.svg",
        "suitImageR": "i/cards-spanish/cup.svg",
        "suit": 3,
        "order": 10,
        "sortDefault": 10
      },
      "Cup 11": {
        "rank": "11",
        "rankImage": "i/cards-spanish/11Cup.svg",
        "suitImageR": "i/cards-spanish/cup.svg",
        "suit": 3,
        "order": 11,
        "sortDefault": 11
      },
      "Cup 12": {
        "rank": "12",
        "rankImage": "i/cards-spanish/12Cup.svg",
        "suitImageR": "i/cards-spanish/cup.svg",
        "suit": 3,
        "order": 12,
        "sortDefault": 12
      },
      "Sword 01": {
        "rank": "1",
        "rankImage": "i/cards-spanish/1Sword.svg",
        "suitImage": "i/cards-spanish/sword.svg",
        "suit": 4,
        "order": 1,
        "sortDefault": 1
      },
      "Sword 02": {
        "rank": "2",
        "rankImage": "i/cards-spanish/2Sword.svg",
        "suitImage": "i/cards-spanish/sword.svg",
        "suit": 4,
        "order": 2,
        "sortDefault": 2
      },
      "Sword 03": {
        "rank": "3",
        "rankImage": "i/cards-spanish/3Sword.svg",
        "suitImage": "i/cards-spanish/sword.svg",
        "suit": 4,
        "order": 3,
        "sortDefault": 3
      },
      "Sword 04": {
        "rank": "4",
        "rankImage": "i/cards-spanish/4Sword.svg",
        "suitImage": "i/cards-spanish/sword.svg",
        "suit": 4,
        "order": 4,
        "sortDefault": 4
      },
      "Sword 05": {
        "rank": "5",
        "rankImage": "i/cards-spanish/5Sword.svg",
        "suitImage": "i/cards-spanish/sword.svg",
        "suit": 4,
        "order": 5,
        "sortDefault": 5
      },
      "Sword 06": {
        "rank": "6",
        "rankImage": "i/cards-spanish/6Sword.svg",
        "suitImage": "i/cards-spanish/sword.svg",
        "suit": 4,
        "order": 6,
        "sortDefault": 6
      },
      "Sword 07": {
        "rank": "7",
        "rankImage": "i/cards-spanish/7Sword.svg",
        "suitImage": "i/cards-spanish/sword.svg",
        "suit": 4,
        "order": 7,
        "sortDefault": 7
      },
      "Sword 08": {
        "rank": "8",
        "rankImage": "i/cards-spanish/8Sword.svg",
        "suitImage": "i/cards-spanish/sword.svg",
        "suit": 4,
        "order": 8,
        "sortDefault": 8
      },
      "Sword 09": {
        "rank": "9",
        "rankImage": "i/cards-spanish/9Sword.svg",
        "suitImage": "i/cards-spanish/sword.svg",
        "suit": 4,
        "order": 9,
        "sortDefault": 9
      },
      "Sword 10": {
        "rank": "10",
        "rankImage": "i/cards-spanish/10Sword.svg",
        "suitImage": "i/cards-spanish/sword.svg",
        "suit": 4,
        "order": 10,
        "sortDefault": 10
      },
      "Sword 11": {
        "rank": "11",
        "rankImage": "i/cards-spanish/11Sword.svg",
        "suitImage": "i/cards-spanish/sword.svg",
        "suit": 4,
        "order": 11,
        "sortDefault": 11
      },
      "Sword 12": {
        "rank": "12",
        "rankImage": "i/cards-spanish/12Sword.svg",
        "suitImage": "i/cards-spanish/sword.svg",
        "suit": 4,
        "order": 12,
        "sortDefault": 12
      }
    },
    "deckSuits": [
      "",
      "clubs",
      "coins",
      "cups",
      "swords"
    ],
    "deckSuitsImage": [
      "",
      "i/cards-spanish/club.svg",
      "i/cards-spanish/coin.svg",
      "i/cards-spanish/cup.svg",
      "i/cards-spanish/sword.svg",
      "",
      ""
    ],
    "deckSuitsText": [
      "",
      "",
      "",
      "",
      "",
      "No\nTrump",
      ""
    ],
    "deckSuitsUni": [
      "",
      "🔨",
      "🪙",
      "🏆",
      "⚔",
      "NT",
      ""
    ],
    "deckType": 4,
    "deckDiceFaces": [
      {
        "image": "i/cards-spanish/club.svg",
        "imageScale": 0.5
      },
      {
        "image": "i/cards-spanish/coin.svg"
      },
      {
        "image": "i/cards-spanish/cup.svg"
      },
      {
        "image": "i/cards-spanish/sword.svg",
        "imageScale": 0.3
      }
    ]
  },
  "sh1e": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Club 01",
    "id": "sh1e",
    "parent": "pile2",
    "staged": false
  },
  "9rai": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Club 02",
    "id": "9rai",
    "parent": "pile2",
    "staged": false
  },
  "9hfs": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Club 03",
    "id": "9hfs",
    "parent": "pile2",
    "staged": false
  },
  "4i54": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Club 04",
    "id": "4i54",
    "parent": "pile2",
    "staged": false
  },
  "cqty": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Club 05",
    "id": "cqty",
    "parent": "pile2",
    "staged": false
  },
  "q3iq": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Club 06",
    "id": "q3iq",
    "staged": false,
    "parent": "pile2"
  },
  "yan6": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Club 07",
    "id": "yan6",
    "parent": "pile2",
    "staged": false
  },
  "4kbm": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Club 08",
    "id": "4kbm",
    "parent": "pile2",
    "staged": false
  },
  "no7i": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Club 09",
    "id": "no7i",
    "staged": false,
    "parent": "pile2"
  },
  "tbd4": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Club 10",
    "id": "tbd4",
    "staged": false,
    "parent": "pile2"
  },
  "9wkw": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Club 11",
    "id": "9wkw",
    "staged": false,
    "parent": "pile2"
  },
  "1uaz": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Club 12",
    "id": "1uaz",
    "parent": "pile2",
    "staged": false
  },
  "g2p1": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Coin 01",
    "id": "g2p1",
    "parent": "pile2",
    "staged": false
  },
  "2lr5": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Coin 02",
    "id": "2lr5",
    "parent": "pile2",
    "staged": false
  },
  "fb07": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Coin 03",
    "id": "fb07",
    "parent": "pile2",
    "staged": false
  },
  "7mdx": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Coin 04",
    "id": "7mdx",
    "parent": "pile2",
    "staged": false
  },
  "p6t1": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Coin 05",
    "id": "p6t1",
    "parent": "pile2",
    "staged": false
  },
  "y8jg": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Coin 06",
    "id": "y8jg",
    "parent": "pile2",
    "staged": false
  },
  "jy9e": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Coin 07",
    "id": "jy9e",
    "parent": "pile2",
    "staged": false
  },
  "ois8": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Coin 08",
    "id": "ois8",
    "parent": "pile2",
    "staged": false
  },
  "bmmy": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Coin 09",
    "id": "bmmy",
    "parent": "pile2",
    "staged": false
  },
  "odn8": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Coin 10",
    "id": "odn8",
    "parent": "pile2",
    "staged": false
  },
  "v2h2": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Coin 11",
    "id": "v2h2",
    "parent": "pile2",
    "staged": false
  },
  "qgiq": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Coin 12",
    "id": "qgiq",
    "parent": "pile2",
    "staged": false
  },
  "rj3y": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Cup 01",
    "id": "rj3y",
    "parent": "pile2",
    "staged": false
  },
  "ksc2": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Cup 02",
    "id": "ksc2",
    "parent": "pile2",
    "staged": false
  },
  "z99b": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Cup 03",
    "id": "z99b",
    "parent": "pile2",
    "staged": false
  },
  "x9gd": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Cup 04",
    "id": "x9gd",
    "parent": "pile2",
    "staged": false
  },
  "to5r": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Cup 05",
    "id": "to5r",
    "parent": "pile2",
    "staged": false
  },
  "epq7": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Cup 06",
    "id": "epq7",
    "parent": "pile2",
    "staged": false
  },
  "qd9y": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Cup 07",
    "id": "qd9y",
    "parent": "pile2",
    "staged": false
  },
  "fvha": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Cup 08",
    "id": "fvha",
    "parent": "pile2",
    "staged": false
  },
  "hvmr": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Cup 09",
    "id": "hvmr",
    "parent": "pile2",
    "staged": false
  },
  "o5wk": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Cup 10",
    "id": "o5wk",
    "parent": "pile2",
    "staged": false
  },
  "glym": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Cup 11",
    "id": "glym",
    "parent": "pile2",
    "staged": false
  },
  "qk6o": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Cup 12",
    "id": "qk6o",
    "parent": "pile2",
    "staged": false
  },
  "6ztl": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Sword 01",
    "id": "6ztl",
    "parent": "pile2",
    "staged": false
  },
  "6jct": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Sword 02",
    "id": "6jct",
    "parent": "pile2",
    "staged": false
  },
  "06fw": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Sword 03",
    "id": "06fw",
    "parent": "pile2",
    "staged": false
  },
  "e2ul": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Sword 04",
    "id": "e2ul",
    "parent": "pile2",
    "staged": false
  },
  "t499": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Sword 05",
    "id": "t499",
    "parent": "pile2",
    "staged": false
  },
  "jceo": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Sword 06",
    "id": "jceo",
    "parent": "pile2",
    "staged": false
  },
  "kyrv": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Sword 07",
    "id": "kyrv",
    "staged": false,
    "parent": "pile2"
  },
  "cprx": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Sword 08",
    "id": "cprx",
    "parent": "pile2",
    "staged": false
  },
  "1van": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Sword 09",
    "id": "1van",
    "parent": "pile2",
    "staged": false
  },
  "yvjj": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Sword 10",
    "id": "yvjj",
    "parent": "pile2",
    "staged": false
  },
  "rxxu": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Sword 11",
    "id": "rxxu",
    "parent": "pile2",
    "staged": false
  },
  "ca49": {
    "deck": "spanishDeck",
    "type": "card",
    "cardType": "Sword 12",
    "id": "ca49",
    "parent": "pile2",
    "staged": false
  },
  "playerAid8": {
    "type": "scoreboard",
    "id": "playerAid8",
    "x": 1225,
    "y": 300,
    "width": 350,
    "height": 257,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "css": {
      "default": {
        "font-size": "15px"
      },
      ".scoreboard td:first-child": {
        "--firstColWidth": "120px"
      },
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "onlyVisibleForSeat": [],
    "roundLabel": "Trump Reminders",
    "rounds": [
      "Must overtrump if played by an opponent.\n\nIf non-trump is led, no obligation to top the trick.\n\nIf void of led suit and opponenet is winning trick,\nmust trump. If opponent is winning with a trump,\nmust player higher trump if able.\n\nIf void of led suit and partner is winning, play any\ncard even if you have a trump."
    ],
    "seats": "playerAidDetail1",
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "playerAid": true
  },
  "playerAid25a": {
    "type": "scoreboard",
    "id": "playerAid25a",
    "width": 450,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "css": {
      "default": {
        "font-size": "14px"
      },
      ".scoreboard td:first-child": {
        "--firstColWidth": "120px"
      },
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "roundLabel": "Trump Reminders",
    "rounds": [
      "Must trump. If you don't have the suit led, you must trump if able.\n\nRotterdam: Must trump if unable to follow. Must beat any trump\nplayed previously, led or otherwise. Otherwise play any card.\n\nAmsterdam: Must trump if unable to follow. Must beat any trump\nplayed previously, led or otherwise. Exception: if void of led suit, you\ndon't have to trump your partner if they are winning trick without a\ntrump. If opponents are winning, you must still overtrump if able. If\npartner is winning with trump, must still overtrump if able."
    ],
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "parent": "playerAid25",
    "fixedParent": true,
    "seats": "playerAidDetail2",
    "y": 250,
    "x": -90,
    "height": 220
  },
  "playerAidDetail2": {
    "type": "seat",
    "id": "playerAidDetail2",
    "index": 9,
    "x": 1790,
    "tricks": 0,
    "tempScore": [],
    "showing": false,
    "y": 137,
    "displayEmpty": "only for playerAids",
    "movableInEdit": false,
    "score30": [
      "1 each",
      1,
      1,
      1,
      1,
      1,
      1,
      1
    ],
    "score": [],
    "playerAidSeat": true,
    "score34": [
      "player to your left (clockwise)",
      "player to your right (anticlockwise)",
      "player opposite",
      "you are your own agent"
    ]
  },
  "playerAid1": {
    "type": "scoreboard",
    "id": "playerAid1",
    "x": 1225,
    "y": 300,
    "width": 350,
    "height": 257,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "css": {
      "default": {
        "font-size": "15px"
      },
      ".scoreboard td:first-child": {
        "--firstColWidth": "120px"
      },
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "onlyVisibleForSeat": [],
    "roundLabel": "Trump Reminders",
    "rounds": [
      "'May' follow suit or trump.\n\nNever have to play Jack of trumps.\n\nMust overtrump unless you only have trumps in\nyour hand.\n\nIf you have cards of the nontrump led suit and the second player trumps, you cannot play a lower\ntrump. Must either play the led suit or a higher\ntrump, unless you only have trumps left."
    ],
    "seats": "playerAidDetail1",
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "playerAid": true
  },
  "playerAid7": {
    "type": "scoreboard",
    "id": "playerAid7",
    "x": 1225,
    "y": 300,
    "width": 350,
    "height": 257,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "css": {
      "default": {
        "font-size": "15px"
      },
      ".scoreboard td:first-child": {
        "--firstColWidth": "120px"
      },
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "onlyVisibleForSeat": [],
    "roundLabel": "Trump Reminders",
    "rounds": [
      "'May' follow suit or trump.\n\nNever have to play Jack of trumps.\n\nMust overtrump unless you only have trumps in\nyour hand.\n\nIf you have cards of the nontrump led suit and the second player trumps, you cannot play a lower\ntrump. Must either play the led suit or a higher\ntrump, unless you only have trumps left."
    ],
    "seats": "playerAidDetail1",
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "playerAid": true
  },
  "playerAid6a": {
    "type": "scoreboard",
    "id": "playerAid6a",
    "y": 307,
    "width": 360,
    "height": 130,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "css": {
      "default": {
        "font-size": "15px"
      },
      ".scoreboard td:first-child": {
        "--firstColWidth": "120px"
      },
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "roundLabel": "Trump Reminders",
    "rounds": [
      "'May' follow suit or trump.\n\nNever have to play Jack of trumps.\n\nMust overtrump unless you only have trumps in\nyour hand.\n\nIf you have cards of the nontrump led suit and the second player trumps, you cannot play a lower\ntrump. Must either play the led suit or a higher\ntrump, unless you only have trumps left."
    ],
    "seats": "playerAidDetail2",
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "parent": "playerAid6",
    "fixedParent": true
  },
  "playerAid12a": {
    "type": "scoreboard",
    "id": "playerAid12a",
    "parent": "playerAid12",
    "fixedParent": true,
    "y": 307,
    "width": 360,
    "height": 130,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "css": {
      "default": {
        "font-size": "15px"
      },
      ".scoreboard td:first-child": {
        "--firstColWidth": "120px"
      },
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "roundLabel": "Trump Reminders",
    "rounds": [
      "'May' follow suit or trump.\n\nNever have to play Jack of trumps.\n\nMust overtrump unless you only have trumps in\nyour hand.\n\nIf you have cards of the nontrump led suit and the second player trumps, you cannot play a lower\ntrump. Must either play the led suit or a higher\ntrump, unless you only have trumps left."
    ],
    "seats": "playerAidDetail2",
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false
  },
  "playerAid2a": {
    "type": "scoreboard",
    "id": "playerAid2a",
    "width": 360,
    "height": 257,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "css": {
      "default": {
        "font-size": "15px"
      },
      ".scoreboard td:first-child": {
        "--firstColWidth": "120px"
      },
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "roundLabel": "Trump Reminders",
    "rounds": [
      "'May' follow suit or trump.\n\nNever have to play Jack of trumps.\n\nMust overtrump unless void of led suit.\n\nIf you have cards of the nontrump led suit and the\nsecond player trumps, you cannot play a lower\ntrump. Must either play the led suit or a higher\n trump. If you don't have the suit led, you can play\n any card, including a lower trump."
    ],
    "seats": "playerAidDetail2",
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "parent": "playerAid2",
    "fixedParent": true,
    "y": 270
  },
  "playerAid4": {
    "type": "scoreboard",
    "id": "playerAid4",
    "x": 1225,
    "y": 300,
    "width": 350,
    "height": 257,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "css": {
      "default": {
        "font-size": "15px"
      },
      ".scoreboard td:first-child": {
        "--firstColWidth": "120px"
      },
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "onlyVisibleForSeat": [],
    "roundLabel": "Trump Reminders",
    "rounds": [
      "'May' follow suit or trump.\n\nNever have to play Jack of trumps.\n\nMust overtrump unless you only have trumps in\nyour hand.\n\nIf you have cards of the nontrump led suit and the second player trumps, you cannot play a lower\ntrump. Must either play the led suit or a higher\ntrump, unless you only have trumps left."
    ],
    "seats": "playerAidDetail1",
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "playerAid": true
  },
  "germanDeck": {
    "type": "deck",
    "id": "germanDeck",
    "x": 4,
    "y": 4,
    "width": 86,
    "height": 86,
    "movable": true,
    "movableInEdit": true,
    "cardTypes": {
      "Acorn 01": {
        "rank": "A",
        "rankImage": "i/cards-german/1Acorn.svg",
        "suitImage": "i/cards-german/acorn.svg",
        "suit": 1,
        "order": 1,
        "sortDefault": 13,
        "sortSkat": 13,
        "sortSuitSkat": 1
      },
      "Acorn 05": {
        "rank": "5",
        "rankImage": "i/cards-german/5Acorn.svg",
        "suitImage": "i/cards-german/acorn.svg",
        "suit": 1,
        "order": 5,
        "sortDefault": 4
      },
      "Acorn 06": {
        "rank": "6",
        "rankImage": "i/cards-german/6Acorn.svg",
        "suitImage": "i/cards-german/acorn.svg",
        "suit": 1,
        "order": 6,
        "sortDefault": 5
      },
      "Acorn 07": {
        "rank": "7",
        "rankImage": "i/cards-german/7Acorn.svg",
        "suitImage": "i/cards-german/acorn.svg",
        "suit": 1,
        "order": 7,
        "sortDefault": 6,
        "sortSkat": 6,
        "sortSuitSkat": 1
      },
      "Acorn 08": {
        "rank": "8",
        "rankImage": "i/cards-german/8Acorn.svg",
        "suitImage": "i/cards-german/acorn.svg",
        "suit": 1,
        "order": 8,
        "sortDefault": 7,
        "sortSkat": 7,
        "sortSuitSkat": 1
      },
      "Acorn 09": {
        "rank": "9",
        "rankImage": "i/cards-german/9Acorn.svg",
        "suitImage": "i/cards-german/acorn.svg",
        "suit": 1,
        "order": 9,
        "sortDefault": 8,
        "sortSkat": 8,
        "sortSuitSkat": 1
      },
      "Acorn 10": {
        "rank": "10",
        "rankImage": "i/cards-german/10Acorn.svg",
        "suitImage": "i/cards-german/acorn.svg",
        "suit": 1,
        "order": 10,
        "sortDefault": 9,
        "sortSkat": 12,
        "sortSuitSkat": 1
      },
      "Acorn 11": {
        "rank": "U",
        "rankImage": "i/cards-german/11Acorn.svg",
        "suitImage": "i/cards-german/acorn.svg",
        "suit": 1,
        "order": 11,
        "sortDefault": 10,
        "sortSkat": 17,
        "sortSuitSkat": 1
      },
      "Acorn 12": {
        "rank": "O",
        "rankImage": "i/cards-german/12Acorn.svg",
        "suitImage": "i/cards-german/acorn.svg",
        "suit": 1,
        "order": 12,
        "sortDefault": 11,
        "sortSkat": 10,
        "sortSuitSkat": 1
      },
      "Acorn 13": {
        "rank": "K",
        "rankImage": "i/cards-german/13Acorn.svg",
        "suitImage": "i/cards-german/acorn.svg",
        "suit": 1,
        "order": 13,
        "sortDefault": 12,
        "sortSkat": 11,
        "sortSuitSkat": 1
      },
      "Bell 01": {
        "rank": "A",
        "rankImage": "i/cards-german/1Bell.svg",
        "suitImage": "i/cards-german/bell.svg",
        "suit": 2,
        "order": 1,
        "sortDefault": 13,
        "sortSkat": 13,
        "sortSuitSkat": 4
      },
      "Bell 05": {
        "rank": "5",
        "rankImage": "i/cards-german/5Bell.svg",
        "suitImage": "i/cards-german/bell.svg",
        "suit": 2,
        "order": 5,
        "sortDefault": 4
      },
      "Bell 06": {
        "rank": "6",
        "rankImage": "i/cards-german/6Bell.svg",
        "suitImage": "i/cards-german/bell.svg",
        "suit": 2,
        "order": 6,
        "sortDefault": 5
      },
      "Bell 07": {
        "rank": "7",
        "rankImage": "i/cards-german/7Bell.svg",
        "suitImage": "i/cards-german/bell.svg",
        "suit": 2,
        "order": 7,
        "sortDefault": 6,
        "sortSkat": 6,
        "sortSuitSkat": 4
      },
      "Bell 08": {
        "rank": "8",
        "rankImage": "i/cards-german/8Bell.svg",
        "suitImage": "i/cards-german/bell.svg",
        "suit": 2,
        "order": 8,
        "sortDefault": 7,
        "sortSkat": 7,
        "sortSuitSkat": 4
      },
      "Bell 09": {
        "rank": "9",
        "rankImage": "i/cards-german/9Bell.svg",
        "suitImage": "i/cards-german/bell.svg",
        "suit": 2,
        "order": 9,
        "sortDefault": 8,
        "sortSkat": 8,
        "sortSuitSkat": 4
      },
      "Bell 10": {
        "rank": "10",
        "rankImage": "i/cards-german/10Bell.svg",
        "suitImage": "i/cards-german/bell.svg",
        "suit": 2,
        "order": 10,
        "sortDefault": 9,
        "sortSkat": 12,
        "sortSuitSkat": 4
      },
      "Bell 11": {
        "rank": "U",
        "rankImage": "i/cards-german/11Bell.svg",
        "suitImage": "i/cards-german/bell.svg",
        "suit": 2,
        "order": 11,
        "sortDefault": 10,
        "sortSkat": 14,
        "sortSuitSkat": 4
      },
      "Bell 12": {
        "rank": "O",
        "rankImage": "i/cards-german/12Bell.svg",
        "suitImage": "i/cards-german/bell.svg",
        "suit": 2,
        "order": 12,
        "sortDefault": 11,
        "sortSkat": 10,
        "sortSuitSkat": 4
      },
      "Bell 13": {
        "rank": "K",
        "rankImage": "i/cards-german/13Bell.svg",
        "suitImage": "i/cards-german/bell.svg",
        "suit": 2,
        "order": 13,
        "sortDefault": 12,
        "sortSkat": 11,
        "sortSuitSkat": 4
      },
      "Leaf 01": {
        "rank": "A",
        "rankImage": "i/cards-german/1Leaf.svg",
        "suitImage": "i/cards-german/leaf.svg",
        "suit": 3,
        "order": 1,
        "sortDefault": 13,
        "sortSkat": 13,
        "sortSuitSkat": 2
      },
      "Leaf 05": {
        "rank": "5",
        "rankImage": "i/cards-german/5Leaf.svg",
        "suitImage": "i/cards-german/leaf.svg",
        "suit": 3,
        "order": 5,
        "sortDefault": 4
      },
      "Leaf 06": {
        "rank": "6",
        "rankImage": "i/cards-german/6Leaf.svg",
        "suitImage": "i/cards-german/leaf.svg",
        "suit": 3,
        "order": 6,
        "sortDefault": 5
      },
      "Leaf 07": {
        "rank": "7",
        "rankImage": "i/cards-german/7Leaf.svg",
        "suitImage": "i/cards-german/leaf.svg",
        "suit": 3,
        "order": 7,
        "sortDefault": 6,
        "sortSkat": 6,
        "sortSuitSkat": 2
      },
      "Leaf 08": {
        "rank": "8",
        "rankImage": "i/cards-german/8Leaf.svg",
        "suitImage": "i/cards-german/leaf.svg",
        "suit": 3,
        "order": 8,
        "sortDefault": 7,
        "sortSkat": 7,
        "sortSuitSkat": 2
      },
      "Leaf 09": {
        "rank": "9",
        "rankImage": "i/cards-german/9Leaf.svg",
        "suitImage": "i/cards-german/leaf.svg",
        "suit": 3,
        "order": 9,
        "sortDefault": 8,
        "sortSkat": 8,
        "sortSuitSkat": 2
      },
      "Leaf 10": {
        "rank": "10",
        "rankImage": "i/cards-german/10Leaf.svg",
        "suitImage": "i/cards-german/leaf.svg",
        "suit": 3,
        "order": 10,
        "sortDefault": 9,
        "sortSkat": 12,
        "sortSuitSkat": 2
      },
      "Leaf 11": {
        "rank": "U",
        "rankImage": "i/cards-german/11Leaf.svg",
        "suitImage": "i/cards-german/leaf.svg",
        "suit": 3,
        "order": 11,
        "sortDefault": 10,
        "sortSkat": 16,
        "sortSuitSkat": 2
      },
      "Leaf 12": {
        "rank": "O",
        "rankImage": "i/cards-german/12Leaf.svg",
        "suitImage": "i/cards-german/leaf.svg",
        "suit": 3,
        "order": 12,
        "sortDefault": 11,
        "sortSkat": 10,
        "sortSuitSkat": 2
      },
      "Leaf 13": {
        "rank": "K",
        "rankImage": "i/cards-german/13Leaf.svg",
        "suitImage": "i/cards-german/leaf.svg",
        "suit": 3,
        "order": 13,
        "sortDefault": 12,
        "sortSkat": 11,
        "sortSuitSkat": 2
      },
      "Heart 01": {
        "rank": "A",
        "rankImage": "i/cards-german/1Heart.svg",
        "suitImage": "i/cards-german/heart.svg",
        "suit": 4,
        "order": 1,
        "sortDefault": 13,
        "sortSkat": 13,
        "sortSuitSkat": 3
      },
      "Heart 05": {
        "rank": "5",
        "rankImage": "i/cards-german/5Heart.svg",
        "suitImage": "i/cards-german/heart.svg",
        "suit": 4,
        "order": 5,
        "sortDefault": 4
      },
      "Heart 06": {
        "rank": "6",
        "rankImage": "i/cards-german/6Heart.svg",
        "suitImage": "i/cards-german/heart.svg",
        "suit": 4,
        "order": 6,
        "sortDefault": 5
      },
      "Heart 07": {
        "rank": "7",
        "rankImage": "i/cards-german/7Heart.svg",
        "suitImage": "i/cards-german/heart.svg",
        "suit": 4,
        "order": 7,
        "sortDefault": 6,
        "sortSkat": 6,
        "sortSuitSkat": 3
      },
      "Heart 08": {
        "rank": "8",
        "rankImage": "i/cards-german/8Heart.svg",
        "suitImage": "i/cards-german/heart.svg",
        "suit": 4,
        "order": 8,
        "sortDefault": 7,
        "sortSkat": 7,
        "sortSuitSkat": 3
      },
      "Heart 09": {
        "rank": "9",
        "rankImage": "i/cards-german/9Heart.svg",
        "suitImage": "i/cards-german/heart.svg",
        "suit": 4,
        "order": 9,
        "sortDefault": 8,
        "sortSkat": 8,
        "sortSuitSkat": 3
      },
      "Heart 10": {
        "rank": "10",
        "rankImage": "i/cards-german/10Heart.svg",
        "suitImage": "i/cards-german/heart.svg",
        "suit": 4,
        "order": 10,
        "sortDefault": 9,
        "sortSkat": 12,
        "sortSuitSkat": 3
      },
      "Heart 11": {
        "rank": "U",
        "rankImage": "i/cards-german/11Heart.svg",
        "suitImage": "i/cards-german/heart.svg",
        "suit": 4,
        "order": 11,
        "sortDefault": 10,
        "sortSkat": 15,
        "sortSuitSkat": 3
      },
      "Heart 12": {
        "rank": "O",
        "rankImage": "i/cards-german/12Heart.svg",
        "suitImage": "i/cards-german/heart.svg",
        "suit": 4,
        "order": 12,
        "sortDefault": 11,
        "sortSkat": 10,
        "sortSuitSkat": 3
      },
      "Heart 13": {
        "rank": "K",
        "rankImage": "i/cards-german/13Heart.svg",
        "suitImage": "i/cards-german/heart.svg",
        "suit": 4,
        "order": 13,
        "sortDefault": 12,
        "sortSkat": 11,
        "sortSuitSkat": 3
      }
    },
    "clickable": true,
    "faceTemplates": [
      {
        "border": false,
        "radius": false,
        "objects": [
          {
            "type": "image",
            "x": 0,
            "y": 0,
            "width": 103,
            "height": 160,
            "color": "transparent",
            "value": "/i/cards-default/2B.svg"
          }
        ]
      },
      {
        "border": 1,
        "radius": 6,
        "objects": [
          {
            "type": "image",
            "width": 103,
            "height": 160,
            "color": "white"
          },
          {
            "type": "image",
            "x": 15,
            "y": 10,
            "width": 73,
            "height": 140,
            "color": "white",
            "dynamicProperties": {
              "value": "rankImage"
            },
            "svgReplaces": {
              "currentColor": "suitColor"
            }
          },
          {
            "type": "text",
            "x": -3,
            "y": -2,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "rank",
              "color": "suitColor"
            },
            "css": {
              "letter-spacing": "-6px"
            }
          },
          {
            "type": "text",
            "x": 81,
            "y": 127,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "rank",
              "color": "suitColor"
            },
            "rotation": 180,
            "css": {
              "letter-spacing": "-6px"
            }
          },
          {
            "type": "image",
            "x": 1,
            "y": 28,
            "width": 23,
            "height": 23,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImage"
            }
          },
          {
            "type": "image",
            "x": 79,
            "y": 110,
            "width": 23,
            "height": 23,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImage"
            },
            "rotation": 180
          }
        ]
      }
    ],
    "inheritFrom": {
      "deck1": [
        "cardDefaults"
      ]
    },
    "staged": false,
    "parent": "offHolder",
    "deckSuits": [
      "",
      "acorns",
      "bells",
      "leaves",
      "hearts"
    ],
    "deckSuitsImage": [
      "",
      "i/cards-german/acorn.svg",
      "i/cards-german/bell.svg",
      "i/cards-german/leaf.svg",
      "i/cards-german/heart.svg",
      "",
      ""
    ],
    "deckSuitsText": [
      "",
      "",
      "",
      "",
      "",
      "Grand",
      "Null"
    ],
    "deckSuitsUni": [
      "",
      "🌰",
      "🔔",
      "🌿",
      "💜",
      "G",
      "N"
    ],
    "deckType": 5,
    "deckDiceFaces": [
      {
        "image": "i/cards-german/acorn.svg",
        "imageScale": 0.5
      },
      {
        "image": "i/cards-german/bell.svg"
      },
      {
        "image": "i/cards-german/leaf.svg"
      },
      {
        "image": "i/cards-german/heart.svg"
      }
    ]
  },
  "vaj7": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Acorn 01",
    "id": "vaj7",
    "parent": "pile2",
    "staged": false
  },
  "87mo": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Acorn 05",
    "id": "87mo",
    "parent": "pile2",
    "staged": false
  },
  "xixn": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Acorn 06",
    "id": "xixn",
    "parent": "pile2",
    "staged": false
  },
  "zzrf": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Acorn 07",
    "id": "zzrf",
    "staged": false,
    "parent": "pile2"
  },
  "zcet": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Acorn 08",
    "id": "zcet",
    "parent": "pile2",
    "staged": false
  },
  "t7mu": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Acorn 09",
    "id": "t7mu",
    "staged": false,
    "parent": "pile2"
  },
  "anm2": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Acorn 10",
    "id": "anm2",
    "parent": "pile2",
    "staged": false
  },
  "up0z": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Acorn 11",
    "id": "up0z",
    "parent": "pile2",
    "staged": false,
    "sortSuitSkat": 0
  },
  "hrdy": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Acorn 12",
    "id": "hrdy",
    "parent": "pile2",
    "staged": false
  },
  "ydk0": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Acorn 13",
    "id": "ydk0",
    "parent": "pile2",
    "staged": false
  },
  "1abt": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Bell 01",
    "id": "1abt",
    "parent": "pile2",
    "staged": false
  },
  "48y2": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Bell 05",
    "id": "48y2",
    "staged": false,
    "parent": "pile2"
  },
  "8jk6": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Bell 06",
    "id": "8jk6",
    "parent": "pile2",
    "staged": false
  },
  "4dpk": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Bell 07",
    "id": "4dpk",
    "parent": "pile2",
    "staged": false
  },
  "zt4c": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Bell 08",
    "id": "zt4c",
    "parent": "pile2",
    "staged": false
  },
  "b1er": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Bell 09",
    "id": "b1er",
    "parent": "pile2",
    "staged": false
  },
  "mul7": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Bell 10",
    "id": "mul7",
    "parent": "pile2",
    "staged": false
  },
  "ya24": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Bell 11",
    "id": "ya24",
    "parent": "pile2",
    "staged": false,
    "sortSuitSkat": 0
  },
  "4a99": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Bell 12",
    "id": "4a99",
    "staged": false,
    "parent": "pile2"
  },
  "srqz": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Bell 13",
    "id": "srqz",
    "parent": "pile2",
    "staged": false
  },
  "4cpf": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Leaf 01",
    "id": "4cpf",
    "parent": "pile2",
    "staged": false
  },
  "t91e": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Leaf 05",
    "id": "t91e",
    "parent": "pile2",
    "staged": false
  },
  "wr2t": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Leaf 06",
    "id": "wr2t",
    "parent": "pile2",
    "staged": false
  },
  "vhpu": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Leaf 07",
    "id": "vhpu",
    "parent": "pile2",
    "staged": false
  },
  "gm6i": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Leaf 08",
    "id": "gm6i",
    "parent": "pile2",
    "staged": false
  },
  "lwqv": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Leaf 09",
    "id": "lwqv",
    "parent": "pile2",
    "staged": false
  },
  "l255": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Leaf 10",
    "id": "l255",
    "parent": "pile2",
    "staged": false
  },
  "myzu": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Leaf 11",
    "id": "myzu",
    "parent": "pile2",
    "staged": false,
    "sortSuitSkat": 0
  },
  "2sab": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Leaf 12",
    "id": "2sab",
    "parent": "pile2",
    "staged": false
  },
  "pvbv": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Leaf 13",
    "id": "pvbv",
    "parent": "pile2",
    "staged": false
  },
  "dctx": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Heart 01",
    "id": "dctx",
    "staged": false,
    "parent": "pile2"
  },
  "zk00": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Heart 05",
    "id": "zk00",
    "parent": "pile2",
    "staged": false
  },
  "da7e": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Heart 06",
    "id": "da7e",
    "staged": false,
    "parent": "pile2"
  },
  "y4x5": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Heart 07",
    "id": "y4x5",
    "parent": "pile2",
    "staged": false
  },
  "i7o5": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Heart 08",
    "id": "i7o5",
    "parent": "pile2",
    "staged": false
  },
  "scgl": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Heart 09",
    "id": "scgl",
    "staged": false,
    "parent": "pile2"
  },
  "xtc9": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Heart 10",
    "id": "xtc9",
    "parent": "pile2",
    "staged": false
  },
  "d9tp": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Heart 11",
    "id": "d9tp",
    "staged": false,
    "sortSuitSkat": 0,
    "parent": "pile2"
  },
  "8ytr": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Heart 12",
    "id": "8ytr",
    "parent": "pile2",
    "staged": false
  },
  "lvgf": {
    "deck": "germanDeck",
    "type": "card",
    "cardType": "Heart 13",
    "id": "lvgf",
    "staged": false,
    "parent": "pile2"
  },
  "gameID29": {
    "id": "gameID29",
    "x": -134,
    "y": 651,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "text": "Collusion",
    "autoTeam": false,
    "displayArray": [
      [
        "playerAidButton",
        1
      ],
      [
        "transferScoreButton",
        0
      ],
      [
        "trump",
        0
      ],
      [
        "bidWinner",
        0
      ]
    ],
    "gameID": true,
    "hintText": "\"An original game by David Parlett. Rules at https://www.parlettgames.uk/oricards/collude.html.\"",
    "playerAidDetail1": "Bonus",
    "roundsTemp": [
      "Card Points"
    ],
    "settingsArray": [
      [
        "showBidHistory",
        false
      ],
      [
        "showBidSuit",
        false
      ],
      [
        "showBidValue",
        false
      ],
      [
        "showDiscard",
        false
      ],
      [
        "showPublicBid",
        false
      ],
      [
        "showTricks",
        true
      ],
      [
        "turnDirection",
        true
      ]
    ],
    "sort1": "sortDefault",
    "sort2": "suit"
  },
  "playerAid29": {
    "type": "scoreboard",
    "id": "playerAid29",
    "x": 1225,
    "y": 560,
    "width": 360,
    "height": 157,
    "movable": false,
    "movableInEdit": false,
    "css": {
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "onlyVisibleForSeat": [],
    "roundLabel": "Number of Tricks",
    "rounds": [
      "match one other player",
      "lowest when no players match",
      "odd one out when all others match",
      "also score 1 point per trick"
    ],
    "scoreProperty": "score29",
    "seats": "playerAidDetail1",
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "playerAid": true
  },
  "choose15": {
    "type": "button",
    "id": "choose15",
    "x": 70,
    "y": 130,
    "inheritFrom": {
      "choose10": "*"
    },
    "chooser": 15,
    "image": "",
    "text": "All\nTrump",
    "deckSuitsColor": "",
    "deckSuitsUni": "AT"
  },
  "choose16": {
    "type": "button",
    "id": "choose16",
    "x": 10,
    "y": 130,
    "css": {
      "font-size": "22px"
    },
    "inheritFrom": {
      "choose0": "*"
    },
    "text": "Pass",
    "clickRoutine": [
      "var bidWidget = 'bidValue' concat ${seatIndex}",
      "var bid = ${PROPERTY text}",
      {
        "func": "SET",
        "collection": [
          "${bidWidget}"
        ],
        "property": "text",
        "value": "${bid}"
      }
    ]
  },
  "choose17": {
    "type": "button",
    "id": "choose17",
    "x": 250,
    "y": 130,
    "inheritFrom": {
      "choose0": "*"
    },
    "text": "",
    "clickRoutine": [
      "var bidWidget = 'bidValue' concat ${seatIndex}",
      {
        "func": "SET",
        "collection": [
          "${bidWidget}"
        ],
        "property": "text",
        "value": ""
      }
    ]
  },
  "offHolderRecallButton": {
    "type": "button",
    "id": "offHolderRecallButton",
    "parent": "offHolder",
    "fixedParent": true,
    "y": 171.36,
    "width": 111,
    "height": 40,
    "movableInEdit": false,
    "text": "Recall",
    "clickRoutine": [
      {
        "func": "RECALL",
        "holder": "${PROPERTY parent}"
      }
    ]
  },
  "swissDeck": {
    "type": "deck",
    "id": "swissDeck",
    "parent": "offHolder",
    "x": 4,
    "y": 4,
    "width": 86,
    "height": 86,
    "movable": true,
    "movableInEdit": true,
    "cardTypes": {
      "Acorn 01": {
        "rank": "A",
        "rankImage": "i/cards-german/1Acorn.svg",
        "suitImage": "i/cards-german/acorn.svg",
        "suit": 1,
        "order": 1,
        "sortDefault": 13,
        "sortJassTrump": 11
      },
      "Acorn 06": {
        "rank": "6",
        "rankImage": "i/cards-german/6Acorn.svg",
        "suitImage": "i/cards-german/acorn.svg",
        "suit": 1,
        "order": 6,
        "sortDefault": 5,
        "sortJassTrump": 5
      },
      "Acorn 07": {
        "rank": "7",
        "rankImage": "i/cards-german/7Acorn.svg",
        "suitImage": "i/cards-german/acorn.svg",
        "suit": 1,
        "order": 7,
        "sortDefault": 6,
        "sortJassTrump": 6
      },
      "Acorn 08": {
        "rank": "8",
        "rankImage": "i/cards-german/8Acorn.svg",
        "suitImage": "i/cards-german/acorn.svg",
        "suit": 1,
        "order": 8,
        "sortDefault": 7,
        "sortJassTrump": 7
      },
      "Acorn 09": {
        "rank": "9",
        "rankImage": "i/cards-german/9Acorn.svg",
        "suitImage": "i/cards-german/acorn.svg",
        "suit": 1,
        "order": 9,
        "sortDefault": 8,
        "sortJassTrump": 12
      },
      "Acorn 10": {
        "rank": "B",
        "rankImage": "i/cards-swiss/10Acorn.svg",
        "suitImage": "i/cards-german/acorn.svg",
        "suit": 1,
        "order": 10,
        "sortDefault": 9,
        "sortJassTrump": 8
      },
      "Acorn 11": {
        "rank": "U",
        "rankImage": "i/cards-german/11Acorn.svg",
        "suitImage": "i/cards-german/acorn.svg",
        "suit": 1,
        "order": 11,
        "sortDefault": 10,
        "sortJassTrump": 13
      },
      "Acorn 12": {
        "rank": "O",
        "rankImage": "i/cards-german/12Acorn.svg",
        "suitImage": "i/cards-german/acorn.svg",
        "suit": 1,
        "order": 12,
        "sortDefault": 11,
        "sortJassTrump": 9
      },
      "Acorn 13": {
        "rank": "K",
        "rankImage": "i/cards-german/13Acorn.svg",
        "suitImage": "i/cards-german/acorn.svg",
        "suit": 1,
        "order": 13,
        "sortDefault": 12,
        "sortJassTrump": 10
      },
      "Bell 01": {
        "rank": "A",
        "rankImage": "i/cards-german/1Bell.svg",
        "suitImage": "i/cards-german/bell.svg",
        "suit": 2,
        "order": 1,
        "sortDefault": 13,
        "sortJassTrump": 11
      },
      "Bell 06": {
        "rank": "6",
        "rankImage": "i/cards-german/6Bell.svg",
        "suitImage": "i/cards-german/bell.svg",
        "suit": 2,
        "order": 6,
        "sortDefault": 5,
        "sortJassTrump": 5
      },
      "Bell 07": {
        "rank": "7",
        "rankImage": "i/cards-german/7Bell.svg",
        "suitImage": "i/cards-german/bell.svg",
        "suit": 2,
        "order": 7,
        "sortDefault": 6,
        "sortJassTrump": 6
      },
      "Bell 08": {
        "rank": "8",
        "rankImage": "i/cards-german/8Bell.svg",
        "suitImage": "i/cards-german/bell.svg",
        "suit": 2,
        "order": 8,
        "sortDefault": 7,
        "sortJassTrump": 7
      },
      "Bell 09": {
        "rank": "9",
        "rankImage": "i/cards-german/9Bell.svg",
        "suitImage": "i/cards-german/bell.svg",
        "suit": 2,
        "order": 9,
        "sortDefault": 8,
        "sortJassTrump": 12
      },
      "Bell 10": {
        "rank": "B",
        "rankImage": "i/cards-swiss/10Bell.svg",
        "suitImage": "i/cards-german/bell.svg",
        "suit": 2,
        "order": 10,
        "sortDefault": 9,
        "sortJassTrump": 8
      },
      "Bell 11": {
        "rank": "U",
        "rankImage": "i/cards-german/11Bell.svg",
        "suitImage": "i/cards-german/bell.svg",
        "suit": 2,
        "order": 11,
        "sortDefault": 10,
        "sortJassTrump": 13
      },
      "Bell 12": {
        "rank": "O",
        "rankImage": "i/cards-german/12Bell.svg",
        "suitImage": "i/cards-german/bell.svg",
        "suit": 2,
        "order": 12,
        "sortDefault": 11,
        "sortJassTrump": 9
      },
      "Bell 13": {
        "rank": "K",
        "rankImage": "i/cards-german/13Bell.svg",
        "suitImage": "i/cards-german/bell.svg",
        "suit": 2,
        "order": 13,
        "sortDefault": 12,
        "sortJassTrump": 10
      },
      "Rose 01": {
        "rank": "A",
        "rankImage": "i/cards-swiss/1Rose.svg",
        "suitImage": "i/cards-swiss/rose.svg",
        "suit": 3,
        "order": 1,
        "sortDefault": 13,
        "sortJassTrump": 11
      },
      "Rose 06": {
        "rank": "6",
        "rankImage": "i/cards-swiss/6Rose.svg",
        "suitImage": "i/cards-swiss/rose.svg",
        "suit": 3,
        "order": 6,
        "sortDefault": 5,
        "sortJassTrump": 5
      },
      "Rose 07": {
        "rank": "7",
        "rankImage": "i/cards-swiss/7Rose.svg",
        "suitImage": "i/cards-swiss/rose.svg",
        "suit": 3,
        "order": 7,
        "sortDefault": 6,
        "sortJassTrump": 6
      },
      "Rose 08": {
        "rank": "8",
        "rankImage": "i/cards-swiss/8Rose.svg",
        "suitImage": "i/cards-swiss/rose.svg",
        "suit": 3,
        "order": 8,
        "sortDefault": 7,
        "sortJassTrump": 7
      },
      "Rose 09": {
        "rank": "9",
        "rankImage": "i/cards-swiss/9Rose.svg",
        "suitImage": "i/cards-swiss/rose.svg",
        "suit": 3,
        "order": 9,
        "sortDefault": 8,
        "sortJassTrump": 12
      },
      "Rose 10": {
        "rank": "B",
        "rankImage": "i/cards-swiss/10Rose.svg",
        "suitImage": "i/cards-swiss/rose.svg",
        "suit": 3,
        "order": 10,
        "sortDefault": 9,
        "sortJassTrump": 8
      },
      "Rose 11": {
        "rank": "U",
        "rankImage": "i/cards-swiss/11Rose.svg",
        "suitImage": "i/cards-swiss/rose.svg",
        "suit": 3,
        "order": 11,
        "sortDefault": 10,
        "sortJassTrump": 13
      },
      "Rose 12": {
        "rank": "O",
        "rankImage": "i/cards-swiss/12Rose.svg",
        "suitImage": "i/cards-swiss/rose.svg",
        "suit": 3,
        "order": 12,
        "sortDefault": 11,
        "sortJassTrump": 9
      },
      "Rose 13": {
        "rank": "K",
        "rankImage": "i/cards-swiss/13Rose.svg",
        "suitImage": "i/cards-swiss/rose.svg",
        "suit": 3,
        "order": 13,
        "sortDefault": 12,
        "sortJassTrump": 10
      },
      "Shield 01": {
        "rank": "A",
        "rankImage": "i/cards-swiss/1Shield.svg",
        "suitImage": "i/cards-swiss/shield.svg",
        "suit": 4,
        "order": 1,
        "sortDefault": 13,
        "sortJassTrump": 11
      },
      "Shield 06": {
        "rank": "6",
        "rankImage": "i/cards-swiss/6Shield.svg",
        "suitImage": "i/cards-swiss/shield.svg",
        "suit": 4,
        "order": 6,
        "sortDefault": 5,
        "sortJassTrump": 5
      },
      "Shield 07": {
        "rank": "7",
        "rankImage": "i/cards-swiss/7Shield.svg",
        "suitImage": "i/cards-swiss/shield.svg",
        "suit": 4,
        "order": 7,
        "sortDefault": 6,
        "sortJassTrump": 6
      },
      "Shield 08": {
        "rank": "8",
        "rankImage": "i/cards-swiss/8Shield.svg",
        "suitImage": "i/cards-swiss/shield.svg",
        "suit": 4,
        "order": 8,
        "sortDefault": 7,
        "sortJassTrump": 7
      },
      "Shield 09": {
        "rank": "9",
        "rankImage": "i/cards-swiss/9Shield.svg",
        "suitImage": "i/cards-swiss/shield.svg",
        "suit": 4,
        "order": 9,
        "sortDefault": 8,
        "sortJassTrump": 12
      },
      "Shield 10": {
        "rank": "B",
        "rankImage": "i/cards-swiss/10Shield.svg",
        "suitImage": "i/cards-swiss/shield.svg",
        "suit": 4,
        "order": 10,
        "sortDefault": 9,
        "sortJassTrump": 8
      },
      "Shield 11": {
        "rank": "U",
        "rankImage": "i/cards-swiss/11Shield.svg",
        "suitImage": "i/cards-swiss/shield.svg",
        "suit": 4,
        "order": 11,
        "sortDefault": 10,
        "sortJassTrump": 13
      },
      "Shield 12": {
        "rank": "O",
        "rankImage": "i/cards-swiss/12Shield.svg",
        "suitImage": "i/cards-swiss/shield.svg",
        "suit": 4,
        "order": 12,
        "sortDefault": 11,
        "sortJassTrump": 9
      },
      "Shield 13": {
        "rank": "K",
        "rankImage": "i/cards-swiss/13Shield.svg",
        "suitImage": "i/cards-swiss/shield.svg",
        "suit": 4,
        "order": 13,
        "sortDefault": 12,
        "sortJassTrump": 10
      }
    },
    "clickable": true,
    "faceTemplates": [
      {
        "border": false,
        "radius": false,
        "objects": [
          {
            "type": "image",
            "x": 0,
            "y": 0,
            "width": 103,
            "height": 160,
            "color": "transparent",
            "value": "/i/cards-default/2B.svg"
          }
        ]
      },
      {
        "border": 1,
        "radius": 6,
        "objects": [
          {
            "type": "image",
            "width": 103,
            "height": 160,
            "color": "white"
          },
          {
            "type": "image",
            "x": 15,
            "y": 10,
            "width": 73,
            "height": 140,
            "color": "white",
            "dynamicProperties": {
              "value": "rankImage"
            },
            "svgReplaces": {
              "currentColor": "suitColor"
            }
          },
          {
            "type": "text",
            "x": -3,
            "y": -2,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "rank",
              "color": "suitColor"
            },
            "css": {
              "letter-spacing": "-6px"
            }
          },
          {
            "type": "text",
            "x": 81,
            "y": 127,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "rank",
              "color": "suitColor"
            },
            "rotation": 180,
            "css": {
              "letter-spacing": "-6px"
            }
          },
          {
            "type": "image",
            "x": 1,
            "y": 28,
            "width": 23,
            "height": 23,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImage"
            }
          },
          {
            "type": "image",
            "x": 79,
            "y": 110,
            "width": 23,
            "height": 23,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImage"
            },
            "rotation": 180
          }
        ]
      }
    ],
    "inheritFrom": {
      "deck1": [
        "cardDefaults"
      ]
    },
    "deckSuits": [
      "",
      "acorns",
      "bells",
      "roses",
      "shields"
    ],
    "deckSuitsImage": [
      "",
      "i/cards-german/acorn.svg",
      "i/cards-german/bell.svg",
      "i/cards-swiss/rose.svg",
      "i/cards-swiss/shield.svg",
      "",
      ""
    ],
    "deckSuitsText": [
      "",
      "",
      "",
      "",
      "",
      "No\nTrump",
      "All\nTrump"
    ],
    "deckSuitsUni": [
      "",
      "🌰",
      "🔔",
      "🌼",
      "🛡",
      "NT",
      "AT"
    ],
    "deckType": 6,
    "staged": false,
    "deckDiceFaces": [
      {
        "image": "i/cards-german/acorn.svg",
        "imageScale": 0.5
      },
      {
        "image": "i/cards-german/bell.svg"
      },
      {
        "image": "i/cards-swiss/rose.svg"
      },
      {
        "image": "i/cards-swiss/shield.svg",
        "imageScale": 0.6
      }
    ]
  },
  "2wa8": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Acorn 01",
    "id": "2wa8",
    "parent": "pile2",
    "staged": false
  },
  "alcs": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Acorn 06",
    "id": "alcs",
    "parent": "pile2",
    "staged": false
  },
  "zjgq": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Acorn 07",
    "id": "zjgq",
    "parent": "pile2",
    "staged": false
  },
  "f4ea": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Acorn 08",
    "id": "f4ea",
    "parent": "pile2",
    "staged": false
  },
  "4gts": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Acorn 09",
    "id": "4gts",
    "parent": "pile2",
    "staged": false
  },
  "4u5f": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Acorn 10",
    "id": "4u5f",
    "parent": "pile2",
    "staged": false
  },
  "1zs0": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Acorn 11",
    "id": "1zs0",
    "parent": "pile2",
    "staged": false
  },
  "fj5l": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Acorn 12",
    "id": "fj5l",
    "parent": "pile2",
    "staged": false
  },
  "nksh": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Acorn 13",
    "id": "nksh",
    "parent": "pile2",
    "staged": false
  },
  "2clx": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Bell 01",
    "id": "2clx",
    "parent": "pile2",
    "staged": false
  },
  "wkpt": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Bell 06",
    "id": "wkpt",
    "parent": "pile2",
    "staged": false
  },
  "cysa": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Bell 07",
    "id": "cysa",
    "parent": "pile2",
    "staged": false
  },
  "1uhp": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Bell 08",
    "id": "1uhp",
    "parent": "pile2",
    "staged": false
  },
  "ix0x": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Bell 09",
    "id": "ix0x",
    "parent": "pile2",
    "staged": false
  },
  "4ljo": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Bell 10",
    "id": "4ljo",
    "parent": "pile2",
    "staged": false
  },
  "dsaz": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Bell 11",
    "id": "dsaz",
    "parent": "pile2",
    "staged": false
  },
  "2yuy": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Bell 12",
    "id": "2yuy",
    "parent": "pile2",
    "staged": false
  },
  "ydai": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Bell 13",
    "id": "ydai",
    "staged": false,
    "parent": "pile2"
  },
  "lqvm": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Rose 01",
    "id": "lqvm",
    "staged": false,
    "parent": "pile2"
  },
  "l1a4": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Rose 06",
    "id": "l1a4",
    "parent": "pile2",
    "staged": false
  },
  "1ao8": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Rose 07",
    "id": "1ao8",
    "parent": "pile2",
    "staged": false
  },
  "z53z": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Rose 08",
    "id": "z53z",
    "parent": "pile2",
    "staged": false
  },
  "l477": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Rose 09",
    "id": "l477",
    "parent": "pile2",
    "staged": false
  },
  "xlbo": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Rose 10",
    "id": "xlbo",
    "parent": "pile2",
    "staged": false
  },
  "2fzs": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Rose 11",
    "id": "2fzs",
    "parent": "pile2",
    "staged": false
  },
  "ke9s": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Rose 12",
    "id": "ke9s",
    "parent": "pile2",
    "staged": false
  },
  "0ytl": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Rose 13",
    "id": "0ytl",
    "parent": "pile2",
    "staged": false
  },
  "jykm": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Shield 01",
    "id": "jykm",
    "staged": false,
    "parent": "pile2"
  },
  "4ol2": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Shield 06",
    "id": "4ol2",
    "parent": "pile2",
    "staged": false
  },
  "5jz0": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Shield 07",
    "id": "5jz0",
    "parent": "pile2",
    "staged": false
  },
  "6v02": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Shield 08",
    "id": "6v02",
    "parent": "pile2",
    "staged": false
  },
  "ev9f": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Shield 09",
    "id": "ev9f",
    "parent": "pile2",
    "staged": false
  },
  "rkh9": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Shield 10",
    "id": "rkh9",
    "parent": "pile2",
    "staged": false
  },
  "3lst": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Shield 11",
    "id": "3lst",
    "parent": "pile2",
    "staged": false
  },
  "wdsg": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Shield 12",
    "id": "wdsg",
    "parent": "pile2",
    "staged": false
  },
  "mb5b": {
    "deck": "swissDeck",
    "type": "card",
    "cardType": "Shield 13",
    "id": "mb5b",
    "staged": false,
    "parent": "pile2"
  },
  "itemsHolder27": {
    "inheritFrom": {
      "itemsHolder15": "*"
    },
    "type": "holder",
    "id": "itemsHolder27",
    "x": 410,
    "y": 180,
    "dropTarget": {
      "item": 27
    }
  },
  "itemsHolder28": {
    "inheritFrom": {
      "itemsHolder15": "*"
    },
    "type": "holder",
    "id": "itemsHolder28",
    "x": 510,
    "y": 180,
    "dropTarget": {
      "item": 28
    }
  },
  "0iep": {
    "y": 4,
    "x": 4,
    "width": 50,
    "height": 50,
    "image": "i/icons/hearts.svg",
    "svgReplaces": {
      "currentColor": "itemColor"
    },
    "item": 12,
    "itemColor": "#e50932",
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "2zor",
    "itemMarker": true,
    "dragging": null,
    "ownedBy": null,
    "id": "0iep",
    "parent": "itemsHolder12",
    "clickable": false
  },
  "itemsHolder29": {
    "inheritFrom": {
      "itemsHolder12": "*"
    },
    "type": "holder",
    "id": "itemsHolder29",
    "x": 10,
    "y": 250,
    "dropTarget": {
      "item": 29
    }
  },
  "itemsHolder30": {
    "inheritFrom": {
      "itemsHolder29": "*"
    },
    "type": "holder",
    "id": "itemsHolder30",
    "x": 110,
    "y": 250,
    "dropTarget": {
      "item": 30
    }
  },
  "itemsHolder31": {
    "inheritFrom": {
      "itemsHolder29": "*"
    },
    "type": "holder",
    "id": "itemsHolder31",
    "x": 210,
    "y": 255,
    "dropTarget": {
      "item": 31
    }
  },
  "itemsHolder32": {
    "inheritFrom": {
      "itemsHolder29": "*"
    },
    "type": "holder",
    "id": "itemsHolder32",
    "x": 310,
    "y": 250,
    "dropTarget": {
      "item": 32
    }
  },
  "itemsHolder33": {
    "inheritFrom": {
      "itemsHolder29": "*"
    },
    "type": "holder",
    "id": "itemsHolder33",
    "x": 410,
    "y": 250,
    "dropTarget": {
      "item": 33
    }
  },
  "itemsHolder34": {
    "inheritFrom": {
      "itemsHolder29": "*"
    },
    "type": "holder",
    "id": "itemsHolder34",
    "x": 510,
    "y": 250,
    "dropTarget": {
      "item": 34
    }
  },
  "itemsHolder35": {
    "inheritFrom": {
      "itemsHolder34": "*"
    },
    "type": "holder",
    "id": "itemsHolder35",
    "x": 10,
    "y": 320,
    "dropTarget": {
      "item": 35
    }
  },
  "itemsHolder36": {
    "inheritFrom": {
      "itemsHolder35": "*"
    },
    "type": "holder",
    "id": "itemsHolder36",
    "x": 110,
    "y": 320,
    "dropTarget": {
      "item": 36
    }
  },
  "itemsHolder37": {
    "inheritFrom": {
      "itemsHolder35": "*"
    },
    "type": "holder",
    "id": "itemsHolder37",
    "x": 210,
    "y": 320,
    "dropTarget": {
      "item": 37
    }
  },
  "itemsHolder38": {
    "inheritFrom": {
      "itemsHolder35": "*"
    },
    "type": "holder",
    "id": "itemsHolder38",
    "x": 309,
    "y": 318,
    "dropTarget": {
      "item": 38
    }
  },
  "itemsHolder39": {
    "inheritFrom": {
      "itemsHolder35": "*"
    },
    "type": "holder",
    "id": "itemsHolder39",
    "x": 410,
    "y": 320,
    "dropTarget": {
      "item": 39
    }
  },
  "itemsHolder40": {
    "inheritFrom": {
      "itemsHolder35": "*"
    },
    "type": "holder",
    "id": "itemsHolder40",
    "x": 510,
    "y": 320,
    "dropTarget": {
      "item": 40
    }
  },
  "2u5b": {
    "y": 4,
    "x": 4,
    "width": 50,
    "height": 50,
    "image": "i/cards-spanish/club.svg",
    "item": 29,
    "itemColor": "purple",
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "u9ud",
    "itemMarker": true,
    "dragging": null,
    "ownedBy": null,
    "id": "2u5b",
    "parent": "itemsHolder29",
    "clickable": false
  },
  "2sc8": {
    "y": 4,
    "x": 4,
    "width": 50,
    "height": 50,
    "image": "i/cards-spanish/coin.svg",
    "item": 30,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "u9ud",
    "itemMarker": true,
    "dragging": null,
    "ownedBy": null,
    "id": "2sc8",
    "parent": "itemsHolder30",
    "clickable": false
  },
  "xe11": {
    "y": 4,
    "x": 4,
    "width": 50,
    "height": 50,
    "image": "i/cards-german/acorn.svg",
    "item": 35,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "mh8m",
    "itemMarker": true,
    "dragging": null,
    "ownedBy": null,
    "id": "xe11",
    "parent": "itemsHolder35",
    "clickable": false
  },
  "ohkh": {
    "y": 4,
    "x": 4,
    "width": 50,
    "height": 50,
    "image": "i/cards-german/bell.svg",
    "item": 36,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "mh8m",
    "itemMarker": true,
    "dragging": null,
    "ownedBy": null,
    "id": "ohkh",
    "parent": "itemsHolder36",
    "clickable": false
  },
  "izdp": {
    "y": 4,
    "x": 4,
    "width": 50,
    "height": 50,
    "image": "i/cards-german/leaf.svg",
    "item": 37,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "mh8m",
    "itemMarker": true,
    "dragging": null,
    "ownedBy": null,
    "id": "izdp",
    "parent": "itemsHolder37",
    "clickable": false
  },
  "84jl": {
    "y": 4,
    "x": 4,
    "width": 50,
    "height": 50,
    "image": "i/cards-swiss/rose.svg",
    "item": 38,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "mh8m",
    "itemMarker": true,
    "dragging": null,
    "ownedBy": null,
    "id": "84jl",
    "parent": "itemsHolder38",
    "clickable": false
  },
  "rg6z": {
    "y": 4,
    "x": 4,
    "width": 50,
    "height": 50,
    "image": "/assets/-374765193_624",
    "svgReplaces": {
      "currentColor": "itemColor"
    },
    "item": 27,
    "itemColor": "purple",
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "cznb",
    "itemMarker": true,
    "dragging": null,
    "ownedBy": null,
    "id": "rg6z",
    "parent": "itemsHolder27",
    "clickable": false
  },
  "u7zn": {
    "y": 4,
    "x": 4,
    "width": 50,
    "height": 50,
    "image": "i/cards-spanish/sword.svg",
    "item": 32,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "zp0p",
    "itemMarker": true,
    "dragging": null,
    "ownedBy": null,
    "id": "u7zn",
    "parent": "itemsHolder32",
    "clickable": false
  },
  "79g7": {
    "y": 4,
    "x": 4,
    "width": 50,
    "height": 50,
    "image": "i/cards-spanish/cup.svg",
    "item": 31,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "9mqz",
    "itemMarker": true,
    "dragging": null,
    "ownedBy": null,
    "id": "79g7",
    "parent": "itemsHolder31",
    "clickable": false
  },
  "gawx": {
    "y": 4,
    "x": 4,
    "width": 50,
    "height": 50,
    "image": "i/icons/square.svg",
    "svgReplaces": {
      "currentColor": "itemColor"
    },
    "item": 33,
    "itemColor": "#009e9b",
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "cznb",
    "itemMarker": true,
    "dragging": null,
    "ownedBy": null,
    "id": "gawx",
    "parent": "itemsHolder33",
    "clickable": false
  },
  "vry9": {
    "y": 4,
    "x": 4,
    "width": 50,
    "height": 50,
    "image": "i/icons/hexagon_vertical.svg",
    "svgReplaces": {
      "currentColor": "itemColor"
    },
    "item": 34,
    "itemColor": "#f0e442",
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "cznb",
    "itemMarker": true,
    "dragging": null,
    "ownedBy": null,
    "id": "vry9",
    "parent": "itemsHolder34",
    "clickable": false
  },
  "sae8": {
    "y": 4,
    "x": 4,
    "width": 50,
    "height": 50,
    "image": "/assets/-1568599145_166",
    "svgReplaces": {
      "currentColor": "itemColor"
    },
    "item": 40,
    "itemColor": "#000000",
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "cznb",
    "itemMarker": true,
    "dragging": null,
    "ownedBy": null,
    "id": "sae8",
    "parent": "itemsHolder40",
    "clickable": false
  },
  "ekqo": {
    "y": 4,
    "x": 4,
    "width": 50,
    "height": 50,
    "image": "i/cards-swiss/shield.svg",
    "item": 39,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "mh8m",
    "itemMarker": true,
    "dragging": null,
    "ownedBy": null,
    "id": "ekqo",
    "parent": "itemsHolder39",
    "clickable": false
  },
  "gameID30": {
    "id": "gameID30",
    "x": -276,
    "y": 1320,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "roundsTemp": [
      "Card Points",
      "Suit/Grand Value",
      "Null Value",
      "Multipliers",
      "Adjustments"
    ],
    "displayArray": [
      [
        "playerAidButton",
        1
      ],
      [
        "transferScoreButton",
        0
      ]
    ],
    "settingsArray": [
      [
        "showTricks",
        false
      ],
      [
        "showBidSuit",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        10
      ],
      [
        "deckType",
        5
      ],
      [
        "hideCards",
        6
      ],
      [
        "seatCount",
        3
      ],
      [
        "tempScore",
        true
      ],
      [
        "variableScore",
        true
      ]
    ],
    "scoreSystem": [
      [
        0,
        11,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        10,
        2,
        3,
        4
      ],
      [],
      [],
      []
    ],
    "gameID": true,
    "hintText": "\"stuff.\"",
    "transferExceptionsRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Transferring score ..."
          },
          {
            "type": "subtitle",
            "text": "This will transfer the score in the temporary scoreboard to the main one. The Card Points row is only displayed as an aid to assist in determining if players made their contract. The value of the Card Points row will be subtracted when transferring the score. The Card Points row should automatically show the same for each player on the same 'team' for this round. However, other row values must be entered separately for each player."
          }
        ],
        "confirmButtonText": "Yes",
        "cancelButtonText": "No"
      },
      {
        "func": "FOREACH",
        "in": "${PROPERTY _totals OF tempScoreboard}",
        "loopRoutine": [
          "var seat = 'seat' + ${key}",
          "var cardPoints = ${PROPERTY tempScore OF $seat}",
          "var cardPoints = ${cardPoints.0}",
          "var value = ${value} - ${cardPoints}",
          {
            "func": "SCORE",
            "mode": "set",
            "property": "score",
            "round": "${PROPERTY currentRound OF scoreboard}",
            "seats": "${seat}",
            "value": "${value}"
          }
        ]
      }
    ],
    "transferButtonReturn": false,
    "text": "Skat",
    "sort2": "sorSuitSkat",
    "sort1": "sortSkat",
    "customFaceCount": 7,
    "sortPreExceptionsRoutine": [
      "var trump = ${PROPERTY trump OF trump}",
      {
        "func": "IF",
        "operand1": "${trump}",
        "relation": "<",
        "operand2": 6,
        "thenRoutine": [
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "order",
            "value": 11
          },
          {
            "func": "SET",
            "property": "sortSuitSkat",
            "value": 0
          }
        ]
      }
    ],
    "sortExceptionsRoutine": [
      "var trump = ${PROPERTY trump OF trump}",
      "// Adjust value for using regular suit for trump widget and sortSuitSkat for sorting.",
      {
        "func": "IF",
        "operand1": "${trump}",
        "operand2": 2,
        "thenRoutine": [
          "var trump = 4"
        ],
        "elseRoutine": [
          {
            "func": "IF",
            "operand1": "${trump}",
            "operand2": 4,
            "thenRoutine": [
              "var trump = 3"
            ],
            "elseRoutine": [
              {
                "func": "IF",
                "operand1": "${trump}",
                "operand2": 3,
                "thenRoutine": [
                  "var trump = 2"
                ]
              }
            ]
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${trump}",
        "operand2": 6,
        "thenRoutine": [
          {
            "func": "SELECT",
            "type": "deck",
            "property": "deckType",
            "value": "${PROPERTY deckType OF settingsDecks}",
            "collection": "deckType"
          },
          {
            "func": "GET",
            "property": "id",
            "collection": "deckType"
          },
          {
            "func": "SELECT",
            "type": "card",
            "property": "deck",
            "value": "${id}",
            "collection": "thisSuit"
          },
          {
            "func": "SET",
            "collection": "thisSuit",
            "property": "sortSuitSkat",
            "value": null
          },
          {
            "func": "SORT",
            "collection": "DEFAULT",
            "key": "sortDefault",
            "reverse": "${PROPERTY sortDirection OF $seatID}"
          },
          {
            "func": "SORT",
            "collection": "DEFAULT",
            "key": "sortSuitSkat"
          }
        ],
        "elseRoutine": [
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "type": "card",
            "property": "id",
            "relation": "!=",
            "value": null,
            "collection": "thisSuit"
          },
          {
            "func": "SELECT",
            "source": "thisSuit",
            "type": "card",
            "property": "order",
            "relation": "!=",
            "value": 11,
            "collection": "noJacks"
          },
          {
            "func": "SET",
            "collection": "noJacks",
            "property": "sortSuitSkat",
            "value": null
          },
          {
            "func": "SELECT",
            "source": "noJacks",
            "property": "sortSuitSkat",
            "value": "${trump}",
            "collection": "thisSuit"
          },
          {
            "func": "SET",
            "collection": "thisSuit",
            "property": "sortSuitSkat",
            "value": 0
          },
          {
            "func": "SORT",
            "collection": "DEFAULT",
            "key": "sortSkat",
            "reverse": "${PROPERTY sortDirection OF $seatID}"
          },
          {
            "func": "SORT",
            "collection": "DEFAULT",
            "key": "sortSuitSkat"
          }
        ]
      }
    ],
    "showTempScoreTotals": false,
    "trumpRoutine": [
      "var trump = ${PROPERTY trump OF trump}",
      {
        "func": "IF",
        "operand1": "${trump}",
        "operand2": 2,
        "thenRoutine": [
          {
            "func": "SCORE",
            "seats": [
              "seat1",
              "seat3",
              "seat5",
              "seat7"
            ],
            "property": "tempScore",
            "round": 2,
            "value": 9
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${trump}",
        "operand2": 4,
        "thenRoutine": [
          {
            "func": "SCORE",
            "seats": [
              "seat1",
              "seat3",
              "seat5",
              "seat7"
            ],
            "property": "tempScore",
            "round": 2,
            "value": 10
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${trump}",
        "operand2": 3,
        "thenRoutine": [
          {
            "func": "SCORE",
            "seats": [
              "seat1",
              "seat3",
              "seat5",
              "seat7"
            ],
            "property": "tempScore",
            "round": 2,
            "value": 11
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${trump}",
        "operand2": 1,
        "thenRoutine": [
          {
            "func": "SCORE",
            "seats": [
              "seat1",
              "seat3",
              "seat5",
              "seat7"
            ],
            "property": "tempScore",
            "round": 2,
            "value": 12
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${trump}",
        "operand2": 5,
        "thenRoutine": [
          {
            "func": "SCORE",
            "seats": [
              "seat1",
              "seat3",
              "seat5",
              "seat7"
            ],
            "property": "tempScore",
            "round": 2,
            "value": 24
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${trump}",
        "operand2": 0,
        "thenRoutine": [
          {
            "func": "SCORE",
            "seats": [
              "seat1",
              "seat3",
              "seat5",
              "seat7"
            ],
            "property": "tempScore",
            "round": 2,
            "value": 0
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${trump}",
        "operand2": 6,
        "thenRoutine": [
          {
            "func": "SCORE",
            "seats": [
              "seat1",
              "seat3",
              "seat5",
              "seat7"
            ],
            "property": "tempScore",
            "round": 2,
            "value": 0
          }
        ]
      }
    ],
    "playerAidDetail1": "Skat",
    "playerAidDetail2": "Hand",
    "playerAidDetail3": "Win",
    "playerAidDetail4": "Lose",
    "messageArray": [
      {
        "value": "Default",
        "text": "Click here to choose message"
      },
      {
        "value": "Ouvert",
        "text": "Ouvert (show cards)"
      },
      {
        "value": "Schneider",
        "text": "Schneider (90+ points)"
      },
      {
        "value": "Schwarz",
        "text": "Schwarz (all tricks)"
      },
      {
        "value": "Kontra",
        "text": "Kontra (double score)"
      },
      {
        "value": "Rekontra",
        "text": "Rekontra (double score again)"
      },
      {
        "value": "Spitze",
        "text": "Spitze (win last trick with lowest trump)"
      }
    ],
    "0deckSuitsText": [
      "",
      "",
      "",
      "",
      "",
      "Grand",
      "Null"
    ],
    "0deckSuitsColor": [
      "",
      "",
      "#e50932",
      "",
      "#e50932",
      "",
      ""
    ],
    "0deckSuitsImage": [
      "",
      "i/icons/clubs.svg",
      "i/icons/diamonds.svg",
      "i/icons/spades.svg",
      "i/icons/hearts.svg",
      "",
      ""
    ],
    "0deckSuitsUni": [
      "",
      "♣",
      "♦",
      "♠",
      "♥",
      "G",
      "N"
    ]
  },
  "playerAid30": {
    "type": "scoreboard",
    "id": "playerAid30",
    "x": 1225,
    "y": 260,
    "width": 360,
    "height": 275,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "css": {
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "onlyVisibleForSeat": [],
    "roundLabel": "Multiplier",
    "rounds": [
      "Matadors (with or against)",
      "Game (always applies)",
      "Hand (skat not used)",
      "Schneider (90+ points)",
      "Schneider announced",
      "Schwarz (all tricks)",
      "Schwarz announced",
      "Open"
    ],
    "seats": [
      "playerAidDetail1",
      "playerAidDetail2"
    ],
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "playerAid": true,
    "scoreProperty": "score30"
  },
  "playerAidDetail3": {
    "type": "seat",
    "id": "playerAidDetail3",
    "index": 9,
    "x": 1790,
    "tricks": 0,
    "tempScore": [],
    "showing": false,
    "y": 237,
    "displayEmpty": "only for playerAids",
    "movableInEdit": false,
    "score30": [
      23,
      35,
      46,
      59
    ],
    "score": [],
    "playerAidSeat": true
  },
  "playerAidDetail4": {
    "type": "seat",
    "id": "playerAidDetail4",
    "index": 9,
    "x": 1790,
    "tricks": 0,
    "tempScore": [],
    "showing": false,
    "y": 337,
    "displayEmpty": "only for playerAids",
    "movableInEdit": false,
    "score30": [
      46,
      70,
      92,
      118
    ],
    "score": [],
    "playerAidSeat": true
  },
  "playerAid30a": {
    "type": "scoreboard",
    "id": "playerAid30a",
    "y": 280,
    "width": 360,
    "height": 155,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "css": {
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "roundLabel": "Null Contracts",
    "rounds": [
      "Null",
      "Null Hand",
      "Null Ouvert",
      "Null Ouvert Hand"
    ],
    "scoreProperty": "score30",
    "seats": [
      "playerAidDetail3",
      "playerAidDetail4"
    ],
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "fixedParent": true,
    "parent": "playerAid30"
  },
  "deckSuitsSettings": {
    "id": "deckSuitsSettings",
    "x": 1635,
    "y": 412,
    "css": {
      "background": "white",
      "border": "1px solid black"
    },
    "text": "deckSuitsSettings",
    "0deckDiceFaces": [
      {
        "image": "i/icons/clubs.svg"
      },
      {
        "image": "i/icons/diamonds.svg",
        "deckSuitColor": "#e50932"
      },
      {
        "image": "i/icons/spades.svg"
      },
      {
        "image": "i/icons/hearts.svg",
        "deckSuitColor": "#e50932"
      }
    ],
    "0deckSuits": [
      "",
      "clubs",
      "diamonds",
      "spades",
      "hearts"
    ],
    "0deckSuitsColor": [
      "",
      "",
      "#e50932",
      "",
      "#e50932",
      "",
      ""
    ],
    "0deckSuitsImage": [
      "",
      "i/icons/clubs.svg",
      "i/icons/diamonds.svg",
      "i/icons/spades.svg",
      "i/icons/hearts.svg",
      "",
      ""
    ],
    "0deckSuitsUni": [
      "",
      "♣",
      "♦",
      "♠",
      "♥",
      "NT",
      "AT"
    ],
    "0deckSuitsText": [
      "",
      "",
      "",
      "",
      "",
      "No\nTrump",
      "All\nTrump"
    ],
    "deckSuitsRoutine": [
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      "var deckType = ${PROPERTY deckType OF settingsDecks}",
      {
        "func": "FOREACH",
        "in": [
          "deckDiceFaces",
          "deckSuits",
          "deckSuitsColor",
          "deckSuitsImage",
          "deckSuitsText",
          "deckSuitsUni"
        ],
        "loopRoutine": [
          "var thisProp = ${deckType} + ${value}",
          {
            "func": "IF",
            "condition": "${PROPERTY $thisProp OF $gameID}",
            "thenRoutine": [
              {
                "func": "SELECT",
                "property": "id",
                "value": "${gameID}"
              }
            ],
            "elseRoutine": [
              {
                "func": "SELECT",
                "property": "id",
                "value": "deckSuitsSettings"
              }
            ]
          },
          {
            "func": "GET",
            "property": "${thisProp}",
            "variable": "suitProp"
          },
          {
            "func": "SELECT",
            "type": "deck",
            "property": "deckType",
            "value": "${deckType}"
          },
          {
            "func": "SET",
            "property": "${value}",
            "value": "${suitProp}"
          }
        ]
      }
    ],
    "5deckDiceFaces": [
      {
        "image": "i/cards-german/acorn.svg",
        "imageScale": 0.5
      },
      {
        "image": "i/cards-german/bell.svg"
      },
      {
        "image": "i/cards-german/leaf.svg"
      },
      {
        "image": "i/cards-german/heart.svg"
      }
    ],
    "5deckSuits": [
      "",
      "acorns",
      "bells",
      "leaves",
      "hearts"
    ],
    "5deckSuitsImage": [
      "",
      "i/cards-german/acorn.svg",
      "i/cards-german/bell.svg",
      "i/cards-german/leaf.svg",
      "i/cards-german/heart.svg",
      "",
      ""
    ],
    "5deckSuitsText": [
      "",
      "",
      "",
      "",
      "",
      "Grand",
      "Null"
    ],
    "5deckSuitsUni": [
      "",
      "🌰",
      "🔔",
      "🌿",
      "💜",
      "G",
      "N"
    ],
    "4deckDiceFaces": [
      {
        "image": "i/cards-spanish/club.svg",
        "imageScale": 0.5
      },
      {
        "image": "i/cards-spanish/coin.svg"
      },
      {
        "image": "i/cards-spanish/cup.svg"
      },
      {
        "image": "i/cards-spanish/sword.svg",
        "imageScale": 0.3
      }
    ],
    "4deckSuits": [
      "",
      "clubs",
      "coins",
      "cups",
      "swords"
    ],
    "4deckSuitsImage": [
      "",
      "i/cards-spanish/club.svg",
      "i/cards-spanish/coin.svg",
      "i/cards-spanish/cup.svg",
      "i/cards-spanish/sword.svg",
      "",
      ""
    ],
    "4deckSuitsText": [
      "",
      "",
      "",
      "",
      "",
      "No\nTrump",
      ""
    ],
    "4deckSuitsUni": [
      "",
      "🔨",
      "🪙",
      "🏆",
      "⚔",
      "NT",
      ""
    ],
    "3deckDiceFaces": [
      {
        "image": "/i/icons/hearts.svg",
        "deckSuitColor": "#cc79a7"
      },
      {
        "image": "i/icons/circle.svg",
        "deckSuitColor": "#d55e00"
      },
      {
        "image": "i/icons/square.svg",
        "deckSuitColor": "#009e9b"
      },
      {
        "image": "i/icons/hexagon_vertical.svg",
        "deckSuitColor": "#f0e442"
      },
      {
        "image": "/assets/-1568599145_166",
        "deckSuitColor": "#000000"
      }
    ],
    "3deckSuits": [
      "",
      "red",
      "orange",
      "green",
      "yellow",
      "black"
    ],
    "3deckSuitsColor": [
      "",
      "#cc79a7",
      "#d55e00",
      "#009e9b",
      "#f0e442",
      "#000000",
      ""
    ],
    "3deckSuitsImage": [
      "",
      "/i/icons/hearts.svg",
      "i/icons/circle.svg",
      "i/icons/square.svg",
      "i/icons/hexagon_vertical.svg",
      "/assets/-1568599145_166",
      ""
    ],
    "3deckSuitsText": [
      "",
      "",
      "",
      "",
      "",
      "",
      "No\nTrump"
    ],
    "3deckSuitsUni": [
      "",
      "❤",
      "🟠",
      "🟩",
      "⬢",
      "▲",
      "NT"
    ],
    "2deckDiceFaces": [
      {
        "image": "i/icons/clubs.svg"
      },
      {
        "image": "i/icons/diamonds.svg",
        "deckSuitColor": "#e50932"
      },
      {
        "image": "i/icons/spades.svg"
      },
      {
        "image": "i/icons/hearts.svg",
        "deckSuitColor": "#e50932"
      },
      {
        "image": "/assets/-374765193_624",
        "deckSuitColor": "purple"
      }
    ],
    "2deckSuits": [
      "",
      "clubs",
      "diamonds",
      "spades",
      "hearts",
      "stars"
    ],
    "2deckSuitsColor": [
      "",
      "",
      "#e50932",
      "",
      "#e50932",
      "purple",
      ""
    ],
    "2deckSuitsImage": [
      "",
      "i/icons/clubs.svg",
      "i/icons/diamonds.svg",
      "i/icons/spades.svg",
      "i/icons/hearts.svg",
      "/assets/-374765193_624",
      ""
    ],
    "2deckSuitsText": [
      "",
      "",
      "",
      "",
      "",
      "",
      "No\nTrump"
    ],
    "2deckSuitsUni": [
      "",
      "♣",
      "♦",
      "♠",
      "♥",
      "*",
      "NT"
    ],
    "6deckDiceFaces": [
      {
        "image": "i/cards-german/acorn.svg",
        "imageScale": 0.5
      },
      {
        "image": "i/cards-german/bell.svg"
      },
      {
        "image": "i/cards-swiss/rose.svg"
      },
      {
        "image": "i/cards-swiss/shield.svg",
        "imageScale": 0.6
      }
    ],
    "6deckSuits": [
      "",
      "acorns",
      "bells",
      "roses",
      "shields"
    ],
    "6deckSuitsImage": [
      "",
      "i/cards-german/acorn.svg",
      "i/cards-german/bell.svg",
      "i/cards-swiss/rose.svg",
      "i/cards-swiss/shield.svg",
      "",
      ""
    ],
    "6deckSuitsText": [
      "",
      "",
      "",
      "",
      "",
      "No\nTrump",
      "All\nTrump"
    ],
    "6deckSuitsUni": [
      "",
      "🌰",
      "🔔",
      "🌼",
      "🛡",
      "NT",
      "AT"
    ],
    "7deckDiceFaces": [
      {
        "image": "i/icons/clubs.svg"
      },
      {
        "image": "i/icons/diamonds.svg",
        "deckSuitColor": "#e50932"
      },
      {
        "image": "i/icons/spades.svg"
      },
      {
        "image": "i/icons/hearts.svg",
        "deckSuitColor": "#e50932"
      },
      {
        "image": "/assets/-374765193_624",
        "deckSuitColor": "purple"
      }
    ],
    "7deckSuits": [
      "",
      "clubs",
      "diamonds",
      "spades",
      "hearts",
      "stars"
    ],
    "7deckSuitsColor": [
      "",
      "",
      "#e50932",
      "",
      "#e50932",
      "purple",
      ""
    ],
    "7deckSuitsImage": [
      "",
      "i/icons/clubs.svg",
      "i/icons/diamonds.svg",
      "i/icons/spades.svg",
      "i/icons/hearts.svg",
      "/assets/-374765193_624",
      ""
    ],
    "7deckSuitsText": [
      "",
      "",
      "",
      "",
      "",
      "",
      "No\nTrump"
    ],
    "7deckSuitsUni": [
      "",
      "♣",
      "♦",
      "♠",
      "♥",
      "*",
      "NT"
    ]
  },
  "gameID31": {
    "id": "gameID31",
    "x": -150,
    "y": 1327,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortDefault",
    "sort2": "suit",
    "messageArray": [
      {
        "value": "Default",
        "text": "Click here to choose message"
      },
      {
        "value": "Double",
        "text": "Double (x2)"
      },
      {
        "value": "Redouble",
        "text": "Redouble (x4)"
      }
    ],
    "settingsArray": [
      [
        "showTricks",
        true
      ],
      [
        "showDiscard",
        false
      ],
      [
        "showBidSuit",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "deckType",
        0
      ],
      [
        "cardCount",
        1
      ],
      [
        "seatCount",
        4
      ],
      [
        "hideCards",
        4
      ]
    ],
    "gameID": true,
    "hintText": "\"Choose number of players from Decks & Players button.\\a\\a Bid number of tricks using black and white bid system widgets near seat. Bid suit by using the trump widget in the bottom-left.\\a\\a Tricks are counted automatically in the scoreboard to the right, but scores should be entered manually using the green/red +/- buttons above the main scoreboard.\"",
    "preSetExceptionsRoutine": [
      {
        "func": "CALL",
        "routine": "recallRoutine"
      },
      {
        "func": "SELECT",
        "type": "card",
        "property": "deck",
        "value": "deck2"
      },
      {
        "func": "SET",
        "property": "deck2Mark",
        "value": "__"
      }
    ],
    "displayArray": [
      [
        "transferScoreButton",
        0
      ],
      [
        "scoreButton",
        0
      ],
      [
        "trump",
        1
      ],
      [
        "playerAidButton",
        1
      ]
    ],
    "text": "La Bâtarde",
    "dealRoutine": [
      {
        "func": "MOVE",
        "from": "hand",
        "to": "deckHolder",
        "count": 0
      },
      "var seats = ${PROPERTY seatCount OF settingsDecks}",
      "var thisCount = ${seats} + 'PDeal'",
      "var thisCount = ${PROPERTY $thisCount}",
      "var round = ${PROPERTY currentRound OF scoreboard}",
      "var thisCount = ${thisCount.$round}",
      {
        "func": "MOVE",
        "from": "deckHolder",
        "to": [
          "seat1",
          "seat2",
          "seat3",
          "seat4",
          "seat5",
          "seat6",
          "seat7",
          "seat8"
        ],
        "count": "${thisCount}"
      },
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "autoSortRoutine"
      }
    ],
    "3PDeal": [
      0,
      7,
      8,
      9,
      10,
      11,
      12,
      12,
      11,
      10,
      9,
      8,
      7,
      12
    ],
    "4PDeal": [
      0,
      5,
      6,
      7,
      8,
      9,
      9,
      8,
      7,
      6,
      5,
      9
    ],
    "5PDeal": [
      0,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      14,
      13,
      12,
      11,
      10,
      9,
      8,
      7,
      6,
      5,
      14
    ],
    "6PDeal": [
      0,
      7,
      8,
      9,
      10,
      11,
      12,
      12,
      11,
      10,
      9,
      8,
      7,
      12
    ],
    "7PDeal": [
      0,
      5,
      6,
      7,
      8,
      9,
      10,
      10,
      9,
      8,
      7,
      6,
      5,
      10
    ],
    "recallRoutine": [
      {
        "func": "SELECT",
        "type": "card",
        "property": "deck",
        "value": "cavaliers"
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY seatCount OF settingsDecks}",
        "relation": "<",
        "operand2": 5,
        "thenRoutine": [
          {
            "func": "SET",
            "property": "parent",
            "value": "tempHolder"
          },
          {
            "func": "SET",
            "property": "activeFace",
            "value": 0
          },
          {
            "func": "MOVE",
            "from": "tempHolder",
            "to": "offHolder",
            "count": 0
          },
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "deck2Mark",
            "value": null
          }
        ]
      },
      {
        "func": "SET",
        "property": "parent",
        "value": "tempHolder"
      },
      {
        "func": "SET",
        "property": "activeFace",
        "value": 0
      },
      {
        "func": "MOVE",
        "from": "tempHolder",
        "to": "deckHolder",
        "count": 0
      },
      {
        "func": "SHUFFLE",
        "collection": "DEFAULT"
      },
      {
        "func": "SHUFFLE",
        "holder": "deckHolder"
      }
    ],
    "hideCardsByType": [
      "C 01",
      "D 01",
      "S 01",
      "H 01"
    ],
    "sortExceptionsRoutine": [
      "var trump = ${PROPERTY trump OF trump}",
      "// Adjust value for using regular suit for trump widget and sortSuitSkat for sorting.",
      {
        "func": "IF",
        "operand1": "${trump}",
        "operand2": 2,
        "thenRoutine": [
          "var trump = 1"
        ],
        "elseRoutine": [
          {
            "func": "IF",
            "operand1": "${trump}",
            "operand2": 3,
            "thenRoutine": [
              "var trump = 2"
            ],
            "elseRoutine": [
              {
                "func": "IF",
                "operand1": "${trump}",
                "operand2": 5,
                "thenRoutine": [
                  "var trump = 3"
                ]
              }
            ]
          }
        ]
      },
      "var isNum = ${trump} / 1",
      {
        "func": "IF",
        "operand1": "${isNum}",
        "operand2": "${trump}",
        "thenRoutine": [
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "suit",
            "value": "${trump}",
            "collection": "trumpSuit"
          },
          {
            "func": "IF",
            "condition": "${reverseSort}",
            "thenRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortBatardeTrump"
              }
            ],
            "elseRoutine": [
              {
                "func": "SORT",
                "collection": "trumpSuit",
                "key": "sortBatardeTrump",
                "reverse": "${PROPERTY sortDirection OF $seatID}"
              }
            ]
          },
          {
            "func": "SORT",
            "key": "suit"
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY text OF trump}",
        "operand2": "All\nTrump",
        "thenRoutine": [
          {
            "func": "IF",
            "condition": "${reverseSort}",
            "thenRoutine": [
              {
                "func": "SORT",
                "key": "sortBatardeTrump"
              }
            ],
            "elseRoutine": [
              {
                "func": "SORT",
                "key": "sortBatardeTrump",
                "reverse": "${PROPERTY sortDirection OF $seatID}"
              }
            ]
          },
          {
            "func": "SORT",
            "key": "suit"
          }
        ]
      }
    ],
    "customFaceCount": 7,
    "0deckSuitsColor": [
      "",
      "",
      "",
      "#e50932",
      "#e50932",
      "",
      ""
    ],
    "0deckSuitsImage": [
      "",
      "",
      "i/icons/clubs.svg",
      "i/icons/diamonds.svg",
      "i/icons/hearts.svg",
      "i/icons/spades.svg",
      ""
    ],
    "0deckSuitsText": [
      "",
      "No\nTrump",
      "",
      "",
      "",
      "",
      "All\nTrump"
    ],
    "0deckSuitsUni": [
      "",
      "NT",
      "♣",
      "♦",
      "♥",
      "♠",
      "AT"
    ],
    "playerAidDetail1": "Order (High to Low)",
    "versionArray": [
      {
        "value": "0",
        "text": "Click here to choose number of players"
      },
      {
        "value": "1",
        "text": "4 (default)"
      },
      {
        "value": "2",
        "text": "3"
      },
      {
        "value": "3",
        "text": "5"
      },
      {
        "value": "4",
        "text": "6"
      },
      {
        "value": "5",
        "text": "7"
      }
    ],
    "version1": {
      "settingsDecksArray": [
        [
          "deckType",
          0
        ],
        [
          "cardCount",
          1
        ],
        [
          "seatCount",
          4
        ],
        [
          "hideCards",
          4
        ]
      ]
    },
    "version2": {
      "settingsDecksArray": [
        [
          "deckType",
          0
        ],
        [
          "cardCount",
          1
        ],
        [
          "seatCount",
          3
        ],
        [
          "hideCards",
          4
        ]
      ]
    },
    "version3": {
      "settingsDecksArray": [
        [
          "deckType",
          1
        ],
        [
          "cardCount",
          1
        ],
        [
          "seatCount",
          5
        ],
        [
          "hideCards",
          4
        ]
      ]
    },
    "version4": {
      "settingsDecksArray": [
        [
          "deckType",
          1
        ],
        [
          "cardCount",
          1
        ],
        [
          "seatCount",
          6
        ],
        [
          "hideCards",
          4
        ]
      ]
    },
    "version5": {
      "settingsDecksArray": [
        [
          "deckType",
          1
        ],
        [
          "cardCount",
          1
        ],
        [
          "seatCount",
          7
        ],
        [
          "hideCards",
          4
        ]
      ]
    },
    "sortPreExceptionsRoutine": [
      {
        "func": "SORT",
        "key": "deck2Mark"
      }
    ]
  },
  "cavaliers": {
    "type": "deck",
    "id": "cavaliers",
    "parent": "offHolder",
    "x": 12,
    "y": 41,
    "width": 86,
    "height": 86,
    "movable": true,
    "movableInEdit": true,
    "cardTypes": {
      "CC": {
        "rank": "C",
        "riderImage": "/i/cards-tarot/CC.png",
        "suitImage": "i/icons/clubs.svg",
        "suit": 1,
        "order": 11.5,
        "sortDefault": 10.5,
        "sortBatardeTrump": 4
      },
      "CD": {
        "rank": "C",
        "riderImage": "/i/cards-tarot/CD.png",
        "suitImage": "i/icons/diamonds.svg",
        "suit": 2,
        "order": 11.5,
        "suitColor": "#e50932",
        "sortDefault": 10.5,
        "sortBatardeTrump": 4
      },
      "CS": {
        "rank": "C",
        "riderImage": "/i/cards-tarot/CS.png",
        "suitImage": "i/icons/spades.svg",
        "suit": 3,
        "order": 11.5,
        "sortDefault": 10.5,
        "sortBatardeTrump": 4
      },
      "CH": {
        "rank": "C",
        "riderImage": "/i/cards-tarot/CH.png",
        "suitImage": "i/icons/hearts.svg",
        "suit": 4,
        "order": 11.5,
        "suitColor": "#e50932",
        "sortDefault": 10.5,
        "sortBatardeTrump": 4
      },
      "CC2": {
        "rank": "C",
        "riderImage": "/i/cards-tarot/CC.png",
        "suitImage": "i/icons/clubs.svg",
        "deck2Mark": "__",
        "suit": 1,
        "order": 11.5,
        "sortDefault": 10.5,
        "sortBatardeTrump": 4
      },
      "CD2": {
        "rank": "C",
        "riderImage": "/i/cards-tarot/CD.png",
        "suitImage": "i/icons/diamonds.svg",
        "deck2Mark": "__",
        "suit": 2,
        "order": 11.5,
        "suitColor": "#e50932",
        "sortDefault": 10.5,
        "sortBatardeTrump": 4
      },
      "CS2": {
        "rank": "C",
        "riderImage": "/i/cards-tarot/CS.png",
        "suitImage": "i/icons/spades.svg",
        "deck2Mark": "__",
        "suit": 3,
        "order": 11.5,
        "sortDefault": 10.5,
        "sortBatardeTrump": 4
      },
      "CH2": {
        "rank": "C",
        "riderImage": "/i/cards-tarot/CH.png",
        "suitImage": "i/icons/hearts.svg",
        "deck2Mark": "__",
        "suit": 4,
        "order": 11.5,
        "suitColor": "#e50932",
        "sortDefault": 10.5,
        "sortBatardeTrump": 4
      }
    },
    "faceTemplates": [
      {
        "border": false,
        "radius": false,
        "objects": [
          {
            "type": "image",
            "x": 0,
            "y": 0,
            "width": 103,
            "height": 160,
            "color": "transparent",
            "value": "/i/cards-default/2B.svg"
          }
        ]
      },
      {
        "border": 1,
        "radius": 6,
        "objects": [
          {
            "type": "image",
            "width": 103,
            "height": 160,
            "color": "white"
          },
          {
            "type": "text",
            "x": -3,
            "y": -2,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "rank",
              "color": "suitColor"
            },
            "css": {
              "letter-spacing": "-6px"
            }
          },
          {
            "type": "text",
            "x": -3,
            "y": 25,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "deck2Mark",
              "color": "suitColor"
            },
            "css": {
              "letter-spacing": "-6px"
            }
          },
          {
            "type": "text",
            "x": 81,
            "y": 127,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "rank",
              "color": "suitColor"
            },
            "rotation": 180,
            "css": {
              "letter-spacing": "-6px"
            }
          },
          {
            "type": "text",
            "x": 81,
            "y": 100,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "deck2Mark",
              "color": "suitColor"
            },
            "rotation": 180,
            "css": {
              "letter-spacing": "-6px"
            }
          },
          {
            "type": "image",
            "x": 19,
            "y": 25,
            "width": 64,
            "height": 112,
            "color": "transparent",
            "dynamicProperties": {
              "value": "riderImage"
            },
            "css": {
              "opacity": 0.85
            }
          },
          {
            "type": "image",
            "x": 1,
            "y": 28,
            "width": 23,
            "height": 23,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImage"
            }
          },
          {
            "type": "image",
            "x": 79,
            "y": 110,
            "width": 23,
            "height": 23,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImage"
            },
            "rotation": 180
          }
        ]
      }
    ],
    "inheritFrom": {
      "deck1": [
        "cardDefaults"
      ]
    }
  },
  "wwt0": {
    "deck": "cavaliers",
    "type": "card",
    "cardType": "CC",
    "id": "wwt0",
    "staged": false,
    "parent": "pile2"
  },
  "mqge": {
    "deck": "cavaliers",
    "type": "card",
    "cardType": "CD",
    "id": "mqge",
    "staged": false,
    "parent": "pile2"
  },
  "1ncf": {
    "deck": "cavaliers",
    "type": "card",
    "cardType": "CS",
    "id": "1ncf",
    "staged": false,
    "parent": "pile2"
  },
  "b5ol": {
    "deck": "cavaliers",
    "type": "card",
    "cardType": "CH",
    "id": "b5ol",
    "staged": false,
    "parent": "pile2"
  },
  "playerAid31": {
    "type": "scoreboard",
    "id": "playerAid31",
    "x": 1225,
    "y": 560,
    "width": 360,
    "height": 127,
    "movable": false,
    "movableInEdit": false,
    "css": {
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "onlyVisibleForSeat": [],
    "roundLabel": "Category",
    "rounds": [
      "Suit ranks (low to high)",
      "Card ranks (no trump, )",
      "Card randk (trump)"
    ],
    "seats": "playerAidDetail1",
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "playerAid": true,
    "scoreProperty": "score31"
  },
  "575h": {
    "deck": "cavaliers",
    "type": "card",
    "cardType": "CC2",
    "id": "575h",
    "parent": "pile2",
    "staged": false
  },
  "n8iz": {
    "deck": "cavaliers",
    "type": "card",
    "cardType": "CD2",
    "id": "n8iz",
    "parent": "pile2",
    "staged": false
  },
  "469z": {
    "deck": "cavaliers",
    "type": "card",
    "cardType": "CS2",
    "id": "469z",
    "parent": "pile2",
    "staged": false
  },
  "kc22": {
    "deck": "cavaliers",
    "type": "card",
    "cardType": "CH2",
    "id": "kc22",
    "parent": "pile2",
    "staged": false
  },
  "tarotDeck": {
    "type": "deck",
    "id": "tarotDeck",
    "parent": "offHolder",
    "x": 4,
    "y": 4,
    "width": 86,
    "height": 86,
    "movable": true,
    "movableInEdit": true,
    "cardTypes": {
      "1": {
        "rank": "1",
        "roman": "I",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 1,
        "order": 14
      },
      "2": {
        "rank": "2",
        "roman": "II",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 2,
        "order": 1
      },
      "3": {
        "rank": "3",
        "roman": "III",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 3,
        "order": 1
      },
      "4": {
        "rank": "4",
        "roman": "IV",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 4,
        "order": 1
      },
      "5": {
        "rank": "5",
        "roman": "V",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 5,
        "order": 0.05
      },
      "6": {
        "rank": "6",
        "roman": "VI",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 6,
        "order": 1
      },
      "7": {
        "rank": "7",
        "roman": "VII",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 7,
        "order": 1
      },
      "8": {
        "rank": "8",
        "roman": "VIII",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 8,
        "order": 1
      },
      "9": {
        "rank": "9",
        "roman": "IX",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 9,
        "order": 1
      },
      "10": {
        "rank": "10",
        "roman": "X",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 10,
        "order": 1
      },
      "11": {
        "rank": "11",
        "roman": "XI",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 11,
        "order": 1
      },
      "12": {
        "rank": "12",
        "roman": "XII",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 12,
        "order": 1
      },
      "13": {
        "rank": "13",
        "roman": "XIII",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 13,
        "order": 1
      },
      "14": {
        "rank": "14",
        "roman": "XIV",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 14,
        "order": 1
      },
      "15": {
        "rank": "15",
        "roman": "XV",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 15,
        "order": 1
      },
      "16": {
        "rank": "16",
        "roman": "XVI",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 16,
        "order": 1
      },
      "17": {
        "rank": "17",
        "roman": "XVII",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 17,
        "order": 1
      },
      "18": {
        "rank": "18",
        "roman": "XVIII",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 18,
        "order": 1
      },
      "19": {
        "rank": "19",
        "roman": "XIX",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 19,
        "order": 1
      },
      "20": {
        "rank": "20",
        "roman": "XX",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 20,
        "order": 1
      },
      "21": {
        "rank": "21",
        "roman": "XXI",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "suitColor": "purple",
        "sortDefault": 21,
        "order": 14
      },
      "22": {
        "roman": "S",
        "suitColor": "purple",
        "suitImage": "/assets/-374765193_624",
        "suit": 0,
        "rank": "S",
        "sortDefault": 22,
        "order": 14
      },
      "1C": {
        "rank": "1",
        "rankImage": "i/icons/clubs.svg",
        "suitImage": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 1,
        "order": 1
      },
      "2C": {
        "rank": "2",
        "suitImage": "i/icons/clubs.svg",
        "suit-P12": "i/icons/clubs.svg",
        "suit-P52": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 2,
        "order": 2
      },
      "3C": {
        "rank": "3",
        "suitImage": "i/icons/clubs.svg",
        "suit-P12": "i/icons/clubs.svg",
        "suit-P32": "i/icons/clubs.svg",
        "suit-P52": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 3,
        "order": 3
      },
      "4C": {
        "rank": "4",
        "suitImage": "i/icons/clubs.svg",
        "suit-P11": "i/icons/clubs.svg",
        "suit-P13": "i/icons/clubs.svg",
        "suit-P51": "i/icons/clubs.svg",
        "suit-P53": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 4,
        "order": 4
      },
      "5C": {
        "rank": "5",
        "suitImage": "i/icons/clubs.svg",
        "suit-P11": "i/icons/clubs.svg",
        "suit-P13": "i/icons/clubs.svg",
        "suit-P32": "i/icons/clubs.svg",
        "suit-P51": "i/icons/clubs.svg",
        "suit-P53": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 5,
        "order": 5
      },
      "6C": {
        "rank": "6",
        "suitImage": "i/icons/clubs.svg",
        "suit-P11": "i/icons/clubs.svg",
        "suit-P13": "i/icons/clubs.svg",
        "suit-P31": "i/icons/clubs.svg",
        "suit-P33": "i/icons/clubs.svg",
        "suit-P51": "i/icons/clubs.svg",
        "suit-P53": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 6,
        "order": 6
      },
      "7C": {
        "rank": "7",
        "suitImage": "i/icons/clubs.svg",
        "suit-P11": "i/icons/clubs.svg",
        "suit-P13": "i/icons/clubs.svg",
        "suit-P22": "i/icons/clubs.svg",
        "suit-P31": "i/icons/clubs.svg",
        "suit-P33": "i/icons/clubs.svg",
        "suit-P51": "i/icons/clubs.svg",
        "suit-P53": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 7,
        "order": 7
      },
      "8C": {
        "rank": "8",
        "suitImage": "i/icons/clubs.svg",
        "suit-P11": "i/icons/clubs.svg",
        "suit-P13": "i/icons/clubs.svg",
        "suit-P22": "i/icons/clubs.svg",
        "suit-P31": "i/icons/clubs.svg",
        "suit-P33": "i/icons/clubs.svg",
        "suit-P42": "i/icons/clubs.svg",
        "suit-P51": "i/icons/clubs.svg",
        "suit-P53": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 8,
        "order": 8
      },
      "9C": {
        "rank": "9",
        "suitImage": "i/icons/clubs.svg",
        "suit-P11": "i/icons/clubs.svg",
        "suit-P13": "i/icons/clubs.svg",
        "suit-P32": "i/icons/clubs.svg",
        "suit-P51": "i/icons/clubs.svg",
        "suit-P53": "i/icons/clubs.svg",
        "suit-S21": "i/icons/clubs.svg",
        "suit-S23": "i/icons/clubs.svg",
        "suit-S31": "i/icons/clubs.svg",
        "suit-S33": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 9,
        "order": 9
      },
      "TC": {
        "rank": "10",
        "suitImage": "i/icons/clubs.svg",
        "suit-P11": "i/icons/clubs.svg",
        "suit-P13": "i/icons/clubs.svg",
        "suit-P51": "i/icons/clubs.svg",
        "suit-P53": "i/icons/clubs.svg",
        "suit-S12": "i/icons/clubs.svg",
        "suit-S21": "i/icons/clubs.svg",
        "suit-S23": "i/icons/clubs.svg",
        "suit-S31": "i/icons/clubs.svg",
        "suit-S33": "i/icons/clubs.svg",
        "suit-S42": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 10,
        "order": 10
      },
      "JC": {
        "rank": "J",
        "rankImage": "/assets/-1936516067_36132",
        "suitImage": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 11,
        "order": 11
      },
      "CC": {
        "rank": "C",
        "riderImage": "/i/cards-tarot/CC.png",
        "suitImage": "i/icons/clubs.svg",
        "tarotBack": "transparent",
        "suit": 1,
        "sortDefault": 12,
        "order": 12
      },
      "QC": {
        "rank": "Q",
        "rankImage": "/assets/-359721987_40577",
        "suitImage": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 13,
        "order": 13
      },
      "KC": {
        "rank": "K",
        "rankImage": "/assets/-604240792_36033",
        "suitImage": "i/icons/clubs.svg",
        "suit": 1,
        "sortDefault": 14,
        "order": 14
      },
      "1S": {
        "rank": "1",
        "rankImage": "i/icons/spades.svg",
        "suitImage": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 1,
        "order": 1
      },
      "2S": {
        "rank": "2",
        "suitImage": "i/icons/spades.svg",
        "suit-P12": "i/icons/spades.svg",
        "suit-P52": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 2,
        "order": 2
      },
      "3S": {
        "rank": "3",
        "suitImage": "i/icons/spades.svg",
        "suit-P12": "i/icons/spades.svg",
        "suit-P32": "i/icons/spades.svg",
        "suit-P52": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 3,
        "order": 3
      },
      "4S": {
        "rank": "4",
        "suitImage": "i/icons/spades.svg",
        "suit-P11": "i/icons/spades.svg",
        "suit-P13": "i/icons/spades.svg",
        "suit-P51": "i/icons/spades.svg",
        "suit-P53": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 4,
        "order": 4
      },
      "5S": {
        "rank": "5",
        "suitImage": "i/icons/spades.svg",
        "suit-P11": "i/icons/spades.svg",
        "suit-P13": "i/icons/spades.svg",
        "suit-P32": "i/icons/spades.svg",
        "suit-P51": "i/icons/spades.svg",
        "suit-P53": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 5,
        "order": 5
      },
      "6S": {
        "rank": "6",
        "suitImage": "i/icons/spades.svg",
        "suit-P11": "i/icons/spades.svg",
        "suit-P13": "i/icons/spades.svg",
        "suit-P31": "i/icons/spades.svg",
        "suit-P33": "i/icons/spades.svg",
        "suit-P51": "i/icons/spades.svg",
        "suit-P53": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 6,
        "order": 6
      },
      "7S": {
        "rank": "7",
        "suitImage": "i/icons/spades.svg",
        "suit-P11": "i/icons/spades.svg",
        "suit-P13": "i/icons/spades.svg",
        "suit-P22": "i/icons/spades.svg",
        "suit-P31": "i/icons/spades.svg",
        "suit-P33": "i/icons/spades.svg",
        "suit-P51": "i/icons/spades.svg",
        "suit-P53": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 7,
        "order": 7
      },
      "8S": {
        "rank": "8",
        "suitImage": "i/icons/spades.svg",
        "suit-P11": "i/icons/spades.svg",
        "suit-P13": "i/icons/spades.svg",
        "suit-P22": "i/icons/spades.svg",
        "suit-P31": "i/icons/spades.svg",
        "suit-P33": "i/icons/spades.svg",
        "suit-P42": "i/icons/spades.svg",
        "suit-P51": "i/icons/spades.svg",
        "suit-P53": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 8,
        "order": 8
      },
      "9S": {
        "rank": "9",
        "suitImage": "i/icons/spades.svg",
        "suit-P11": "i/icons/spades.svg",
        "suit-P13": "i/icons/spades.svg",
        "suit-P32": "i/icons/spades.svg",
        "suit-P51": "i/icons/spades.svg",
        "suit-P53": "i/icons/spades.svg",
        "suit-S21": "i/icons/spades.svg",
        "suit-S23": "i/icons/spades.svg",
        "suit-S31": "i/icons/spades.svg",
        "suit-S33": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 9,
        "order": 9
      },
      "TS": {
        "rank": "10",
        "suitImage": "i/icons/spades.svg",
        "suit-P11": "i/icons/spades.svg",
        "suit-P13": "i/icons/spades.svg",
        "suit-P51": "i/icons/spades.svg",
        "suit-P53": "i/icons/spades.svg",
        "suit-S12": "i/icons/spades.svg",
        "suit-S21": "i/icons/spades.svg",
        "suit-S23": "i/icons/spades.svg",
        "suit-S31": "i/icons/spades.svg",
        "suit-S33": "i/icons/spades.svg",
        "suit-S42": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 10,
        "order": 10
      },
      "JS": {
        "rank": "J",
        "rankImage": "/assets/2115758924_42014",
        "suitImage": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 11,
        "order": 11
      },
      "CS": {
        "rank": "C",
        "riderImage": "/i/cards-tarot/CS.png",
        "suitImage": "i/icons/spades.svg",
        "tarotBack": "transparent",
        "suit": 3,
        "sortDefault": 12,
        "order": 12
      },
      "QS": {
        "rank": "Q",
        "rankImage": "/assets/1085111785_36695",
        "suitImage": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 13,
        "order": 13
      },
      "KS": {
        "rank": "K",
        "rankImage": "/assets/-1882019559_61400",
        "suitImage": "i/icons/spades.svg",
        "suit": 3,
        "sortDefault": 14,
        "order": 14
      },
      "1H": {
        "rank": "1",
        "rankImage": "i/icons/hearts.svg",
        "suitImage": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 1,
        "order": 1
      },
      "2H": {
        "rank": "2",
        "suitImage": "i/icons/hearts.svg",
        "suit-P12": "i/icons/hearts.svg",
        "suit-P52": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 2,
        "order": 2
      },
      "3H": {
        "rank": "3",
        "suitImage": "i/icons/hearts.svg",
        "suit-P12": "i/icons/hearts.svg",
        "suit-P32": "i/icons/hearts.svg",
        "suit-P52": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 3,
        "order": 3
      },
      "4H": {
        "rank": "4",
        "suitImage": "i/icons/hearts.svg",
        "suit-P11": "i/icons/hearts.svg",
        "suit-P13": "i/icons/hearts.svg",
        "suit-P51": "i/icons/hearts.svg",
        "suit-P53": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 4,
        "order": 4
      },
      "5H": {
        "rank": "5",
        "suitImage": "i/icons/hearts.svg",
        "suit-P11": "i/icons/hearts.svg",
        "suit-P13": "i/icons/hearts.svg",
        "suit-P32": "i/icons/hearts.svg",
        "suit-P51": "i/icons/hearts.svg",
        "suit-P53": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 5,
        "order": 5
      },
      "6H": {
        "rank": "6",
        "suitImage": "i/icons/hearts.svg",
        "suit-P11": "i/icons/hearts.svg",
        "suit-P13": "i/icons/hearts.svg",
        "suit-P31": "i/icons/hearts.svg",
        "suit-P33": "i/icons/hearts.svg",
        "suit-P51": "i/icons/hearts.svg",
        "suit-P53": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 6,
        "order": 6
      },
      "7H": {
        "rank": "7",
        "suitImage": "i/icons/hearts.svg",
        "suit-P11": "i/icons/hearts.svg",
        "suit-P13": "i/icons/hearts.svg",
        "suit-P22": "i/icons/hearts.svg",
        "suit-P31": "i/icons/hearts.svg",
        "suit-P33": "i/icons/hearts.svg",
        "suit-P51": "i/icons/hearts.svg",
        "suit-P53": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 7,
        "order": 7
      },
      "8H": {
        "rank": "8",
        "suitImage": "i/icons/hearts.svg",
        "suit-P11": "i/icons/hearts.svg",
        "suit-P13": "i/icons/hearts.svg",
        "suit-P22": "i/icons/hearts.svg",
        "suit-P31": "i/icons/hearts.svg",
        "suit-P33": "i/icons/hearts.svg",
        "suit-P42": "i/icons/hearts.svg",
        "suit-P51": "i/icons/hearts.svg",
        "suit-P53": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 8,
        "order": 8
      },
      "9H": {
        "rank": "9",
        "suitImage": "i/icons/hearts.svg",
        "suit-P11": "i/icons/hearts.svg",
        "suit-P13": "i/icons/hearts.svg",
        "suit-P32": "i/icons/hearts.svg",
        "suit-P51": "i/icons/hearts.svg",
        "suit-P53": "i/icons/hearts.svg",
        "suit-S21": "i/icons/hearts.svg",
        "suit-S23": "i/icons/hearts.svg",
        "suit-S31": "i/icons/hearts.svg",
        "suit-S33": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 9,
        "order": 9
      },
      "TH": {
        "rank": "10",
        "suitImage": "i/icons/hearts.svg",
        "suit-P11": "i/icons/hearts.svg",
        "suit-P13": "i/icons/hearts.svg",
        "suit-P51": "i/icons/hearts.svg",
        "suit-P53": "i/icons/hearts.svg",
        "suit-S12": "i/icons/hearts.svg",
        "suit-S21": "i/icons/hearts.svg",
        "suit-S23": "i/icons/hearts.svg",
        "suit-S31": "i/icons/hearts.svg",
        "suit-S33": "i/icons/hearts.svg",
        "suit-S42": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 10,
        "order": 10
      },
      "JH": {
        "rank": "J",
        "rankImage": "/assets/-560751544_37381",
        "suitImage": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 11,
        "order": 11
      },
      "CH": {
        "rank": "C",
        "riderImage": "/i/cards-tarot/CH.png",
        "suitImage": "i/icons/hearts.svg",
        "tarotBack": "transparent",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 12,
        "order": 12
      },
      "QH": {
        "rank": "Q",
        "rankImage": "/assets/-1553973424_45799",
        "suitImage": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 13,
        "order": 13
      },
      "KH": {
        "rank": "K",
        "rankImage": "/assets/-511606639_49182",
        "suitImage": "i/icons/hearts.svg",
        "suit": 4,
        "suitColor": "#e50932",
        "sortDefault": 14,
        "order": 14
      },
      "1D": {
        "rank": "1",
        "rankImage": "i/icons/diamonds.svg",
        "suitImage": "i/icons/diamonds.svg",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 1,
        "order": 1
      },
      "2D": {
        "rank": "2",
        "suitImage": "i/icons/diamonds.svg",
        "suit-P12": "i/icons/diamonds.svg",
        "suit-P52": "i/icons/diamonds.svg",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 2,
        "order": 2
      },
      "3D": {
        "rank": "3",
        "suitImage": "i/icons/diamonds.svg",
        "suit-P12": "i/icons/diamonds.svg",
        "suit-P32": "i/icons/diamonds.svg",
        "suit-P52": "i/icons/diamonds.svg",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 3,
        "order": 3
      },
      "4D": {
        "rank": "4",
        "suitImage": "i/icons/diamonds.svg",
        "suit-P11": "i/icons/diamonds.svg",
        "suit-P13": "i/icons/diamonds.svg",
        "suit-P51": "i/icons/diamonds.svg",
        "suit-P53": "i/icons/diamonds.svg",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 4,
        "order": 4
      },
      "5D": {
        "rank": "5",
        "suitImage": "i/icons/diamonds.svg",
        "suit-P11": "i/icons/diamonds.svg",
        "suit-P13": "i/icons/diamonds.svg",
        "suit-P32": "i/icons/diamonds.svg",
        "suit-P51": "i/icons/diamonds.svg",
        "suit-P53": "i/icons/diamonds.svg",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 5,
        "order": 5
      },
      "6D": {
        "rank": "6",
        "suitImage": "i/icons/diamonds.svg",
        "suit-P11": "i/icons/diamonds.svg",
        "suit-P13": "i/icons/diamonds.svg",
        "suit-P31": "i/icons/diamonds.svg",
        "suit-P33": "i/icons/diamonds.svg",
        "suit-P51": "i/icons/diamonds.svg",
        "suit-P53": "i/icons/diamonds.svg",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 6,
        "order": 6
      },
      "7D": {
        "rank": "7",
        "suitImage": "i/icons/diamonds.svg",
        "suit-P11": "i/icons/diamonds.svg",
        "suit-P13": "i/icons/diamonds.svg",
        "suit-P22": "i/icons/diamonds.svg",
        "suit-P31": "i/icons/diamonds.svg",
        "suit-P33": "i/icons/diamonds.svg",
        "suit-P51": "i/icons/diamonds.svg",
        "suit-P53": "i/icons/diamonds.svg",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 7,
        "order": 7
      },
      "8D": {
        "rank": "8",
        "suitImage": "i/icons/diamonds.svg",
        "suit-P11": "i/icons/diamonds.svg",
        "suit-P13": "i/icons/diamonds.svg",
        "suit-P22": "i/icons/diamonds.svg",
        "suit-P31": "i/icons/diamonds.svg",
        "suit-P33": "i/icons/diamonds.svg",
        "suit-P42": "i/icons/diamonds.svg",
        "suit-P51": "i/icons/diamonds.svg",
        "suit-P53": "i/icons/diamonds.svg",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 8,
        "order": 8
      },
      "9D": {
        "rank": "9",
        "suitImage": "i/icons/diamonds.svg",
        "suit-P11": "i/icons/diamonds.svg",
        "suit-P13": "i/icons/diamonds.svg",
        "suit-P32": "i/icons/diamonds.svg",
        "suit-P51": "i/icons/diamonds.svg",
        "suit-P53": "i/icons/diamonds.svg",
        "suit-S21": "i/icons/diamonds.svg",
        "suit-S23": "i/icons/diamonds.svg",
        "suit-S31": "i/icons/diamonds.svg",
        "suit-S33": "i/icons/diamonds.svg",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 9,
        "order": 9
      },
      "TD": {
        "rank": "10",
        "suitImage": "i/icons/diamonds.svg",
        "suit-P11": "i/icons/diamonds.svg",
        "suit-P13": "i/icons/diamonds.svg",
        "suit-P51": "i/icons/diamonds.svg",
        "suit-P53": "i/icons/diamonds.svg",
        "suit-S12": "i/icons/diamonds.svg",
        "suit-S21": "i/icons/diamonds.svg",
        "suit-S23": "i/icons/diamonds.svg",
        "suit-S31": "i/icons/diamonds.svg",
        "suit-S33": "i/icons/diamonds.svg",
        "suit-S42": "i/icons/diamonds.svg",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 10,
        "order": 10
      },
      "JD": {
        "rank": "J",
        "suitColor": "#e50932",
        "rankImage": "/assets/-696466837_31225",
        "suitImage": "i/icons/diamonds.svg",
        "suit": 2,
        "sortDefault": 11,
        "order": 11
      },
      "CD": {
        "rank": "C",
        "riderImage": "/i/cards-tarot/CD.png",
        "suitImage": "i/icons/diamonds.svg",
        "tarotBack": "transparent",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 12,
        "order": 12
      },
      "QD": {
        "rank": "Q",
        "rankImage": "/assets/-132931377_41422",
        "suitImage": "i/icons/diamonds.svg",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 13,
        "order": 13
      },
      "KD": {
        "rank": "K",
        "rankImage": "/assets/-862690059_30988",
        "suitImage": "i/icons/diamonds.svg",
        "suit": 2,
        "suitColor": "#e50932",
        "sortDefault": 14,
        "order": 14
      }
    },
    "clickable": true,
    "faceTemplates": [
      {
        "border": false,
        "radius": false,
        "objects": [
          {
            "type": "image",
            "x": 0,
            "y": 0,
            "width": 103,
            "height": 160,
            "color": "transparent",
            "value": "/i/cards-default/2B.svg"
          }
        ]
      },
      {
        "border": 1,
        "radius": 6,
        "objects": [
          {
            "type": "image",
            "width": 103,
            "height": 160,
            "color": "white"
          },
          {
            "type": "image",
            "x": 25,
            "y": 25,
            "width": 53,
            "height": 110,
            "color": "white",
            "dynamicProperties": {
              "value": "rankImage"
            },
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "css": {
              "background-size": "100% 100%"
            }
          },
          {
            "type": "image",
            "x": 19,
            "y": 25,
            "width": 64,
            "height": 112,
            "color": "transparent",
            "dynamicProperties": {
              "value": "riderImage"
            },
            "css": {
              "opacity": 0.85
            }
          },
          {
            "type": "image",
            "x": -1,
            "y": -1,
            "width": 28,
            "height": 55,
            "dynamicProperties": {
              "color": "tarotBack"
            }
          },
          {
            "type": "image",
            "x": 75,
            "y": 110,
            "width": 28,
            "height": 55,
            "dynamicProperties": {
              "color": "tarotBack"
            }
          },
          {
            "type": "text",
            "x": -3,
            "y": -2,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "rank",
              "color": "suitColor"
            },
            "css": {
              "letter-spacing": "-6px"
            }
          },
          {
            "type": "text",
            "x": 81,
            "y": 127,
            "fontSize": 30,
            "textAlign": "center",
            "width": 25,
            "dynamicProperties": {
              "value": "rank",
              "color": "suitColor"
            },
            "rotation": 180,
            "css": {
              "letter-spacing": "-6px"
            }
          },
          {
            "type": "text",
            "x": 18,
            "y": 62,
            "fontSize": 35,
            "textAlign": "center",
            "width": 60,
            "dynamicProperties": {
              "value": "roman",
              "color": "suitColor"
            }
          },
          {
            "type": "image",
            "x": 1,
            "y": 28,
            "width": 23,
            "height": 23,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImage"
            }
          },
          {
            "type": "image",
            "x": 79,
            "y": 110,
            "width": 23,
            "height": 23,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suitImage"
            },
            "rotation": 180
          },
          {
            "type": "image",
            "x": 25,
            "y": 25,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P11"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 25,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P12"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 25,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P13"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 48.5,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P21"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 48.5,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P22"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 48.5,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P23"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 72,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P31"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 72,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P32"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 72,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P33"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 95.5,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P41"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 95.5,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P42"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 95.5,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P43"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 119,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P51"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 119,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P52"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 119,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-P53"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 40.6,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S11"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 40.6,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S12"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 40.6,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S13"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 56.3,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S21"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 56.3,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S22"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 56.3,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S23"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 87.7,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S31"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 87.7,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S32"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 87.7,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S33"
            }
          },
          {
            "type": "image",
            "x": 25,
            "y": 103.3,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S41"
            }
          },
          {
            "type": "image",
            "x": 43.5,
            "y": 103.3,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S42"
            }
          },
          {
            "type": "image",
            "x": 62,
            "y": 103.3,
            "width": 16,
            "height": 16,
            "color": "transparent",
            "svgReplaces": {
              "currentColor": "suitColor"
            },
            "dynamicProperties": {
              "value": "suit-S43"
            }
          }
        ]
      }
    ],
    "inheritFrom": {
      "deck1": [
        "cardDefaults"
      ]
    },
    "deckDiceFaces": [
      {
        "image": "i/icons/clubs.svg"
      },
      {
        "image": "i/icons/diamonds.svg",
        "deckSuitColor": "#e50932"
      },
      {
        "image": "i/icons/spades.svg"
      },
      {
        "image": "i/icons/hearts.svg",
        "deckSuitColor": "#e50932"
      },
      {
        "image": "/assets/-374765193_624",
        "deckSuitColor": "purple"
      }
    ],
    "deckSuits": [
      "",
      "clubs",
      "diamonds",
      "spades",
      "hearts",
      "stars"
    ],
    "deckSuitsColor": [
      "",
      "",
      "#e50932",
      "",
      "#e50932",
      "purple",
      ""
    ],
    "deckSuitsImage": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "deckSuitsText": [
      "",
      "Petite",
      "Garde",
      "Garde+\nChien",
      "Garde-\nChien",
      "",
      ""
    ],
    "deckSuitsUni": [
      "",
      "P",
      "G",
      "G+C",
      "G-C",
      "",
      ""
    ],
    "deckType": 7,
    "staged": false
  },
  "jtch": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "1",
    "id": "jtch",
    "staged": false,
    "parent": "pile2"
  },
  "mbpc": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "2",
    "id": "mbpc",
    "staged": false,
    "parent": "pile2"
  },
  "2gql": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "3",
    "id": "2gql",
    "staged": false,
    "parent": "pile2"
  },
  "zoeh": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "4",
    "id": "zoeh",
    "staged": false,
    "parent": "pile2"
  },
  "yqvf": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "5",
    "id": "yqvf",
    "staged": false,
    "parent": "pile2"
  },
  "ltpy": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "6",
    "id": "ltpy",
    "staged": false,
    "parent": "pile2"
  },
  "np2x": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "7",
    "id": "np2x",
    "staged": false,
    "parent": "pile2"
  },
  "4e72": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "8",
    "id": "4e72",
    "staged": false,
    "parent": "pile2"
  },
  "2kwi": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "9",
    "id": "2kwi",
    "staged": false,
    "parent": "pile2"
  },
  "d4pk": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "10",
    "id": "d4pk",
    "staged": false,
    "parent": "pile2"
  },
  "dxj9": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "11",
    "id": "dxj9",
    "staged": false,
    "parent": "pile2"
  },
  "2x0u": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "12",
    "id": "2x0u",
    "staged": false,
    "parent": "pile2"
  },
  "6dv5": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "13",
    "id": "6dv5",
    "staged": false,
    "parent": "pile2"
  },
  "0bw8": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "14",
    "id": "0bw8",
    "staged": false,
    "parent": "pile2"
  },
  "33re": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "15",
    "id": "33re",
    "staged": false,
    "parent": "pile2"
  },
  "m05l": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "16",
    "id": "m05l",
    "staged": false,
    "parent": "pile2"
  },
  "n6be": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "17",
    "id": "n6be",
    "staged": false,
    "parent": "pile2"
  },
  "68g3": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "18",
    "id": "68g3",
    "staged": false,
    "parent": "pile2"
  },
  "4da2": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "20",
    "id": "4da2",
    "staged": false,
    "parent": "pile2"
  },
  "y991": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "21",
    "id": "y991",
    "staged": false,
    "parent": "pile2"
  },
  "g48v": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "22",
    "id": "g48v",
    "staged": false,
    "parent": "pile2"
  },
  "3w2i": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "1C",
    "id": "3w2i",
    "parent": "pile2",
    "staged": false
  },
  "p4v9": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "2C",
    "id": "p4v9",
    "parent": "pile2",
    "staged": false
  },
  "uaoz": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "3C",
    "id": "uaoz",
    "parent": "pile2",
    "staged": false
  },
  "jj7b": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "4C",
    "id": "jj7b",
    "parent": "pile2",
    "staged": false
  },
  "3gud": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "5C",
    "id": "3gud",
    "parent": "pile2",
    "staged": false
  },
  "2iju": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "6C",
    "id": "2iju",
    "parent": "pile2",
    "staged": false
  },
  "b598": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "7C",
    "id": "b598",
    "parent": "pile2",
    "staged": false
  },
  "1oo2": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "8C",
    "id": "1oo2",
    "parent": "pile2",
    "staged": false
  },
  "pukz": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "9C",
    "id": "pukz",
    "parent": "pile2",
    "staged": false
  },
  "ylxc": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "TC",
    "id": "ylxc",
    "parent": "pile2",
    "staged": false
  },
  "oymw": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "JC",
    "id": "oymw",
    "staged": false,
    "parent": "pile2"
  },
  "tesr": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "CC",
    "id": "tesr",
    "parent": "pile2",
    "staged": false
  },
  "uwmv": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "QC",
    "id": "uwmv",
    "parent": "pile2",
    "staged": false
  },
  "r550": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "KC",
    "id": "r550",
    "staged": false,
    "parent": "pile2"
  },
  "rf4c": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "1S",
    "id": "rf4c",
    "staged": false,
    "parent": "pile2"
  },
  "sb8x": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "2S",
    "id": "sb8x",
    "parent": "pile2",
    "staged": false
  },
  "ug2j": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "3S",
    "id": "ug2j",
    "parent": "pile2",
    "staged": false
  },
  "p7lg": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "4S",
    "id": "p7lg",
    "parent": "pile2",
    "staged": false
  },
  "wyil": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "5S",
    "id": "wyil",
    "parent": "pile2",
    "staged": false
  },
  "pmh4": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "6S",
    "id": "pmh4",
    "parent": "pile2",
    "staged": false
  },
  "c7jy": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "7S",
    "id": "c7jy",
    "parent": "pile2",
    "staged": false
  },
  "6aw4": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "8S",
    "id": "6aw4",
    "parent": "pile2",
    "staged": false
  },
  "ve9u": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "9S",
    "id": "ve9u",
    "parent": "pile2",
    "staged": false
  },
  "5s5b": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "TS",
    "id": "5s5b",
    "staged": false,
    "parent": "pile2"
  },
  "6gee": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "JS",
    "id": "6gee",
    "parent": "pile2",
    "staged": false
  },
  "x5md": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "CS",
    "id": "x5md",
    "parent": "pile2",
    "staged": false
  },
  "47jy": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "QS",
    "id": "47jy",
    "parent": "pile2",
    "staged": false
  },
  "45qe": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "KS",
    "id": "45qe",
    "parent": "pile2",
    "staged": false
  },
  "edgy": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "1H",
    "id": "edgy",
    "parent": "pile2",
    "staged": false
  },
  "rxu3": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "2H",
    "id": "rxu3",
    "parent": "pile2",
    "staged": false
  },
  "pvp2": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "3H",
    "id": "pvp2",
    "parent": "pile2",
    "staged": false
  },
  "7w8g": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "4H",
    "id": "7w8g",
    "parent": "pile2",
    "staged": false
  },
  "ouox": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "5H",
    "id": "ouox",
    "parent": "pile2",
    "staged": false
  },
  "p6qv": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "6H",
    "id": "p6qv",
    "parent": "pile2",
    "staged": false
  },
  "g0zk": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "7H",
    "id": "g0zk",
    "parent": "pile2",
    "staged": false
  },
  "phv7": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "8H",
    "id": "phv7",
    "parent": "pile2",
    "staged": false
  },
  "slaj": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "9H",
    "id": "slaj",
    "parent": "pile2",
    "staged": false
  },
  "t27t": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "TH",
    "id": "t27t",
    "parent": "pile2",
    "staged": false
  },
  "lh3t": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "JH",
    "id": "lh3t",
    "staged": false,
    "parent": "pile2"
  },
  "u117": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "CH",
    "id": "u117",
    "parent": "pile2",
    "staged": false
  },
  "v0ar": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "QH",
    "id": "v0ar",
    "parent": "pile2",
    "staged": false
  },
  "4tgs": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "KH",
    "id": "4tgs",
    "parent": "pile2",
    "staged": false
  },
  "0v9j": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "1D",
    "id": "0v9j",
    "parent": "pile2",
    "staged": false
  },
  "8vu2": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "2D",
    "id": "8vu2",
    "parent": "pile2",
    "staged": false
  },
  "3bi4": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "3D",
    "id": "3bi4",
    "parent": "pile2",
    "staged": false
  },
  "jcpv": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "4D",
    "id": "jcpv",
    "parent": "pile2",
    "staged": false
  },
  "rh8y": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "5D",
    "id": "rh8y",
    "parent": "pile2",
    "staged": false
  },
  "tthw": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "6D",
    "id": "tthw",
    "parent": "pile2",
    "staged": false
  },
  "sgmg": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "7D",
    "id": "sgmg",
    "parent": "pile2",
    "staged": false
  },
  "4iu4": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "8D",
    "id": "4iu4",
    "parent": "pile2",
    "staged": false
  },
  "67mo": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "9D",
    "id": "67mo",
    "parent": "pile2",
    "staged": false
  },
  "i97a": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "TD",
    "id": "i97a",
    "staged": false,
    "parent": "pile2"
  },
  "s05m": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "JD",
    "id": "s05m",
    "staged": false,
    "parent": "pile2"
  },
  "aiq2": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "CD",
    "id": "aiq2",
    "parent": "pile2",
    "staged": false
  },
  "m3r6": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "QD",
    "id": "m3r6",
    "parent": "pile2",
    "staged": false
  },
  "op0r": {
    "deck": "tarotDeck",
    "type": "card",
    "cardType": "KD",
    "id": "op0r",
    "staged": false,
    "parent": "pile2"
  },
  "gameID32": {
    "id": "gameID32",
    "x": -272,
    "y": 1013,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortDefault",
    "sort2": "suit",
    "text": "French Tarot",
    "messageArray": [
      {
        "value": "Default",
        "text": "Click here to choose message"
      },
      {
        "value": "Poignee 10",
        "text": "Poignée 10 trumps / 20 points"
      },
      {
        "value": "Poignee 13",
        "text": "Poignée 13 trumps / 30 points"
      },
      {
        "value": "Poignee 15",
        "text": "Poignée 15 trumps / 40 points"
      },
      {
        "value": "Slam",
        "text": "Chelem (Slam)"
      }
    ],
    "roundsTemp": [
      "Card Points"
    ],
    "settingsArray": [
      [
        "showBidValue",
        false
      ],
      [
        "showTricks",
        false
      ],
      [
        "showDiscard",
        true
      ],
      [
        "turnDirection",
        false
      ]
    ],
    "settingsDecksArray": [
      [
        "cardCount",
        18
      ],
      [
        "deckType",
        7
      ],
      [
        "seatCount",
        4
      ],
      [
        "tempScore",
        true
      ],
      [
        "variableScore",
        true
      ]
    ],
    "scoreSystem": [
      [
        0,
        0.5,
        0.5,
        0.5,
        0.5,
        0.5,
        0.5,
        0.5,
        0.5,
        0.5,
        0.5,
        1.5,
        2.5,
        3.5,
        4.5
      ]
    ],
    "gameID": true,
    "hintText": "\"You may use the bid system widget near the seat to bid and the Message button to announce bonuses. Click on small red, black, and white letter icons to set teams once known.\\a\\a At end of round, be sure all chien cards are in the appropriate player holders.\\a\\aPress Add Card Points button to calculate the card points. Manually calcualte scores based on winning and losing players. Then use the green/red +/- buttons to enter scores on the main scoreboard.\"",
    "preSetExceptionsRoutine": [
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "scale",
        "value": 0
      }
    ],
    "displayArray": [
      [
        "transferScoreButton",
        0
      ]
    ],
    "7deckSuitsImage": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "7deckSuitsText": [
      "",
      "Petite",
      "Garde",
      "Garde+\nChien",
      "Garde-\nChien",
      "",
      ""
    ],
    "7deckSuitsUni": [
      "",
      "P",
      "G",
      "G+C",
      "G-C",
      "",
      ""
    ]
  },
  "gameID33": {
    "id": "gameID33",
    "x": -520,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort1": "sortDefault",
    "sort2": "suit",
    "roundsTemp": [
      "Card Points",
      "Adjustments"
    ],
    "displayArray": [
      [
        "playerAidButton",
        1
      ],
      [
        "trump",
        0
      ],
      [
        "agonyAuntBack",
        1
      ]
    ],
    "settingsArray": [
      [
        "showBidSuit",
        false
      ],
      [
        "showBidValue",
        false
      ],
      [
        "showScore",
        false
      ],
      [
        "showBidHistory",
        false
      ],
      [
        "showTricks",
        true
      ],
      [
        "turnDirection",
        true
      ],
      [
        "capturedHolder",
        true
      ]
    ],
    "settingsDecksArray": [
      [
        "jokerCount",
        1
      ]
    ],
    "gameID": true,
    "hintText": "\"An original game by David Parlett. Rules at https://www.parlettgames.uk/oricards/agonaunt.html.\\a\\a Manually move tokens from holder by seat to player board in upper-left. Queens and jokers will be displayed face-up in front of the player taking the trick as a reminder. When it is time for the 'Dump Trick' a message will appear above the hand.\\a\\a After the round, press one or more of the buttons below the board to move tokens back to players or to the discard area.\"",
    "scoreExceptionsRoutine": [
      "var result = ${points}",
      {
        "func": "SELECT",
        "source": "otherCards",
        "property": "cardType",
        "value": "S 3Q"
      },
      {
        "func": "COUNT"
      },
      {
        "func": "IF",
        "operand1": "${COUNT}",
        "operand2": 1,
        "thenRoutine": [
          "var result = ${result} + 13"
        ]
      }
    ],
    "trumps": 4,
    "y": 770,
    "text": "Agony Aunt",
    "dealRoutine": [
      "// Flip over remaining card.",
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "value": "deckHolder"
      },
      {
        "func": "SET",
        "property": "activeFace",
        "value": 1
      },
      "// If last card is not the joker, then set the sort order and point value of the joker to be equivalent to that card.",
      {
        "func": "GET",
        "property": "suit"
      },
      {
        "func": "GET",
        "property": "order"
      },
      {
        "func": "GET",
        "property": "sortDefault"
      },
      "var nine = ${order} == 9",
      "var joker = ${order} == 14",
      "var none = ${nine} || ${joker}",
      {
        "func": "IF",
        "condition": "${joker}",
        "elseRoutine": [
          {
            "func": "SELECT",
            "property": "id",
            "value": "jokerBlack1"
          },
          {
            "func": "SET",
            "property": "sortDefault",
            "value": "${sortDefault}"
          },
          {
            "func": "SET",
            "property": "suit",
            "value": "${suit}"
          },
          {
            "func": "SET",
            "property": "order",
            "value": "${order}"
          }
        ],
        "thenRoutine": [
          "// If it is the joker, deal again because the joker cannot be the up card by rule.",
          {
            "func": "CLICK",
            "collection": [
              "recallButton"
            ]
          },
          {
            "func": "CLICK",
            "collection": [
              "dealButton"
            ]
          }
        ]
      }
    ],
    "postSetExceptionsRoutine": [
      {
        "func": "FOREACH",
        "in": [
          1,
          3,
          5,
          7
        ],
        "loopRoutine": [
          "var agonyHolder = 'agonyHolder' + ${value}",
          "var thisSeatID = 'seat' + ${value}",
          "var thisColor = ${PROPERTY color OF $thisSeatID}",
          "var thisPlayer = ${PROPERTY player OF $thisSeatID}",
          {
            "func": "FOREACH",
            "range": [
              17
            ],
            "loopRoutine": [
              {
                "func": "MOVE",
                "from": "itemsHolder4",
                "to": "${agonyHolder}"
              }
            ]
          },
          {
            "func": "SELECT",
            "property": "_ancestor",
            "value": "${agonyHolder}"
          },
          {
            "func": "SET",
            "property": "ownedBy",
            "value": "${thisPlayer}"
          },
          {
            "func": "SET",
            "property": "color",
            "value": "${thisColor}"
          },
          {
            "func": "SET",
            "property": "css",
            "value": null
          }
        ]
      },
      {
        "func": "SET",
        "collection": [
          "agonyDumpLabel"
        ],
        "property": "scale",
        "value": 0
      }
    ],
    "capturedArray": [
      [],
      [
        "C 3Q",
        "D 3Q",
        "S 3Q",
        "H 3Q",
        "T 1J"
      ],
      []
    ],
    "takeRoutine": [
      "var tricks = ${PROPERTY text OF tricksCount} + 1",
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "value": "deckHolder"
      },
      {
        "func": "GET",
        "property": "order"
      },
      {
        "func": "IF",
        "operand1": "${order}",
        "operand2": "${tricks}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "agonyDumpLabel"
            ],
            "property": "scale",
            "value": 1
          }
        ],
        "elseRoutine": [
          {
            "func": "SET",
            "collection": [
              "agonyDumpLabel"
            ],
            "property": "scale",
            "value": 0
          }
        ]
      }
    ],
    "playerAidDetail1": "Info",
    "playerSitRoutine": [
      "var agonyHolder = 'agonyHolder' + ${seatIndex}",
      {
        "func": "SELECT",
        "property": "_ancestor",
        "value": "${agonyHolder}"
      },
      {
        "func": "SET",
        "property": "ownedBy",
        "value": "${playerName}"
      },
      {
        "func": "SET",
        "property": "color",
        "value": "${playerColor}"
      }
    ]
  },
  "agonyAuntBack": {
    "type": "",
    "id": "agonyAuntBack",
    "width": 309,
    "height": 308,
    "borderRadius": 8,
    "movable": false,
    "movableInEdit": false,
    "css": {
      "border": "2px solid black",
      "background": "white"
    },
    "x": 5,
    "y": 5,
    "scale": 0
  },
  "agonyAunt1": {
    "id": "agonyAunt1",
    "parent": "agonyAuntBack",
    "borderRadius": 8,
    "movable": false,
    "movableInEdit": false,
    "css": {
      "background": "lightgray",
      "color": "${PROPERTY text-color}",
      "font-size": "${PROPERTY font-size}",
      "border": "1px solid gray",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center",
      "background-size": "70px",
      "background-repeat": "no-repeat",
      "background-position": "50%"
    },
    "text": "🃏",
    "font-size": "75px"
  },
  "agonyAunt2": {
    "id": "agonyAunt2",
    "parent": "agonyAuntBack",
    "x": 103,
    "y": 0,
    "image": "/i/icons/clubs.svg",
    "inheritFrom": {
      "agonyAunt1": [
        "*"
      ]
    },
    "text": "Q",
    "font-size": "35px",
    "text-color": "white"
  },
  "agonyAunt3": {
    "id": "agonyAunt3",
    "parent": "agonyAuntBack",
    "x": 206,
    "y": 0,
    "width": 100,
    "height": 100,
    "activeFace": 0,
    "inheritFrom": {
      "agonyAunt1": [
        "*"
      ]
    },
    "text": "Ω",
    "font-size": "75px"
  },
  "agonyAunt4": {
    "id": "agonyAunt4",
    "parent": "agonyAuntBack",
    "x": 0,
    "y": 102,
    "image": "/i/icons/hearts.svg",
    "inheritFrom": {
      "agonyAunt1": [
        "*"
      ]
    },
    "svgReplaces": {
      "currentColor": "imageColor"
    },
    "text": "Q",
    "font-size": "35px",
    "imageColor": "#e50932",
    "text-color": "white"
  },
  "agonyAunt5": {
    "id": "agonyAunt5",
    "parent": "agonyAuntBack",
    "x": 103,
    "y": 102,
    "borderRadius": 8,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "inheritFrom": {
      "agonyAunt1": [
        "*"
      ]
    },
    "text": "👵",
    "font-size": "75px"
  },
  "agonyAunt6": {
    "id": "agonyAunt6",
    "parent": "agonyAuntBack",
    "x": 206,
    "y": 102,
    "image": "/i/icons/diamonds.svg",
    "inheritFrom": {
      "agonyAunt1": [
        "*"
      ]
    },
    "svgReplaces": {
      "currentColor": "imageColor"
    },
    "text": "Q",
    "font-size": "35px",
    "imageColor": "#e50932",
    "text-color": "white"
  },
  "agonyAunt7": {
    "id": "agonyAunt7",
    "parent": "agonyAuntBack",
    "x": 0,
    "y": 204,
    "inheritFrom": {
      "agonyAunt1": [
        "*"
      ]
    },
    "text": ">",
    "font-size": "125px"
  },
  "agonyAunt8": {
    "id": "agonyAunt8",
    "parent": "agonyAuntBack",
    "x": 103,
    "y": 204,
    "image": "/i/icons/spades.svg",
    "inheritFrom": {
      "agonyAunt1": [
        "*"
      ]
    },
    "text": "Q",
    "font-size": "35px",
    "text-color": "white"
  },
  "agonyAunt9": {
    "id": "agonyAunt9",
    "parent": "agonyAuntBack",
    "x": 206,
    "y": 204,
    "inheritFrom": {
      "agonyAunt1": [
        "*"
      ]
    },
    "text": "#"
  },
  "agonyAunt10": {
    "id": "agonyAunt10",
    "parent": "agonyAuntBack",
    "fixedParent": true,
    "y": 85,
    "width": 305,
    "height": 20,
    "movable": false,
    "movableInEdit": false,
    "css": {
      "color": "black"
    },
    "text": "       Joker              Q Clubs           Last Trick"
  },
  "agonyAunt11": {
    "id": "agonyAunt11",
    "parent": "agonyAuntBack",
    "fixedParent": true,
    "y": 185,
    "width": 305,
    "height": 20,
    "movable": false,
    "movableInEdit": false,
    "css": {
      "color": "black"
    },
    "text": "     Q Hearts          Q Dumps       Q Diamonds"
  },
  "agonyAunt12": {
    "id": "agonyAunt12",
    "parent": "agonyAuntBack",
    "fixedParent": true,
    "y": 285,
    "width": 307,
    "height": 20,
    "movable": false,
    "movableInEdit": false,
    "css": {
      "color": "black"
    },
    "text": "  Most Tricks        Q Spades       Dump Trick"
  },
  "agonyHolder1": {
    "type": "holder",
    "id": "agonyHolder1",
    "x": 712,
    "y": 650,
    "parent": "agonyAuntBack",
    "fixedParent": true,
    "width": 165,
    "height": 40,
    "movableInEdit": false,
    "dropTarget": {
      "item": "4"
    },
    "dropOffsetX": 0,
    "dropOffsetY": 0,
    "stackOffsetX": 8,
    "classes": "transparent",
    "onEnter": {
      "scale": 1
    },
    "onLeave": {
      "scale": 1.4
    },
    "linkedToSeat": "seat1"
  },
  "agonyHolder7": {
    "type": "holder",
    "id": "agonyHolder7",
    "parent": "agonyAuntBack",
    "fixedParent": true,
    "x": 998,
    "y": 397,
    "inheritFrom": {
      "agonyHolder1": "*"
    },
    "linkedToSeat": "seat7"
  },
  "agonyHolder5": {
    "type": "holder",
    "id": "agonyHolder5",
    "parent": "agonyAuntBack",
    "fixedParent": true,
    "x": 712,
    "y": 67,
    "inheritFrom": {
      "agonyHolder1": "*"
    },
    "linkedToSeat": "seat5"
  },
  "agonyHolder3": {
    "type": "holder",
    "id": "agonyHolder3",
    "parent": "agonyAuntBack",
    "fixedParent": true,
    "x": 431,
    "y": 399,
    "inheritFrom": {
      "agonyHolder1": "*"
    },
    "linkedToSeat": "seat3"
  },
  "wa4z": {
    "y": 4,
    "x": 4,
    "width": 50,
    "height": 50,
    "image": "i/icons/circle.svg",
    "svgReplaces": {
      "currentColor": "itemColor"
    },
    "item": 28,
    "itemColor": "#d55e00",
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "clonedFrom": "3irw",
    "itemMarker": true,
    "dragging": null,
    "ownedBy": null,
    "id": "wa4z",
    "parent": "itemsHolder28",
    "clickable": false
  },
  "3dus": {
    "width": 30,
    "height": 30,
    "item": 24,
    "color": "#fcf0d4",
    "color3": "#f8dd9f",
    "color2": "#000000",
    "layer": 10,
    "svgReplaces": {
      "#000000": "color"
    },
    "text": 1,
    "css": {
      "border": "1px solid ${PROPERTY color2}",
      "color": "${PROPERTY color2}",
      "background": "${PROPERTY color}",
      "text-align": "center",
      "display": "flex",
      "justify-content": "center",
      "align-items": "center"
    },
    "borderRadius": 30,
    "faces": [
      {
        "text": 9
      },
      {
        "text": "x9"
      }
    ],
    "clonedFrom": "5xso",
    "itemMarker": true,
    "dragging": null,
    "ownedBy": null,
    "id": "3dus",
    "parent": "itemsHolder24",
    "clickable": false
  },
  "agonyTokensButton1": {
    "type": "button",
    "id": "agonyTokensButton1",
    "x": 6,
    "y": 370,
    "clickRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Returning pieces ..."
          },
          {
            "type": "subtitle",
            "text": "Use this to return 1/2 of your pieces if you won one or more tricks but did not take any penalties (do not have any counters on the board). Do you want to return 1/2 of your pieces?"
          }
        ],
        "confirmButtonText": "Confirm",
        "cancelButtonText": "Cancel"
      },
      "var index = ${PROPERTY index OF $seatID}",
      {
        "func": "SELECT",
        "property": "item",
        "value": 4
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "ownedBy",
        "value": "${playerName}"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "parent",
        "value": "agonyDiscard"
      },
      {
        "func": "COUNT"
      },
      "var COUNT = ${COUNT} / 2",
      "var COUNT = ${COUNT} floor",
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "id",
        "relation": "!=",
        "value": null,
        "max": "${COUNT}"
      },
      {
        "func": "SET",
        "property": "parent",
        "value": "agonyHolder${index}"
      },
      {
        "func": "SET",
        "property": "css",
        "value": null
      }
    ],
    "fixedParent": true,
    "parent": "agonyAuntBack",
    "text": "Return 1/2 Mine",
    "height": 45,
    "width": 90,
    "movableInEdit": false
  },
  "agonyTokensButton2": {
    "type": "button",
    "id": "agonyTokensButton2",
    "x": 110,
    "y": 370,
    "clickRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Returning pieces ..."
          },
          {
            "type": "subtitle",
            "text": "Use this to return all of your pieces if either (1) you won every trick or (2) you lost every trick and no other player won every trick. Do you want to return all of your pieces?"
          }
        ],
        "confirmButtonText": "Confirm",
        "cancelButtonText": "Cancel"
      },
      "var index = ${PROPERTY index OF $seatID}",
      {
        "func": "SELECT",
        "property": "item",
        "value": 4
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "ownedBy",
        "value": "${playerName}"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "parent",
        "relation": "!=",
        "value": "agonyHolder${index}"
      },
      {
        "func": "SET",
        "property": "parent",
        "value": "agonyHolder${index}"
      },
      {
        "func": "SET",
        "property": "css",
        "value": null
      }
    ],
    "fixedParent": true,
    "parent": "agonyAuntBack",
    "text": "Return All Mine",
    "height": 45,
    "width": 90,
    "movableInEdit": false
  },
  "agonyTokensButton3": {
    "type": "button",
    "id": "agonyTokensButton3",
    "x": 214,
    "y": 370,
    "clickRoutine": [
      {
        "func": "INPUT",
        "fields": [
          {
            "type": "title",
            "text": "Moving pieces to discard ..."
          },
          {
            "type": "subtitle",
            "text": "Use this to move all remaining pieces from the board to the discard holder. Do you want to continue?"
          }
        ],
        "confirmButtonText": "Confirm",
        "cancelButtonText": "Cancel"
      },
      {
        "func": "SELECT",
        "property": "item",
        "value": 4
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "parent",
        "value": null
      },
      {
        "func": "SET",
        "property": "parent",
        "value": "agonyDiscard"
      }
    ],
    "fixedParent": true,
    "parent": "agonyAuntBack",
    "text": "Empty Board",
    "height": 45,
    "width": 90,
    "movableInEdit": false
  },
  "agonyDiscard": {
    "type": "holder",
    "id": "agonyDiscard",
    "parent": "agonyAuntBack",
    "fixedParent": true,
    "width": 309,
    "height": 400,
    "classes": "transparent",
    "css": {
      "": {
        "display": "flex",
        "flex-direction": "row",
        "flex-wrap": "wrap",
        "align-content": "center",
        "justify-content": "center",
        "align-items": "center",
        "gap": "1%",
        "padding": 0
      },
      " .widget": {
        "position": "relative",
        "order": "${PROPERTY z}"
      }
    },
    "dropOffsetX": 0,
    "dropOffsetY": 0,
    "dropShadow": true,
    "dropTarget": {
      "item": 4
    },
    "onEnter": {
      "css": "position:relative; order: ${PROPERTY z}"
    },
    "onLeave": {
      "css": ""
    },
    "preventPiles": true,
    "enterRoutine": [
      {
        "func": "SORT",
        "holder": "${PROPERTY id}",
        "key": "ownedBy"
      }
    ],
    "y": 450
  },
  "agonyDumpLabel": {
    "id": "agonyDumpLabel",
    "parent": "agonyAuntBack",
    "fixedParent": true,
    "x": 715,
    "y": 755,
    "width": 152,
    "height": 20,
    "movable": false,
    "movableInEdit": false,
    "css": {
      "font-size": "30px",
      "color": "red"
    },
    "text": "Dump Trick",
    "scale": 0
  },
  "playerAid33": {
    "type": "scoreboard",
    "id": "playerAid33",
    "x": 1225,
    "y": 560,
    "width": 360,
    "height": 185,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "css": {
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "onlyVisibleForSeat": [],
    "rounds": [
      "Win every trick",
      "Win no\ntricks",
      "Take no\npenalties"
    ],
    "seats": "playerAidDetail1",
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "playerAid": true,
    "scoreProperty": "score33",
    "roundLabel": "Score"
  },
  "agonyInfoLabel": {
    "id": "agonyInfoLabel",
    "x": 5,
    "y": 320,
    "width": 305,
    "height": 40,
    "text": "Remove 1 extra token from your stack for each row/column/diagonal with 3 of yours.",
    "movable": false,
    "movableInEdit": false,
    "parent": "agonyAuntBack",
    "fixedParent": true
  },
  "lagg": {
    "width": 40,
    "height": 40,
    "classes": "chip",
    "color": "#fcf0d4",
    "faces": [
      {
        "image": "i/game-pieces/2D/Checkers-2D.svg",
        "crowned": false
      },
      {
        "image": "i/game-pieces/2D/Crowned-Checkers-2D.svg",
        "crowned": true
      }
    ],
    "image": "i/game-pieces/2D/Crowned-Checkers-2D.svg",
    "svgReplaces": {
      "#primaryColor": "color",
      "#secondaryColor": "secondaryColor",
      "#borderColor": "borderColor",
      "#borderWidth": "borderWidth"
    },
    "borderColor": "#000000",
    "borderWidth": 1,
    "crowned": true,
    "secondaryColor": "#ffffff",
    "layer": 10,
    "item": 4,
    "color3": "#f8dd9f",
    "color2": "#000000",
    "clonedFrom": "9h6q",
    "itemMarker": true,
    "css": "position:relative; order: ${PROPERTY z}",
    "x": 4,
    "y": 4,
    "ownedBy": null,
    "id": "lagg",
    "parent": "itemsHolder4",
    "clickable": false
  },
  "gameID34": {
    "id": "gameID34",
    "x": -397,
    "y": 763,
    "color": "#3700f0",
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "text": "Secret Agent",
    "displayArray": [
      [
        "playerAidButton",
        1
      ],
      [
        "transferScoreButton",
        0
      ],
      [
        "bidWinner",
        0
      ]
    ],
    "gameID": true,
    "hintText": "\"An original game by David Parlett. Rules at https://www.parlettgames.uk/oricards/secretagent.html.\"",
    "roundsTemp": [
      "Card Points"
    ],
    "settingsArray": [
      [
        "showBidHistory",
        false
      ],
      [
        "showBidSuit",
        false
      ],
      [
        "showBidValue",
        false
      ],
      [
        "showDiscard",
        false
      ],
      [
        "showPublicBid",
        false
      ],
      [
        "showTricks",
        true
      ],
      [
        "turnDirection",
        true
      ]
    ],
    "sort1": "sortDefault",
    "sort2": "suit",
    "dealRoutine": [
      {
        "func": "SELECT",
        "type": "card",
        "property": "deck",
        "value": "crowDeck",
        "collection": "crowDeck"
      },
      {
        "func": "SELECT",
        "source": "crowDeck",
        "collection": "agentCards",
        "mode": "add",
        "type": "card",
        "property": "cardType",
        "value": "1 red"
      },
      {
        "func": "SELECT",
        "source": "crowDeck",
        "collection": "agentCards",
        "mode": "add",
        "type": "card",
        "property": "cardType",
        "value": "1 green"
      },
      {
        "func": "SELECT",
        "source": "crowDeck",
        "collection": "agentCards",
        "mode": "add",
        "type": "card",
        "property": "cardType",
        "value": "1 black"
      },
      {
        "func": "SELECT",
        "source": "crowDeck",
        "collection": "agentCards",
        "mode": "add",
        "type": "card",
        "property": "cardType",
        "value": "0 crow"
      },
      {
        "func": "SET",
        "collection": "agentCards",
        "property": "parent",
        "value": "tempHolder"
      },
      {
        "func": "SHUFFLE",
        "holder": "tempHolder"
      },
      {
        "func": "MOVE",
        "from": "tempHolder",
        "to": [
          "seat1",
          "seat2",
          "seat3",
          "seat4",
          "seat5",
          "seat6",
          "seat7",
          "seat8"
        ],
        "count": 1
      }
    ],
    "recallRoutine": [
      {
        "func": "SELECT",
        "type": "card",
        "property": "deck",
        "value": "crowDeck",
        "collection": "crowDeck"
      },
      {
        "func": "SELECT",
        "source": "crowDeck",
        "collection": "agentCards",
        "mode": "add",
        "type": "card",
        "property": "cardType",
        "value": "1 red"
      },
      {
        "func": "SELECT",
        "source": "crowDeck",
        "collection": "agentCards",
        "mode": "add",
        "type": "card",
        "property": "cardType",
        "value": "1 green"
      },
      {
        "func": "SELECT",
        "source": "crowDeck",
        "collection": "agentCards",
        "mode": "add",
        "type": "card",
        "property": "cardType",
        "value": "1 black"
      },
      {
        "func": "SELECT",
        "source": "crowDeck",
        "collection": "agentCards",
        "mode": "add",
        "type": "card",
        "property": "cardType",
        "value": "0 crow"
      },
      {
        "func": "SET",
        "collection": "agentCards",
        "property": "parent",
        "value": "tempHolder"
      },
      {
        "func": "SET",
        "collection": "agentCards",
        "property": "activeFace",
        "value": 0
      },
      {
        "func": "MOVE",
        "from": "tempHolder",
        "to": "offHolder",
        "count": 0
      }
    ],
    "sortExceptionsRoutine": [
      {
        "func": "SORT",
        "collection": "DEFAULT",
        "key": "sortSecretAgent"
      }
    ],
    "playerAidDetail2": "Who's Your Agent?"
  },
  "playerAid34": {
    "type": "scoreboard",
    "id": "playerAid34",
    "x": 1225,
    "y": 560,
    "width": 360,
    "height": 65,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "css": {
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "onlyVisibleForSeat": [],
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "playerAid": true,
    "roundLabel": "Multiply your tricks won by those of your agent.",
    "rounds": [
      "Winning no tricks gives a multiplier of 10."
    ],
    "seats": ""
  },
  "playerAid34a": {
    "type": "scoreboard",
    "id": "playerAid34a",
    "width": 360,
    "height": 155,
    "movable": false,
    "movableInEdit": false,
    "clickable": false,
    "css": {
      ".scoreboard tbody tr:nth-child(1) td": {
        "background": "#a9c6e8"
      },
      ".scoreboard td": {
        "text-align": "left"
      }
    },
    "roundLabel": "Agent Card",
    "rounds": [
      "heart",
      "square",
      "triangle",
      "stars"
    ],
    "seats": "playerAidDetail2",
    "showAllRounds": true,
    "showPlayerColors": false,
    "showTotals": false,
    "parent": "playerAid34",
    "fixedParent": true,
    "y": 90,
    "scoreProperty": "score34"
  },
  "o04t": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "-5 auction",
    "id": "o04t",
    "staged": false,
    "parent": "pile2"
  },
  "ipja": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "x2 auction",
    "id": "ipja",
    "staged": false,
    "parent": "pile2"
  },
  "gameID35": {
    "id": "gameID35",
    "x": -526,
    "y": 1441,
    "css": {
      "background": "blue",
      "color": "white",
      "font-size": "26px"
    },
    "sort2": "suit",
    "settingsArray": [
      [
        "showBidSuit",
        false
      ],
      [
        "showBidValue",
        false
      ],
      [
        "showDiscard",
        true
      ],
      [
        "capturedHolder",
        true
      ],
      [
        "showTricks",
        false
      ]
    ],
    "text": "Auctions (Similar to Bids)",
    "sort1": "sortDefault",
    "scoreSystem": [
      [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        -5,
        0
      ],
      [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      []
    ],
    "gameID": true,
    "hintText": "\"stuff.\"",
    "preSetExceptionsRoutine": [
      {
        "func": "SET",
        "collection": [
          "trump"
        ],
        "property": "scale",
        "value": 0
      }
    ],
    "versionArray": [
      {
        "value": "0",
        "text": "Click here to choose number of players"
      },
      {
        "value": "1",
        "text": "4 players (default)"
      },
      {
        "value": "2",
        "text": "3 players"
      },
      {
        "value": "3",
        "text": "5 players"
      },
      {
        "value": "4",
        "text": "6 players"
      }
    ],
    "version1": {
      "settingsDecksArray": [
        [
          "cardCount",
          10
        ],
        [
          "deckType",
          3
        ],
        [
          "seatCount",
          4
        ],
        [
          "tempScore",
          true
        ]
      ],
      "hideCardsByType": [
        "0 crow",
        "11 red",
        "12 red",
        "13 red",
        "14 red",
        "11 green",
        "12 green",
        "13 green",
        "14 green",
        "11 yellow",
        "12 yellow",
        "13 yellow",
        "14 yellow",
        "11 orange",
        "12 orange",
        "13 orange",
        "14 orange",
        "11 black",
        "12 black",
        "13 black",
        "14 black",
        "ally auction"
      ]
    },
    "version2": {
      "settingsDecksArray": [
        [
          "cardCount",
          10
        ],
        [
          "deckType",
          3
        ],
        [
          "seatCount",
          3
        ],
        [
          "tempScore",
          true
        ]
      ],
      "hideCardsByType": [
        "0 crow",
        "11 red",
        "12 red",
        "13 red",
        "14 red",
        "11 green",
        "12 green",
        "13 green",
        "14 green",
        "11 yellow",
        "12 yellow",
        "13 yellow",
        "14 yellow",
        "1 orange",
        "2 orange",
        "3 orange",
        "4 orange",
        "5 orange",
        "6 orange",
        "7 orange",
        "8 orange",
        "9 orange",
        "10 orange",
        "11 orange",
        "12 orange",
        "13 orange",
        "14 orange",
        "11 black",
        "12 black",
        "13 black",
        "14 black",
        "ally auction"
      ]
    },
    "settingsDecksArray": [
      [
        "cardCount",
        10
      ],
      [
        "deckType",
        3
      ],
      [
        "seatCount",
        4
      ],
      [
        "tempScore",
        true
      ]
    ],
    "hideCardsByType": [
      "0 crow",
      "11 red",
      "12 red",
      "13 red",
      "14 red",
      "11 green",
      "12 green",
      "13 green",
      "14 green",
      "11 yellow",
      "12 yellow",
      "13 yellow",
      "14 yellow",
      "11 orange",
      "12 orange",
      "13 orange",
      "14 orange",
      "11 black",
      "12 black",
      "13 black",
      "14 black",
      "ally auction"
    ],
    "dealRoutine": [
      "// Do the entire deal over. Start by moving all cards to the tempHolder.",
      {
        "func": "SET",
        "collection": "thisButton",
        "property": "ally",
        "value": null
      },
      {
        "func": "MOVE",
        "from": "hand",
        "to": "tempHolder",
        "count": 0
      },
      {
        "func": "MOVE",
        "from": "deckHolder",
        "to": "tempHolder",
        "count": 0
      },
      "// Move non-black cards to the deckHolder and set the ally card aside",
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "value": "tempHolder"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "suit",
        "relation": "!=",
        "value": 5
      },
      {
        "func": "SET",
        "property": "parent",
        "value": "deckHolder"
      },
      {
        "func": "SHUFFLE",
        "holder": "tempHolder"
      },
      {
        "func": "SHUFFLE",
        "holder": "deckHolder"
      },
      {
        "func": "SELECT",
        "type": "card",
        "property": "cardType",
        "value": "ally auction"
      },
      {
        "func": "SET",
        "property": "parent",
        "value": "offHolderHolder"
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY seatCount OF settingsDecks}",
        "relation": "<",
        "operand2": 6,
        "thenRoutine": [
          "// If 3-5 players, remove one non-black card",
          {
            "func": "MOVE",
            "from": "deckHolder",
            "to": "offHolder"
          }
        ]
      },
      {
        "func": "IF",
        "operand1": "${PROPERTY seatCount OF settingsDecks}",
        "relation": ">",
        "operand2": 4,
        "thenRoutine": [
          "// If 5-6 players, add Ally card",
          {
            "func": "SELECT",
            "type": "card",
            "property": "cardType",
            "value": "ally auction"
          },
          {
            "func": "SET",
            "property": "parent",
            "value": "deckHolder"
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY seatCount OF settingsDecks}",
            "operand2": 5,
            "thenRoutine": [
              "// If 5 players, move 2 black cards to deck",
              {
                "func": "MOVE",
                "from": "tempHolder",
                "to": "deckHolder",
                "count": 2
              }
            ],
            "elseRoutine": [
              "// If 3-4 players, move 3 black cards to deck",
              {
                "func": "MOVE",
                "from": "tempHolder",
                "to": "deckHolder",
                "count": 3
              }
            ]
          }
        ],
        "elseRoutine": [
          "// If 3-4 players, move 1 black card to deck",
          {
            "func": "MOVE",
            "from": "tempHolder",
            "to": "deckHolder"
          }
        ]
      },
      {
        "func": "SHUFFLE",
        "holder": "deckHolder"
      },
      {
        "func": "MOVE",
        "from": "deckHolder",
        "to": [
          "seat1",
          "seat2",
          "seat3",
          "seat4",
          "seat5",
          "seat6",
          "seat7",
          "seat8"
        ],
        "count": 10
      },
      {
        "func": "MOVE",
        "from": "tempHolder",
        "to": "deckHolder",
        "count": 0
      },
      {
        "func": "SHUFFLE",
        "holder": "deckHolder"
      },
      {
        "func": "FLIP",
        "holder": "deckHolder",
        "face": 1
      },
      {
        "func": "CALL",
        "widget": "routines",
        "routine": "autoSortRoutine"
      }
    ],
    "trumps": 5,
    "capturedArray": [
      [],
      [],
      [
        5
      ]
    ],
    "takeRoutine": [
      "// Move captured black card to display holder",
      {
        "func": "MOVE",
        "from": "deckHolder",
        "to": "capturedHolder${seatIndex}"
      },
      "// If player wins the ally card, do something - but what is here so far doesn't work.",
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "value": "capturedHolder${seatIndex}"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "cardType",
        "value": "ally auction"
      },
      {
        "func": "COUNT"
      },
      {
        "func": "IF",
        "condition": "${COUNT}",
        "thenRoutine": [
          {
            "func": "CLICK",
            "collection": [
              "teamGroup${seatIndex}"
            ]
          }
        ]
      },
      "// If down to the last black card in the main holder, flip it so it shows.",
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "value": "deckHolder"
      },
      {
        "func": "COUNT"
      },
      {
        "func": "IF",
        "operand1": "${COUNT}",
        "operand2": 1,
        "thenRoutine": [
          {
            "func": "SET",
            "property": "activeFace",
            "value": 1
          }
        ]
      },
      "// If the x2 was captured, it was moved off-board and this moves it back.",
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "value": "offHolder"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "cardType",
        "value": "x2 auction"
      },
      {
        "func": "SET",
        "property": "parent",
        "value": "tempHolder"
      },
      {
        "func": "MOVE",
        "from": "tempHolder",
        "to": "capturedHolder${seatIndex}"
      }
    ],
    "displayArray": [
      [
        "burnButton",
        1
      ]
    ],
    "scoreExceptionsRoutine": [
      "// If this player has x2 card double all points taken before the x2 card",
      {
        "func": "SELECT",
        "type": "card",
        "property": "cardType",
        "value": "x2 auction"
      },
      {
        "func": "GET",
        "property": "parent"
      },
      {
        "func": "GET",
        "property": "z"
      },
      {
        "func": "IF",
        "operand1": "${parent}",
        "operand2": "capturedHolder${value}",
        "thenRoutine": [
          {
            "func": "SELECT",
            "type": "card",
            "property": "_ancestor",
            "value": "capturedHolder${value}"
          },
          {
            "func": "SELECT",
            "source": "DEFAULT",
            "property": "z",
            "relation": "<",
            "value": "${z}"
          },
          {
            "func": "GET",
            "aggregation": "sum",
            "property": "rank"
          },
          "var result = ${result} + ${rank}"
        ]
      },
      "// If this player has 0 points and is not on the ally team, then the player gets a set number of points * number of rounds with 0 points.",
      {
        "func": "IF",
        "operand1": "${result}",
        "operand2": 0,
        "thenRoutine": [
          {
            "func": "IF",
            "operand1": "${PROPERTY seatCount OF settingsDecks}",
            "operand2": 3,
            "thenRoutine": [
              "var basePoints = 12"
            ]
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY seatCount OF settingsDecks}",
            "operand2": 4,
            "thenRoutine": [
              "var basePoints = 8"
            ]
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY seatCount OF settingsDecks}",
            "operand2": 5,
            "thenRoutine": [
              "var basePoints = 8"
            ]
          },
          {
            "func": "IF",
            "operand1": "${PROPERTY seatCount OF settingsDecks}",
            "operand2": 6,
            "thenRoutine": [
              "var basePoints = 7"
            ]
          },
          "var allyWidget = 'teamGroup' + ${value}",
          "var allyTeam = ${PROPERTY text OF $allyWidget}",
          "var seat = 'seat' + ${value}",
          {
            "func": "IF",
            "operand1": "${PROPERTY player OF $seat}",
            "relation": "!=",
            "operand2": "",
            "thenRoutine": [
              "var misere = ${PROPERTY misere}",
              "var misere = push ${seat}",
              {
                "func": "SET",
                "collection": "thisButton",
                "property": "misere",
                "value": "${misere}"
              },
              {
                "func": "IF",
                "operand1": "${allyTeam}",
                "relation": "!=",
                "operand2": "B",
                "thenRoutine": [
                  "var multiplier = ${PROPERTY $seat}",
                  "var result = ${basePoints} * ${multiplier}"
                ]
              }
            ]
          }
        ]
      }
    ],
    "version3": {
      "settingsDecksArray": [
        [
          "cardCount",
          10
        ],
        [
          "deckType",
          3
        ],
        [
          "seatCount",
          5
        ],
        [
          "tempScore",
          true
        ],
        [
          "variableScore",
          true
        ]
      ],
      "hideCardsByType": [
        "0 crow",
        "13 red",
        "14 red",
        "13 green",
        "14 green",
        "13 yellow",
        "14 yellow",
        "13 orange",
        "14 orange",
        "13 black",
        "14 black"
      ]
    },
    "version4": {
      "settingsDecksArray": [
        [
          "cardCount",
          10
        ],
        [
          "deckType",
          3
        ],
        [
          "seatCount",
          6
        ],
        [
          "tempScore",
          true
        ],
        [
          "variableScore",
          true
        ]
      ],
      "hideCardsByType": [
        "0 crow"
      ]
    },
    "playEnterRoutine": [
      {
        "func": "GET",
        "collection": "child",
        "property": "cardType"
      },
      {
        "func": "IF",
        "operand1": "${cardType}",
        "operand2": "ally auction",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "ally",
            "value": "${playerName}"
          },
          {
            "func": "CLICK",
            "collection": [
              "teamGroup${seatIndex}"
            ]
          }
        ]
      }
    ],
    "variablePartnerExceptionsRoutine": [
      "var index = ${PROPERTY index OF $value}",
      "var allyWidget = 'teamGroup' + ${index}",
      "var allyTeam = ${PROPERTY text OF $allyWidget}",
      {
        "func": "IF",
        "operand1": "${allyTeam}",
        "operand2": "B",
        "thenRoutine": [
          "var result = ${result} / 2",
          "var result = ceil ${result}"
        ]
      }
    ],
    "seat1": 1,
    "seat2": 1,
    "seat3": 1,
    "seat4": 1,
    "seat5": 1,
    "seat6": 1,
    "seat7": 1,
    "seat8": 1,
    "recallRoutine": [
      {
        "func": "FOREACH",
        "in": "${PROPERTY misere}",
        "loopRoutine": [
          {
            "func": "SET",
            "collection": "thisButton",
            "property": "${value}",
            "relation": "+",
            "value": 1
          }
        ]
      }
    ],
    "misere": [],
    "xxxxxxxcapturedEnterRoutine": [
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "value": "capturedHolder${seatIndex}"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "cardType",
        "value": "ally auction"
      },
      {
        "func": "COUNT"
      },
      {
        "func": "IF",
        "condition": "${COUNT}",
        "thenRoutine": [
          {
            "func": "CLICK",
            "collection": [
              "teamGroup${seatIndex}"
            ]
          }
        ]
      }
    ]
  },
  "pile2": {
    "type": "pile",
    "parent": "offHolder",
    "x": 4,
    "y": 4,
    "width": 103,
    "height": 160,
    "id": "pile2"
  },
  "burnButton": {
    "type": "button",
    "id": "burnButton",
    "x": 970,
    "y": 700,
    "width": 60,
    "height": 60,
    "movableInEdit": false,
    "clickRoutine": [
      "var gameID = 'gameID' + ${PROPERTY preSet OF preSetsButton}",
      {
        "func": "FOREACH",
        "range": [
          8
        ],
        "loopRoutine": [
          {
            "func": "MOVE",
            "from": "holder${value}",
            "to": "discard",
            "count": 999,
            "face": 0
          }
        ]
      },
      {
        "func": "SELECT",
        "type": "seat",
        "property": "id",
        "relation": "!=",
        "value": null
      },
      {
        "func": "SET",
        "property": "turn",
        "value": false
      },
      {
        "func": "SET",
        "collection": [
          "seat${seatIndex}"
        ],
        "property": "turn",
        "value": true
      },
      {
        "func": "SET",
        "collection": [
          "tricksCount"
        ],
        "property": "text",
        "relation": "+",
        "value": 1
      },
      {
        "func": "MOVE",
        "from": "deckHolder",
        "to": "tempHolder",
        "count": 1
      },
      {
        "func": "MOVE",
        "from": "deckHolder",
        "to": "tempHolder",
        "count": 0
      },
      {
        "func": "MOVE",
        "from": "tempHolder",
        "to": "deckHolder",
        "count": 0
      },
      {
        "func": "SELECT",
        "property": "_ancestor",
        "value": "deckHolder"
      },
      {
        "func": "SET",
        "property": "activeFace",
        "value": 1
      },
      {
        "func": "SELECT",
        "type": "card",
        "property": "_ancestor",
        "value": "discard"
      },
      {
        "func": "SELECT",
        "source": "DEFAULT",
        "property": "cardType",
        "value": "ally auction"
      },
      {
        "func": "COUNT"
      },
      {
        "func": "IF",
        "condition": "${COUNT}",
        "thenRoutine": [
          {
            "func": "SET",
            "collection": [
              "teamGroup1",
              "teamGroup2",
              "teamGroup3",
              "teamGroup4",
              "teamGroup5",
              "teamGroup6",
              "teamGroup7",
              "teamGroup8"
            ],
            "property": "text",
            "value": "A"
          }
        ]
      }
    ],
    "text": "Burn",
    "scale": 0
  },
  "jytu": {
    "deck": "crowDeck",
    "type": "card",
    "cardType": "ally auction",
    "id": "jytu",
    "staged": false,
    "parent": "pile2"
  },
  "zxzg": {
    "type": "pile",
    "parent": "deckHolder",
    "x": 4,
    "y": 4,
    "width": 103,
    "height": 160,
    "id": "zxzg"
  }
}