.dice.widget {
  --fontSize: calc(var(--size) * .95);
  --faceBorder: 0.5px solid var(--pipColor);
}

.dice.widget > .diceFaces {
  position: absolute;
  height: 100%;
  width: 100%;
  border-radius: inherit;
}

.dice.widget > .diceFaces > .diceFace {
  position: absolute;
  display: none;
  top: 0;
  left: 0;

  height: 100%;
  width: 100%;

  box-sizing: border-box;

  font-size: var(--fontSize);

  justify-content: center;
  align-items: center;
  text-align: center;

  color: var(--pipColor);
  border: var(--faceBorder);

  border-radius: inherit;

  background-color: var(--backgroundColor);
  background-repeat: no-repeat;
  background-position: center center;
  background-size: contain;
}

.dice.widget > .diceFaces > .active.diceFace {
  display: flex;
}

.dice.widget > .diceFaces > .dicePip {
  font-family: VTT-Symbols;
}


.dice.widget > .animate.diceFaces {
  animation-duration: 0.5s;
}

.dice.widget > .animate.diceFaces > .diceFace {
  display: flex;
  --phase1: 0;
  --phase2: 0;
  --final: 0;
  opacity: var(--final);
  animation-name: faceChange;
  animation-timing-function: step-start;
  animation-duration: inherit;
}

.dice.widget > .animateBegin.animate.diceFaces > .diceFace {
  opacity: var(--phase1);
  animation: none;
}

.dice.widget > .animate.diceFaces > .active.diceFace {
  --final: 1;
}

.dice.widget > .animate.diceFaces > .animate1active.diceFace {
  --phase1: 1;
}

.dice.widget > .animate.diceFaces > .animate2active.diceFace {
  --phase2: 1;
}


.shaking.dice.widget > .animate.diceFaces {
  animation-name: shake;
  --shakeX: 1;
  --shakeY: 1;
  --shakeR: 1;
}

.shaking.dice.widget > .animateBegin.animate.diceFaces {
  animation: none;
  transform: translate3d(calc(var(--shakeX) * 2%), 0, 0) rotate(calc(var(--shakeR) * -5deg));
  transition: transform 50ms;
}

.shaking.dice.widget > .shake1.animate.diceFaces,
.shaking.dice.widget > .shake3.animate.diceFaces,
.shaking.dice.widget > .shake5.animate.diceFaces,
.shaking.dice.widget > .shake7.animate.diceFaces {
  --shakeX: -1;
}

.shaking.dice.widget > .shake2.animate.diceFaces,
.shaking.dice.widget > .shake3.animate.diceFaces,
.shaking.dice.widget > .shake6.animate.diceFaces,
.shaking.dice.widget > .shake7.animate.diceFaces {
  --shakeY: -1;
}

.shaking.dice.widget > .shake4.animate.diceFaces,
.shaking.dice.widget > .shake5.animate.diceFaces,
.shaking.dice.widget > .shake6.animate.diceFaces,
.shaking.dice.widget > .shake7.animate.diceFaces {
  --shakeR: -1;
}


.shape3D.dice.widget {
  perspective: 1600px;
}

.shape3D.dice.widget > .diceFaces.diceFaces.diceFaces {
  transform-style: preserve-3d;
  transform: rotateX(var(--rotX)) rotateY(var(--rotY)) rotateZ(var(--rotZ));
  animation: none;
  transition: transform 0.5s;
}

.shape3D.dice.widget > .diceFaces > .diceFace {
  display: flex;
  border-radius: 0;
}

.shape3D.dice.widget > .animate.animate.diceFaces > .diceFace {
  animation: none;
  opacity: 1;
}

.shape3D.dice.widget > .diceFaces > .extra3Dface.diceFace {
  display: none;
}

.d2.shape3D.dice.widget > .diceFaces > .diceFace {
  border-radius: inherit;
}

.d2.dice.widget > .diceFaces > .diceFace:nth-child(2n + 1) {
  transform: rotateY(  0deg) translateZ(1px);
}

.d2.dice.widget > .diceFaces > .diceFace:nth-child(2n) {
  transform: rotateY(180deg) translateZ(1px);
}

.d4.dice.widget > .diceFaces.diceFaces.diceFaces {
  transform: rotateX(var(--rotX)) rotateZ(var(--rotZ));
  transform-origin: 50% 66% calc(var(--size) * -0.22453656);
}

.d4.dice.widget > .diceFaces > .diceFace {
  clip-path: polygon(50% 0, 100% 100%, 0% 100%);
  width: 110%;
  height: 95%;
  left: -5%;
  padding-top: 25%;
  border: none;
  font-size: calc(var(--fontSize) * .7);
}

.d4.dice.widget > .diceFaces > .diceFace:nth-child(4n + 1) {
  transform-origin: 0% 100%;
  transform: rotateZ(-60deg) rotateX(109.5deg);
}

.d4.dice.widget > .diceFaces > .diceFace:nth-child(4n + 2) {
  transform-origin: 100% 100%;
  transform: rotateZ(60deg) rotateX(109.5deg);
}

.d4.dice.widget > .diceFaces > .diceFace:nth-child(4n + 3) {
  transform-origin: 50% 100%;
  transform: rotateZ(180deg) rotateX(109.5deg);
}

.d6.dice.widget > .diceFaces.diceFaces.diceFaces {
  transform: translateZ(calc(var(--size) / -2)) rotateX(var(--rotX)) rotateY(var(--rotY));
}

.d6.dice.widget > .diceFaces > .diceFace:nth-child(6n + 1) {
  transform: rotateY(  0deg) translateZ(calc(var(--size) / 2));
}

.d6.dice.widget > .diceFaces > .diceFace:nth-child(6n + 2) {
  transform: rotateX(-90deg) translateZ(calc(var(--size) / 2));
}

.d6.dice.widget > .diceFaces > .diceFace:nth-child(6n + 3) {
  transform: rotateY(-90deg) translateZ(calc(var(--size) / 2));
}

.d6.dice.widget > .diceFaces > .diceFace:nth-child(6n + 4) {
  transform: rotateY( 90deg) translateZ(calc(var(--size) / 2));
}

.d6.dice.widget > .diceFaces > .diceFace:nth-child(6n + 5) {
  transform: rotateX( 90deg) translateZ(calc(var(--size) / 2));
}

.d6.dice.widget > .diceFaces > .diceFace:nth-child(6n) {
  transform: rotateY(180deg) translateZ(calc(var(--size) / 2));
}

@keyframes shake {
  15% {
    transform: translate3d(
        calc(var(--shakeX) * 4%),
        calc(var(--shakeY) * 2%),
        0
      )
      rotate(calc(var(--shakeR) * -10deg));
  }
  30% {
    transform: translate3d(
        calc(var(--shakeX) * -8%),
        calc(var(--shakeY) * 4%),
        0
      )
      rotate(calc(var(--shakeR) * 15deg));
  }
  40% {
    transform: translate3d(
        calc(var(--shakeX) * 8%),
        calc(var(--shakeY) * -8%),
        0
      )
      rotate(calc(var(--shakeR) * -10deg));
  }
  50% {
    transform: translate3d(
        calc(var(--shakeX) * -4%),
        calc(var(--shakeY) * 8%),
        0
      )
      rotate(calc(var(--shakeR) * 5deg));
  }
  60% {
    transform: translate3d(
        calc(var(--shakeX) * 8%),
        calc(var(--shakeY) * -4%),
        0
      )
      rotate(calc(var(--shakeR) * 15deg));
  }
  70% {
    transform: translate3d(
        calc(var(--shakeX) * -4%),
        calc(var(--shakeY) * 8%),
        0
      )
      rotate(calc(var(--shakeR) * -20deg));
  }
  80% {
    transform: translate3d(
        calc(var(--shakeX) * -2%),
        calc(var(--shakeY) * -4%),
        0
      )
      rotate(calc(var(--shakeR) * 10deg));
  }
  90% {
    transform: translate3d(0, calc(var(--shakeY) * -2%), 0)
      rotate(calc(var(--shakeR) * 5deg));
  }
}
@keyframes faceChange {
  0% {
    opacity: var(--phase1);
  }
  30% {
    opacity: var(--phase2);
  }
  65% {
    opacity: var(--final);
  }
}
