:root {
  --scale: 1;
  --roomWidth: 1600px;
  --roomHeight: 1000px;
  --roomTop: calc((calc(var(--vh, 1vh) * 100) - var(--roomHeight) * var(--scale)) / 2 - var(--toolbarSize) / 2);
  --roomLeft: 0px;
  --toolbarSize: 44px;
  --roomColor: #f0f0f0;
  --overlayFontColor: #222326;
  --VTTblue: #1f5ca6;
  --VTTblueDark: #0d2f5e;
  --VTTblueLight: #a9c6e8;
  --wcFont: #ffffff;
  --wcMain: var(--VTTblue);
  --wcBorder: var(--VTTblueDark);
  --wcHighlight: var(--VTTblueLight);
  --wcMainOH: var(--VTTblueDark);
  --wcBorderOH: var(--VTTblue);
  --wcFontOH: var(--wcFont);
  --modalBackgroundColor: var(--roomColor);
  --modalBorderColor: #bcbcbc;
  --modalInputFocusColor: #000eff;
  --positiveInput: #009502;
  --negativeInput: #950000;
  --neutralInput: #1f5ca6;
}

body {
  background: #484848;
  padding: 0;
  margin: 0;
  overflow: hidden;
  font-family: 'Roboto', sans-serif;
}

body.darkMode input {
  --overlayFontColor: #ffffff;
}

body.darkMode input::placeholder {
  color: #ffffff;
}

body.loadingEditMode * {
  cursor: wait;
}

#roomArea {
  position: fixed;
  overflow: clip;
  width: calc(var(--roomWidth) * var(--scale));
  height: calc(var(--roomHeight) * var(--scale));
  top: var(--roomTop);
  left: var(--roomLeft);
  z-index: 1;
}

@media (min-aspect-ratio: 1600/1000) {
  body {
    --roomTop: 0px;
    --roomLeft: calc((100vw - var(--roomWidth) * var(--scale)) / 2 + var(--toolbarSize) / 2);
  }
}

body.aspectTooGood {
  --roomTop: calc((100vh - var(--scale) * var(--roomHeight)) / 2);
  --roomLeft: var(--toolbarSize);
}

body.aspectTooGood.hiddenToolbar {
  --roomLeft: calc((100vw - var(--scale) * var(--roomWidth)) / 2);
}

@media (orientation: portrait) {
  body:not(.lightsOff,.jsonEdit) {
    background-image: linear-gradient(0deg, #484848e8, #484848e8), url(i/branding/logo.svg);
    background-size: calc(100% - 40px) calc(var(--roomTop) - 40px);
    background-repeat: no-repeat;
    background-position: 20px 20px;
    height: 100vh;
  }
  body:not(.lightsOff,.jsonEdit)::after {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;

    bottom: 0;
    height: calc(var(--roomTop) - 40px);
    width: calc(100vw - 40px);

    content: "Please rotate your device to landscape orientation and switch to fullscreen.";
    margin: 20px;
    font-size: 20px;
    color: #fff2;
  }
}


/* toolbar */


  /* main */

    #toolbar {
      display: flex;
      flex-direction: column;
      align-content: center;
      position: fixed;
      box-sizing: border-box;
      z-index: 2;

      top: 0;
      left: calc((100vw - var(--roomWidth) * var(--scale)) / 2 - var(--toolbarSize) / 2 + 1px);
      width: var(--toolbarSize);
      height: 100%;

      --toolbarColor: var(--VTTblue);
      background: var(--toolbarColor);
      padding: 20px 0 10px 0;
    }

    #toolbar > img {
      display: none;
    }

    body.wideToolbar {
      --toolbarSize: 200px;
    }

    body.aspectTooGood #toolbar {
      top: calc((100vh - var(--scale) * var(--roomHeight)) / 2);
      height: calc(var(--scale) * var(--roomHeight));
    }

    body.horizontalToolbar #toolbar {
      flex-direction: row;

      top: calc((var(--vh, 1vh) * 100 - var(--roomHeight) * var(--scale)) / 2 + var(--roomHeight) * var(--scale) - var(--toolbarSize) / 2 - 1px);
      left: 0;
      width: 100%;
      height: var(--toolbarSize);

      padding: 0 10px 0 20px;
    }

    body.aspectTooGood.hiddenToolbar #toolbar {
      display: none;
    }

    body.loading #toolbar, body.loading #toolbar * {
      cursor: not-allowed;
    }

    @media (min-height: 350px) {
      body.wideToolbar #toolbar > img {
        display: block;
        margin: 10px 20px 3px 20px;
        height: 52px;
      }
      body.wideToolbar #toolbar .divider:nth-child(2) {
        display: block;
        margin: 20px 10%;
      }
    }

    @media (max-height: 450px) {
      body.wideToolbar #toolbar .divider:nth-child(2) {
        margin: 10px 10%;
      }
    }

    @media (max-height: 430px) {
      body.wideToolbar #toolbar {
        padding: 0;
      }
      body.wideToolbar #toolbar > img {
        margin: 10px 20px;
      }
    }

    @media (max-height: 415px) {
      body.wideToolbar #toolbar .divider:nth-child(2) {
        display: none;
      }
    }

    @media (max-height: 420px) {
      body:not(.wideToolbar,.horizontalToolbar,.aspectTooGood) #toolbar {
        padding: 0;
      }
    }

    @media (max-width: 760px) {
      body.aspectTooGood #toolbar {
        padding: 0;
      }
    }

    @media (max-width: 530px) {
      body.horizontalToolbar #toolbar {
        padding: 0 5px;
      }
    }

  /* dividers */

    #toolbar .divider {
      border-top: 1px solid #fff8;
      margin: 10px 10%;
    }

    #toolbar .divider:nth-child(2) {
      display: none;
    }

    #toolbar .spacer {
      flex-grow: 1;
    }

    body.horizontalToolbar #toolbar .divider {
      border-left: 1px solid #fff8;
      height: 80%;
      margin: auto 10px;
    }

    @media (max-height: 415px) {
      body.wideToolbar #toolbar .divider {
        display: none;
      }
    }

    @media (max-height: 420px) {
      body:not(.wideToolbar,.horizontalToolbar,.aspectTooGood) #toolbar .divider {
        display: none;
      }
    }

    @media (max-width: 760px) {
      body.aspectTooGood #toolbar .divider {
        display: none;
      }
    }

  /* buttons */

    .toolbarButton {
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 2px;
      background: var(--toolbarColor);
    }

    .toolbarButton::before,
    .ui-button::before,
    .prettyButton::before,
    .prettyButton-icon,
    .symbols {
      font-family: 'VTT-Symbols' !important;

      letter-spacing: 0;
      font-feature-settings: "liga";
      font-variant-ligatures: discretionary-ligatures;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }

    .toolbarButton::before {
      font-size: 20px;
    }

    .toolbarButton:hover {
      background-color: rgba(0, 0, 0, 0.1);
    }

    body.loading .toolbarButton:hover {
      background-color: transparent;
    }

    .toolbarButton:focus {
      outline-style: none;
      box-shadow: none;
      border-color: transparent;
    }

    body.wideToolbar .toolbarButton {
      justify-content: left;
      padding-left: 10%;
    }

    body.horizontalToolbar .toolbarButton:not(.toolbarTab) {
      justify-content: flex-end;
    }

    @media (max-height: 520px) {
      body.wideToolbar .toolbarButton:not(.toolbarTab) {
        padding: 0 10%;
      }
    }

    @media (max-height: 420px) {
      body:not(.wideToolbar,.horizontalToolbar,.aspectTooGood) .toolbarButton:not(.toolbarTab) {
        padding: 2px;
      }
    }

    @media (max-width: 760px) {
      body.aspectTooGood #toolbar .toolbarButton:not(.toolbarTab) {
        padding: 2px;
      }
    }

    @media (max-width: 530px) {
      body.horizontalToolbar .toolbarButton:not(.toolbarTab) {
        padding: 2px;
        margin: 0;
      }
    }

  /* tabs */

    .toolbarTab {
      width: 90%;
      border-radius: 0 20px 20px 0;
      margin-left: 0;
      height: 40px;
    }

    .toolbarTab::before {
      font-size: 32px;
    }

    .toolbarTab.active {
      background-color: white;
      color: var(--toolbarColor);
    }

    body.wideToolbar .toolbarTab::before {
      font-size: 24px;
    }

    body.horizontalToolbar .toolbarTab {
      border-radius: 20px 20px 0 0;
      margin: auto 2px 0 2px;
      padding: 0 16px;
      width: unset;
    }

    @media (max-height: 400px) {
      body.wideToolbar .toolbarTab {
        height: 30px;
      }
    }

    @media (max-height: 420px) {
      body:not(.wideToolbar,.horizontalToolbar,.aspectTooGood) .toolbarTab {
        height: 30px;
      }
    }

    @media (max-width: 760px) {
      body.aspectTooGood #toolbar .toolbarTab {
        height: 30px;
      }
    }

    @media (min-width: 950px) {
      body.horizontalToolbar .toolbarTab::before {
        font-size: 24px;
      }
    }

    @media (max-width: 530px) {
      body.horizontalToolbar .toolbarTab {
        padding: 0 8px;
      }
    }

  /* button tooltips */

    .toolbarButton .tooltip, #options {
      display: none;
      position: absolute;
      left: 46px;
      padding: 2px 12px;
      font-size: 14px;
      border-radius: 4px;
      white-space: nowrap;
      color: #fff;
      background: var(--toolbarColor);
      box-shadow: 0 0 5px #0005;
      pointer-events: none;
    }

    body:not(.loading) .toolbarButton:hover .tooltip, body.wideToolbar .toolbarButton .tooltip {
      display: block;
    }

    body.wideToolbar .toolbarButton .tooltip {
      box-shadow: unset;
      background: none;
    }

    body.wideToolbar .toolbarButton .tooltip {
      margin-left: -4px;
      font-size: 12px;
    }

    body.wideToolbar .toolbarTab .tooltip {
      font-size: 20px;
    }

    body.wideToolbar .active.toolbarTab .tooltip {
      color: var(--toolbarColor);
    }

    body.horizontalToolbar .toolbarButton .tooltip {
      left: unset;
      bottom: 46px;
    }

    @media (min-width: 950px) {
      body.horizontalToolbar .toolbarTab .tooltip {
        box-shadow: unset;
        background: none;
      }

      body.horizontalToolbar .toolbarButton .tooltip {
        margin-left: -4px;
        font-size: 12px;
      }

      body.horizontalToolbar .toolbarTab .tooltip {
        font-size: 20px;
      }

      body.horizontalToolbar .active.toolbarTab .tooltip {
        color: var(--toolbarColor);
      }

      body.horizontalToolbar .toolbarTab .tooltip {
        display: block;
        position: static;
        padding-right: 0;
      }
    }

  /* button specific styles */

    #activeGameButton::before {
      content: '[play_arrow]';
    }

    #statesButton::before {
      content: '[library]';
    }

    #playersButton::before {
      content: '[users_settings]';
    }

    #editButton::before {
      content: '[edit_mode]';
    }

    #addButton::before {
      content: '[widget_add]';
    }

    #optionsButton::before {
      content: '[volume_up]';
    }

    html:not(:fullscreen) #fullscreenButton::before {
      content: '[enter_fullscreen]';
    }

    html:fullscreen #fullscreenButton::before {
      content: '[exit_fullscreen]';
    }

    html:not(:fullscreen) #fullscreenButton .tooltip::before {
      content: '';
    }

    html:fullscreen #fullscreenButton .tooltip::before {
      content: 'Exit ';
    }

    html:not(:-webkit-full-screen) #fullscreenButton::before {
      content: '[enter_fullscreen]';
    }

    html:-webkit-full-screen #fullscreenButton::before {
      content: '[exit_fullscreen]';
    }

    html:not(:-webkit-full-screen) #fullscreenButton .tooltip::before {
      content: '';
    }

    html:-webkit-full-screen #fullscreenButton .tooltip::before {
      content: 'Exit ';
    }

    #lightsButton::before {
      content: '[auto_awesome]';
    }

    #hideToolbarButton::before {
      content: '[hide_side_bar]';
    }

    #aboutButton::before {
      content: '[vtt_logo]';
    }

    body:not(.aspectTooGood) #hideToolbarButton {
      display: none;
    }

    @media (max-height: 120px) {
      body.wideToolbar #editButton, body.wideToolbar #addButton {
        display: none;
      }
    }

    @media (max-height: 290px) {
      body:not(.horizontalToolbar,.aspectTooGood) #toolbar .divider, body:not(.horizontalToolbar,.aspectTooGood) #optionsButton, body:not(.horizontalToolbar,.aspectTooGood) #lightsButton {
        display: none;
      }
    }

    @media (max-width: 550px) {
      body.aspectTooGood #toolbar .divider, body.aspectTooGood #optionsButton, body.aspectTooGood #lightsButton {
        display: none;
      }
    }

    @media (max-width: 460px) {
      body.aspectTooGood #addButton {
        display: none;
      }
    }

    @media (max-height: 230px) {
      body:not(.horizontalToolbar) #addButton {
        display: none;
      }
    }

    @media (max-height: 200px) {
      body:not(.horizontalToolbar) #aboutButton {
        display: none;
      }
    }

    @media (max-width: 410px) {
      body.aspectTooGood #aboutButton {
        display: none;
      }
    }

    @media (max-width: 360px) {
      body.aspectTooGood #editButton {
        display: none;
      }
    }

    @media (max-height: 170px) {
      body:not(.horizontalToolbar) #editButton {
        display: none;
      }
    }

    @media (max-height: 140px) {
      body:not(.horizontalToolbar) #playersButton {
        display: none;
      }
    }

    @media (max-width: 300px) {
      body.aspectTooGood #playersButton {
        display: none;
      }
    }

    @media (max-width: 250px) {
      body.aspectTooGood #hideToolbarButton {
        display: none;
      }
    }

    @media (max-width: 390px) {
      body.horizontalToolbar #toolbar .divider, body.horizontalToolbar #optionsButton, body.horizontalToolbar #lightsButton {
        display: none;
      }
    }

    @media (max-width: 320px) {
      body.horizontalToolbar #addButton {
        display: none;
      }
    }

    @media (max-width: 300px) {
      body.horizontalToolbar #aboutButton {
        display: none;
      }
    }

    @media (max-width: 245px) {
      body.horizontalToolbar #editButton {
        display: none;
      }
    }

    @media (max-width: 190px) {
      body.horizontalToolbar #playersButton {
        display: none;
      }
    }

  /* sound settings */

    #optionsAnchor {
      position: relative;
    }

    #options {
      display: flex;
      left: calc(var(--toolbarSize) + 4px);
      top: -2px;
      padding: 2px;
      pointer-events: unset;
    }

    #options.hidden {
      display: none;
    }

    #muteButton {
      padding: 5px;
    }

    #muteButton::before {
      content: '[volume_up]';
    }

    #muteButton.muted::before {
      content: '[volume_off]';
    }

    body.horizontalToolbar #options {
      top: -42px;
      left: unset;
      right: -32px;
    }

  /* lights off */

    body.lightsOff, body.lightsOff #toolbar {
      --toolbarColor: black;
      background-color: black;
    }

    body.lightsOff #toolbar {
      opacity: 0.1;
    }

    body.lightsOff #toolbar:hover {
      opacity: 1;
    }


/* misc */


.overlay {
  color: var(--VTTblue);
  display: none;
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  background: white;
  flex-direction: column;
  padding: 5% 10%;
  box-sizing: border-box;
  overflow: auto
}

.overlay h1 {
  text-align: center;
}

.overlay a {
  color: var(--VTTblue);
  font-weight: bold;
}

.overlay tr:nth-child(even) {
  background: #00000022;
}

div[icon] {
  background: var(--roomColor);
  position: relative;
  padding: 20px;
  border-radius: 20px;
  overflow: hidden;
  color: var(--overlayFontColor);
}

div[icon]::before {
  content: attr(icon);
  font-family: "Material Icons";
  color: #f8f8f8;
  font-size: 250px;
  line-height: 250px;
  position: absolute;
  right: -40px;
  top: -10px;
}

div[icon] * {
  position: relative;
}

div[icon] > :nth-child(1) {
  margin-top: 0;
}

div[icon] a, div[icon] input, div[icon] select {
  color: var(--overlayFontColor);
}

div[icon] .buttons {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}

#room {
  transform: scale(var(--scale));
  transform-origin: left top;
}

::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}

::-webkit-scrollbar-track {
  background: white;
  border-radius: 5px;
}

::-webkit-scrollbar-thumb {
  background: var(--VTTblue);
  border-radius: 5px;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--VTTblueDark);
}

.surface {
  position: relative;
  width: var(--roomWidth);
  height: var(--roomHeight);
  background: var(--roomColor);
  touch-action: none;
  overflow: hidden;
}

.widget {
  position: absolute;
  left: 0;
  top: 0;
  white-space: pre-wrap;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center center;
  touch-action: none;
  user-select: none;
  -moz-user-select: none;
}

.widget.foreign {
  --foreign:true;
}

body:not(.jsonEdit) .widget.foreign, body:not(.jsonEdit) .widget.hidden {
  display: none !important;
}

body.jsonEdit:not(.hitTest) .widget.foreign, body.jsonEdit:not(.hitTest):not(.showHiddenWidgets) .widget.hidden {
  /* Edit mode uses elementsFromPoint to determine widgets under the cursor, so
     we hide and pass pointer events through the element but don't use display: none here
     to prevent invalidating all layout every time the mouse moves. When hit testing
     the foreign layers are temporarily visible (but the class is removed before a frame
     is presented to the user). */
  visibility: hidden;
  pointer-events: none;
}

#clientPointer {
  visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  width:0;
  height:0;
  border: none;
  margin: 0;
  padding: 0;
  pointer-events: none;
  z-index: 3;
}

#enlarged {
  opacity: 1;
  visibility: visible;
  position: fixed;
  top: 5vh;
  left: 5vw;
  transition: opacity 200ms ease;
  transition-delay: 400ms, 400ms;
  transform-origin: top left;
  pointer-events: none;
}

#enlarged.right {
  left: unset;
  right: 5vw;
  transform-origin: top right;
}

#enlarged.hidden {
  opacity: 0;
  visibility: hidden;
}

/*Buttons css*/

button {
  border: 5px;
  color: white;
  background-color: var(--VTTblue);
  padding: 5px;
  border-radius: 5px;
  background-repeat: no-repeat;
  margin: 1px;
}

button:hover {
  background-color: var(--VTTblueDark);
}

button[icon] {
  display: flex;
  align-items: center;
  padding-right: 0.75rem;
  font-weight: bold;
  text-transform: uppercase;
  overflow-wrap: normal; /* fixes richtext controls in older Chrome (85) */
}
button[icon]::before {
  content: attr(icon);
  font-family: "Material Icons";
  text-transform: lowercase;
  margin-right: .25rem;
  font-size: 24px;
  font-weight: normal;
  line-height: 1;
  width: 24px;
  overflow: clip;
}
button[icon]:empty {
  padding: 5px;
}
button[icon]:empty::before {
  margin: 0;
}
button[icon].red {
  background-color: darkred;
}
button[icon].red:hover {
  background-color: #580000;
}
button[icon].green {
  background-color: darkgreen;
}
button[icon].green:hover {
  background-color: #004f00;
}
button[icon].green:disabled:hover {
  background-color: darkgreen;
}

.prettyButton {
  border: 5px;
  font-size: 16px;
  color: white;
  background-color: var(--VTTblue);
  padding: 5px 10px;
  border-radius: 5px;
  background-repeat: no-repeat;
  margin: 1px;
  display: flex;
  align-items: center;
  align-self: center;
  gap: 8px;
  font-family: 'Roboto', sans-serif;
}

.prettyButton::before,
.prettyButton-icon,
.prettyButton .symbols {
  display: inline-block;
  width: 24px;
  height: 18px;
  font-size: 24px;
  line-height: 18px;
}

button.visualProgress {
  --stripesColor1: #006400;
  --stripesColor2: #006400;
  position: relative;
  background-image: linear-gradient(135deg, #006400 0%, #006400 100%);
  background-size: calc(var(--progress) * 100%) 100%;
  background-repeat: no-repeat;
}

.richtext-controls {
  position: sticky;
  top: 10px;
  background: var(--VTTblue);
  margin: 4px;
  border-radius: 4px;
  padding: 2px;
  font-size: 0;
  z-index: 1;
}

.richtext-controls button {
  display: inline-flex;
  padding: 2px;
}

.richtext-controls button:empty {
  padding: 2px;
}

.richtext-controls .divider {
  border-left: 1px solid #fff6;
  margin: 2px 4px;
  display: inline-block;
  height: 20px;
}

.richtextAsset {
  max-width: 80%;
  display: block;
  margin: 20px auto;
}

.floating.richtextAsset {
  max-width: 50%;
  float: left;
  margin: 0 20px 20px 0;
}

.richtextSymbol.richtextSymbol:not(.emoji), img.emoji {
  display: inline-block;
  font-size: 1.15em;
  position: relative;
  line-height: 1em;
  font-style: normal;
  height: 1em;
  width: 1em;
}
.richtextSymbol.symbols {
  top: 0.1em;
}
.richtextSymbol.material-icons {
  top: 0.2em;
}
.richtextSymbol.gameicons, img.emoji {
  vertical-align: bottom;
}

.symbols {
  font-family: 'VTT-Symbols';
}

.standard_font {
  font-family: 'Roboto';
}

.handwriting_font {
  font-family: 'Handwriting';
}

.handwriting_casual_font {
  font-family: 'Handwriting Casual';
}

.prettyButton:hover {
  background-color: var(--VTTblueDark);
}

.gameMenu {
  background-position: 5px center !important;
  padding-left: 5px !important;
}

.upload::before,
.uploadAsset::before {
  content: '[upload]';
}

.download::before {
  content: '[download]';
}

.link::before,
.share::before {
  content: '[link]';
}

.edit::before {
  content: '[edit]';
}
body.edit::before {
  content: '';
  display: none;
}


.add::before,
.create::before {
  content: '[add]';
}

.library::before {
  content: '[book_open]';
}

.save::before,
.saveProgress::before {
  content: '[save]';
}

.update::before {
  content: '[save]';
}

.remove::before {
  content: '[close_square]';
}
.update:hover {
  background-color: var(--VTTblueDark);
}

button {
  font-family: 'Roboto', sans-serif;
}

button.top {
  padding: 0px;
  margin: 0.5px;
  text-align: center;
}

button.add {
  flex-direction: column;
  gap: 0;
}

button.add::before {
  margin: -4px 0 0 0;
}

button:disabled,
button:disabled:hover {
  background-color: #808080;
  color: #d3d3d3;
  cursor: not-allowed;
}

.ui-button {
  background-color: var(--VTTblue);
  padding: 0 8px;
  border-radius: 4px;
  line-height: 36px;
  display: flex;
  align-items: center;
  gap: 8px;
  cursor: pointer;
  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px 0px, rgba(0, 0, 0, 0.24) 0px 1px 2px 0px;
  margin: 8px;
}

.ui-button::before {
  display: inline-block;
  width: auto;
  height: 36px;
  font-size: 30px;
}

.ui-button.red {
  background-color: #ff3b30;
}

.ui-button.green {
  background-color: #4cd964;
}

.ui-button.blue {
  background-color: var(--neutralInput);
}
#gridOverlay{
  color: black;
  align-items: center;
  justify-content: center;
  padding: 0;
  background: #0008;
}
.gridFields {
  color: #fff;
  background-color: var(--VTTblue);
  width: 60px;
}
.gridFields::placeholder{
  color: #a9a;
}
#gridOverlay .modal{
  width: 200px;
}
#gridOverlay > .modal button.ui-button{
  width: 100%;
  box-sizing: border-box;
  justify-content: center;
}
#pileOverlay{
  color: black;
  align-items: center;
  justify-content: center;
  padding: 0;
  background: #0008;
}
#buttonInputOverlay{
  justify-content: center;
  align-items: center;
  padding: 10px;
  background: #0008;
}
#buttonInputOverlay h1{
  display: none;
}
.modal{
  color: var(--modalTextColor);
  background: var(--modalBackgroundColor);
  box-shadow: 0 5px 10px #000000aa;
  max-width: 550px;
  min-width: 300px;
  max-height: 90%;
  overflow-y: auto;
  overflow-x: hidden;
  border-radius: 8px;
  border-top: 3px solid var(--VTTblue);
  border-bottom: 3px solid var(--VTTblue);
  position: relative;
}

.modal h1 {
  margin: 0;
  padding: 4px 8px;
  text-align: left;
  position: relative;
  box-sizing: border-box;
  display: flex;
  justify-content: space-between;
  align-items: center;
  min-height: 48px;
  color: #ffffff;
  font-size: 16px;
  font-weight: 700;
  padding: 10px 16px;
  background: var(--VTTblueDark);
}

.modal h1:after {
  content: '';
  position: absolute;
  background-color: var(--modalBorderColor);
  display: block;
  z-index: 15;
  top: auto;
  right: auto;
  bottom: 0;
  left: 0;
  height: 1px;
  width: 100%;
}

.modal .footer {
  padding: 16px 4px 4px 4px;
  position: relative;
  box-sizing: border-box;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 12px;
  background: lightgray;
}

.modal .footer:before {
  content: '';
  position: absolute;
  background-color: var(--modalBorderColor);
  display: block;
  z-index: 15;
  top: 0;
  right: auto;
  bottom: auto;
  left: 0;
  height: 1px;
  width: 100%;
}


.modal .footer > button {
  font-family: 'Roboto';
  display: flex;
  height: 32px;
  justify-content: center;
  align-items: center;
  gap: 4px;

  padding: 0 8px;
  font-size: 14px;
  line-height: 32px;
  color: white;
  border-radius: 4px;
  white-space: nowrap;
  font-weight: 500;
  cursor: pointer;
  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px 0px, rgba(0, 0, 0, 0.24) 0px 1px 2px 0px;
}
.modal .footer > button label {
  font-size: 1rem;
}
.modal .footer > button * {
  cursor: pointer;
}




.modal .footer > button label:empty, .modal .footer > button span:empty{
  display: none;
}

.UIicon:empty{
  display: none;
}
.UIicon{
  font-family: 'VTT-Symbols';
  font-weight: normal;
  font-style: normal;
  font-size: 32px;  /* Preferred icon size */
  display: inline-block;
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;
  /* Support for all WebKit browsers. */
  -webkit-font-smoothing: antialiased;
  /* Support for Safari and Chrome. */
  text-rendering: optimizeLegibility;
  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;
  /* Support for IE. */
  font-feature-settings: 'liga';
  vertical-align: middle;
}


.modal .footer > button.positiveInput {
  font-weight: 900;
  background: var(--positiveInput);
  order: 2;
  min-width: 60px;
}

.modal .footer > button.negativeInput {
  font-weight: 500;
  background: var(--negativeInput);
  order: 1;
  min-width: 60px;
}

.modal .footer > button.neutralInput {
  font-weight: 500;
  background: var(--neutralInput);
  order: 1;
  min-width: 60px;
}
#buttonInputFields{
  color: black;
  margin: -2px 0 0 0;
}
#buttonInputFields input{
  position: relative;
}
#buttonInputFields label:not(.switchbox):empty {
  display: none;
}
.modal *:focus {
  outline: none;
  box-shadow: 0 0 0 3px #159ce4;
  transition: all 0.3s ease;
  border-radius: 5px;
}
#buttonInputFields > div{
  display: flex;
  position: relative;
  padding: 3px;
  border-bottom: 1px solid var(--modalBorderColor);
}

.inputtitle{
  background: var(--VTTblue);
  color: white;
}
.inputsubtitle{
  background: lightgray;
}
.inputtitle label{
  display: block;
  font-size: 24px;
  line-height: 31.2px;
  font-weight: bold;
  padding: 8px 5px;
  margin: 0;
}
.inputsubtitle label{
  display: block;
  font-size: 20px;
  line-height: 20px;
  font-weight: bold;
  padding: 12px 5px 0px 5px;
  margin: 0;
}
.inputtext label{
  display: block;
  font-size:16px;
  line-height:19.6px;
  padding:16px 8px;
  position:relative;
  text-size-adjust:100%;
  font-style: italic;
  margin: 0;
}

.inputunderline{
  background-color: #aaaaaa;
  margin: -5px 5px 5px 5px;
  height: 1px;
}

.inputnumber,
.inputstring,
.inputselect,
.inputpalette,
.inputchoose{
  flex-direction: column;
}
.inputcheckbox{
  flex-direction: row;
}

.inputnumber label,
.inputstring label,
.inputselect label,
.inputpalette label,
.inputchoose label{
  padding: 4px 5px 0 5px;
    width: 100%;
    vertical-align: top;
    flex-shrink: 0;
    font-size: 14px;
    font-weight: 400;
    line-height: 15.6px;
    min-height: 15px;
}

.inputcheckbox input{
  display: inline-block;
  margin: 8px 5px 0 14px;
  height: 20px;
  width: 20px;
  border-radius: 4px;
  flex-grow: 0;
  flex-shrink: 0;
  order: 1;
}

.inputnumber input,
.inputstring input,
.inputselect select
{
  appearance: none;
  padding: 0 5px 0px 5px;
  margin: 0 0 0 0;
  font-size: 16px;
  color: var(--modalTextColor);
  background-color: transparent;
  border: 0px none transparent;
  line-height: 36px;
  border-radius: 4px;
}

.inputselect select{
  padding-right: 25px;
}

.inputexpandselect {
  text-align: right;
  font-family: "Material Icons";
  font-size: 20px;
  line-height: 20px;
  position: absolute;
  right: 5px;
  bottom: 12px;
  z-index: -1;
}

.inputnumber label:empty ~ input,
.inputstring label:empty ~ input,
.inputselect label:empty ~ select
{
  padding: 0 5px 0px 5px;
  margin: 0;
}
.inputselect select option{
  background-color: var(--modalBackgroundColor);
  font-size: 16px;
}
.inputcheckbox label,
.inputcolor label,
.inputswitch label{
  cursor: pointer;
  margin: 0px 0 0 0;
  font-size: 16px;
  line-height: 20px;
  padding: 8px 5px;
  flex-grow: 1;
}
.inputcheckbox label,
.inputcolor label{
  order: 2;
}

.inputcolor input {
  -webkit-appearance: none;
  -moz-appearance: none;
  border-radius: 4px;
  display: inline-block;
  margin: 3px 3px 0 8px;
  padding: 0;
  width: 30px;
  height: 30px;
  border: 2px solid rgba(255, 255, 255, 0.25);
  order: 1;
  flex-grow: 0;
  flex-shrink: 0;
}
.inputcolor input::-webkit-color-swatch-wrapper {
  padding: 0;
  border: 0 none transparent;
}
.inputcolor input::-webkit-color-swatch {
  border-radius: 4px;
}
.inputcolor input::-moz-color-swatch-wrapper {
  padding: 0;
  border: 0 none transparent;
}
.inputcolor input::-moz-color-swatch  {
  border-radius: 4px;
}
.inputswitch{
  flex-direction: row;
}
.inputswitch input{
  position: absolute;
  top: -50000px;
}

.inputswitch label.switchbox {
  font-size: 0px;
  line-height: 0px;
  height: 28px;
  width: 40px;
  flex-grow: 0;
  flex-shrink: 0;
  margin: 4px;
  padding: 0 5px;
  position: relative;
}
label.switchbox{
  background: gray;
  border-radius: 100px;
  transition-property: all;
  transition-duration: 0.15s;
  transition-delay: 0;
}
label.switchbox::before {
  display: inline-block;
  position: absolute;
  left: 0;
  color: white;
  content: 'w';
  background: white;
  border-radius: 100px;
  font-size: 0px;
  line-height: 0px;
  height: 24px;
  width: 24px;
  margin-top: 2px;
  margin-left: 2px;
  transition-property: all;
  transition-duration: 0.15s;
  transition-delay: 0;
  box-shadow: 0 0 3px black;
}

input.switchbox + label.switchbox::before {
  margin-left: 2px;
  background-color: #ffffff;
}

input.switchbox[type="checkbox"]:checked + .switchbox::before {
  margin-left: 24px;
  background-color: #ffffff;
}
input.switchbox[type="checkbox"]:checked + .switchbox{
  background-color: var(--VTTblue);
}
.modal input[type=range] {
  -webkit-appearance: none;
  margin: 0;
  width: 100%;
  background: none;
  height: 42px;
}
.modal input[type=range]:focus {
  border-radius: 100px;
}
.modal input[type=range]::-webkit-slider-runnable-track {
  width: 100%;
  height: 42px;
  cursor: pointer;
  background: #3071a9;
  border-radius: 42px;
  margin: 0;
  overflow: hidden;
  padding: 2px;
}
.modal input[type=range]::-webkit-slider-thumb {
  box-shadow: 0 0px 3px #000000, 0px 0px 1px #0d0d0d;
  border: 1px solid #000000;
  height: 38px;
  width: 38px;
  border-radius: 42px;
  background: #ffffff;
  cursor: pointer;
  -webkit-appearance: none;
}
.modal input[type=range]:focus::-webkit-slider-runnable-track {
  background: #367ebd;
}
.modal input[type=range]::-moz-range-track {
  width: 100%;
  height: 38px;
  cursor: pointer;
  background: #3071a9;
  border-radius: 42px;
  margin: 0;
  overflow: hidden;
  padding: 2px;
}
.modal input[type=range]::-moz-range-thumb {
  box-shadow: 0 0px 3px #000000, 0px 0px 1px #0d0d0d;
  border: 1px solid #000000;
  height: 36px;
  width: 36px;
  border-radius: 36px;
  background: #ffffff;
  cursor: pointer;
  -webkit-appearance: none;
}
.countInput{
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 2rem;
  line-height: 42px;
  padding: 8px 8px 0;

}
.countInput input[type=number]{
  font-size: 1.5rem;
  text-align: center;
  width: 3ch;
  padding: 0 5px;
  border: 0px none transparent;
  background: transparent;
  -moz-appearance: textfield;
  appearance: textfield;
  margin: 0;
}
.countInput input[type=number]::-webkit-inner-spin-button,
.countInput input[type=number]::-webkit-outer-spin-button {
      -webkit-appearance: none;
      margin: 0;
}
#pileOverlay .modal{
  width: 200px;
}
#pileOverlay > .modal button.ui-button{
  width: 100%;
  box-sizing: border-box;
  justify-content: center;
}
/* .inputtext.optiontext label{
  text-align: center;
} */
#pileOverlay > .modal .inputtext.optiontext{
  display: none;
}
.modal .button-bar{
  box-sizing: border-box;
  padding: 8px 32px;
}
.modal .button-bar button {
  margin-left: 0;
  margin-right: 0;
}
.pilecancelbutton{
  position: absolute;
  height: 38px;
  width: auto!important;
  top: -5px;
  right: 5px;
  background-color: black;
}
input:invalid{
  color: red;
}
input:invalid+span::after, .inputError::before {
  font-family: 'Material Icons';
  content: 'error';
  position: absolute;
  right: 5px;
  top: 0px;
  font-size: 1.5rem;
  color: red;
  letter-spacing: -1px;
}
.inputError {
  color: red;
  align-items: center;
}
.inputError::before {
  position: unset;
  margin-right: 5px;
}
.inputpalette > div, .inputchoose > div, .inputError {
  display: flex;
  flex-wrap: wrap;
  padding: 0 3px;
}
.inputpalette > div input{
  display: none;
}
.inputpalette > div label{
  height: 35px;
  width: 35px;
  display: inline-block;
  border-radius: 8px;
  position: relative;
  border: 3px solid transparent;
  padding: 0;
  margin: -1.5px;
}
.inputpalette > div input[type="radio"]:checked+label, .inputchoose .selected.inputchooseWidgetWrapper {
  border: 3px solid var(--VTTblue);
}
.inputpalette > div input[type="radio"]:checked+label::after, .inputchoose .selected.inputchooseWidgetWrapper::after {
  font-family: 'Material Icons';
  line-height: 1.25em;
  text-align: center;
  height: 1.25em;
  width: 1.25em;
  background: var(--VTTblue);
  color: white;
  border-top-right-radius: 40%;
  border-top-left-radius: 50%;
  border-bottom-right-radius: 50%;
  border-bottom-left-radius: 50%;
  content: 'check';
  position: absolute;
  top: -3px;
  right: -3px;
  border: 2px solid white;
  z-index: -1;
}
.inputpalette > div label > div{
  display: block;
  content: '';
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  position: absolute;
  border: 2px solid white;
  overflow: hidden;
  background-color: inherit;
  border-radius: 5px;
  z-index: -2;
}

.inputchoose .inputchooseWidgetWrapper {
  position: relative;
  border: 3px solid transparent;
  border-radius: 8px;
}

.inputchoose .selected.inputchooseWidgetWrapper {
  overflow: hidden;
}
.inputchoose .selected.inputchooseWidgetWrapper::after {
  border: unset;
  z-index: 2;
}

.inputchoose .widget {
  position: relative !important;
  transform-origin: top left !important;
  z-index: 1 !important;
}
