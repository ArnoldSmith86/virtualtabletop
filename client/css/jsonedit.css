#jsonEditor {
  --commandPaneWidth: 180px;
  --editorPaneWidth: 320px;
  white-space: pre-line;
  font-family: monospace;
  display: none;
  height: 100%;
  width: 100%;
  z-index: 2;
  position: relative;
}

#jsonEditor.wide {
  --commandPaneWidth: 320px;
  --editorPaneWidth: 600px;
}

#jsonEditor.notHighEnough #jeWidgetLayers, #jsonEditor.notHighEnough #jeLogWrapper {
  display: none;
}

#jsonEditor > *, .jsonEdit, #jeWidgetLayers > div, #jeLog {
  background: #08090a;
}
#jsonEditor > * {
  color: #f8f8f2;
  padding: 5px;
  margin: 0;
  position: fixed;
  border: none;
  resize: none;
  box-sizing: border-box;
}

/*** Tree and widget display/edit area ***/
/**** CSS to set up the grid ****/
#jeEditArea {
  --treeHeight: 70%;
  display: grid;
  grid-template-columns: 60% 40%;
  grid-template-rows: min-content 25px var(--treeHeight)  8px auto;
  row-gap: 0px;
  top: 0;
  height: 100%;
  width: var(--editorPaneWidth);
  right: var(--commandPaneWidth);
  border: 1px solid white;
}

#jeEditHeader {
  grid-column: 1 / span 1;
  grid-row: 1 / span 1;
  border-bottom: 1px solid white;
}

#jeMouseCoords {
  grid-column: 2 / span 1;
  grid-row: 1 /span 1;
  display: block;
  text-align: right;
  right: calc(var(--commandPaneWidth) + 20px);
  border-bottom: 1px solid white;
}

#jeTree {
  grid-column: 1 / span 2;
  grid-row: 3 / span 1;
  overflow-wrap: break-word;
  overflow-y: auto;
  white-space: pre-wrap;
  border-top: 1px dashed gray;
}

#jeWidgetSearch {
  grid-column: 1 / span 2;
  grid-row: 2;
}

#jeWidgetSearchResults {
  grid-column: 1 / span 2;
  grid-row: 3;
  overflow: hidden auto;
  display: none;
  height: 100%;
  background-color: #484848;
}

#jeResize {
  content: '';
  grid-column: 1 / span 2;
  grid-row: 4 / span 1;
  cursor: ns-resize;
  background-color: #b8c6db;
  background-image: linear-gradient(#b8c6db 0%, #f5f7fa 20%, #b8c6db 80%);
}

#jeText, #jeTextHighlight {
  grid-column: 1 / span 2;
  grid-row: 5 / span 1;
  white-space: pre-wrap;
  overflow-y: auto;
  overflow-wrap: break-word;
}
/**** End of grid layout ****/

ul, .jeTreeDisplay, .jeNestedTree {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

li, .jeNestedTree {
  margin-left: 10px;
  padding-left: 0;
}

.jeInSearchWindow, .jeTreeWidget {
  cursor: pointer;
}

/* Style the caret/arrow */
.jeTreeExpander, .jeTreeExpander-down {
  user-select: none; /* Prevent text selection */
}

/* Create the caret/arrow with a unicode, and style it */
.jeTreeExpander::before, .jeTreeExpander-down::before {
  content: "\25B6";
  color: white;
  display: inline-block;
  margin-right: 6px;
}

/* Rotate the caret/arrow icon when clicked on (using JavaScript) */
.jeTreeExpander-down::before {
  content: "\25BC";
}

/* Hide the nested list */
.nested {
  display: none;
}

/* Show the nested list when the user clicks on the caret/arrow (with JavaScript) */
.active {
  display: block;
}

#jeText {
  background: none;
  -webkit-text-fill-color: transparent;
  text-fill-color: transparent;
  outline: none;
}

#jeText::selection {
  background-color: #808080;
  -webkit-text-fill-color: white;
}

/*** CSS to handle search box for tree widget ***/
#jeWidgetSearchBox {
  margin-top: 1px;
  width: 50%;
}

#jeSearchTable {
  overflow-wrap: anywhere;
}

.jeHighlightRow {
  background-color: gray;
}

/**** End tree search CSS ****/

/**** Color formatting for widgets ****/

#jsonEditor i {
  font-style: normal;
}

i.key     { color: yellow;  }
i.custom  { color: orange;  }
i.extern  { color: red;     }
.extern   { color: red;     }
i.string  { color: #7ed07e; }
i.number  { color: #dda0dd; }
i.null    { color: blue;    }
i.default { color: #606060; }
i.variable{ color: #40e0d0; }
i.error   { color: red; font-weight: bold; }

body.jsonEdit .selectedInEdit:not(.pile) {
  box-shadow: 0px 0px 0px 5px yellow;
}

body.jsonEdit .selectedInEdit.pile .handle {
  box-shadow: 0px 0px 0px 5px yellow;
}

body.jsonEdit:not(.edit) .selectedInEdit.deck {
  display: block;
  font-size: 0;
}

/**** End color formatting ****/

/*** End setup of edit area ***/

/*** CSS to handle search box for compute operations ***/
#var_results > table {
  table-layout: fixed;
}

#var_results > table > tbody > tr > td:nth-child(1) {
  min-width: 60px;
  max-width: 60px;
  overflow: hidden;
  text-overflow: ellipsis;
}
/*** End compute operations CSS ***/

#jeCommands {
  white-space: pre-wrap;
  height: 100%;
  width: var(--commandPaneWidth);
  right: 0;
  overflow: auto;
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: flex-start;
  align-content: flex-start;
}

#jeWidgetLayers {
  width: 9001px;
  font-size: 0;
  padding: 0;
  background: transparent;
}

#jeWidgetLayers > div {
  display: inline-block;
  padding: 2px;
  vertical-align: top;
  font-size: 12px;
  margin-right: 4px;
}

#jeWidgetLayers > div:empty {
  display: none;
}

body.jsonEdit #jsonEditor {
  display: block;
}

body.jsonEdit #jeCommands > button {
  width: 100%;
  text-align: left;
}

body.jsonEdit #toolbar {
  display: none;
}

body.jsonEdit {
  --roomTop: calc((100vh - var(--roomHeight) * var(--scale)) / 2);
  --roomLeft: 0px;
}

body.jsonEdit.jeZoomOut {
  --roomTop: calc((100vh - var(--roomHeight) * var(--scale)) / 2);
  --roomLeft: 12.5%;
}

body.jsonEdit.jeZoomOut #roomArea {
  overflow: visible;
}

body.jsonEdit.jeZoomOut #topSurface {
  overflow: visible;
}

#jeLogWrapper {
  position: fixed;
  bottom: 0;
  white-space: normal;
}

#jeLog {
  position: fixed;
  bottom: 0;
  left: 0;
  display: none;
  height: 90vh;
  right: calc(var(--commandPaneWidth) + var(--editorPaneWidth));
  overflow: auto;
  box-sizing: border-box;
  border: 3px solid white;
}

@media (max-width: 1000px) {
  #jeLog {
    right: var(--commandPaneWidth);
  }
}

@media (max-width: 600px) {
  #jeLog {
    right: 0;
  }
}

#jeLogWrapper > h1 {
  margin: 0;
}

#jeLogWrapper:hover #jeLog {
  display: block;
}

#jeLogWrapper:hover > h1, .jeLogNested {
  display: none;
}

/* Show the nested list when the user clicks on the caret/arrow */
.jeLogNested.active {
  display: block;
}

.jeLog {
  white-space: normal;
  font-size: 12px;
  background: #ffffff10;
  margin-left: 20px;
  color:lightgray;
}

.jeLogSkipped {
  color: grey;
}

.jeLogSummary {
  color: lightgreen;
}

.jeLogResult {
  color: orange;
}

/* Create the caret/arrow with a unicode, and style it */
.jeExpander::before {
  content: "\25B6";
  color: white;
  display: inline-block;
  margin-right: 6px;
}

/* Rotate the caret/arrow icon when clicked on (using JavaScript) */
.jeExpander-down::before {
  transform: rotate(90deg);
}

/* Create the red caret/arrow with a unicode, and style it */
.jeRedExpander::before {
  content: "\25B6";
  color: red;
  display: inline-block;
  margin-right: 6px;
}

/* Rotate the red caret/arrow icon when clicked on (using JavaScript) */
.jeRedExpander-down::before {
  transform: rotate(90deg);
}

.jeLogHasProblems, .jeLogProblems {
  color: red;
}

.jeLogProblems {
  display: none;
}

.jeLogHasProblems .jeLogProblems {
  display: block;
}

.jeLogDetails {
  word-break: break-all;
  margin-left: 20px;
  color: lightgray;
}

/* Show the details when the user clicks on the caret/arrow */
.jeLogDetails.active {
  display: block;
}
.jeLogOperation {
  margin-left: 20px;
  word-break: break-all;
}

.jeLogOriginal, .jeLogApplied, .jeLogVariables, .jeLogCollections, .jeLogProblems {
  margin-left:20px;
  white-space: pre;
}

[id=jeTopButtons] button {
  display: inline-block;
  text-align: center;
  width: 28px;
  height: 28px;
  font-size: 1.25em;
  border: 0;
  text-shadow: 0px 1px 2px rgb(9, 12, 51);
  color: white;
  font-family: 'VTT-Symbols';
}
[id=jeTopButtons] button.material {
  font-family: 'Material Icons';
}

#jeTopButtons button:disabled {
  background: gray;
  opacity: 0.5;
}

#jeCommands .context{
  font-weight: bold;
  margin-top: 8px;
  width: 100%;
}

#jeCommands > button > b{
  text-decoration: underline;
  color: yellow;
}

#je_toggleZoom{
}
#je_copyState{
}
#je_callMacro{
}
#je_showWidget{
}
#je_tree{
}
#je_addNewWidget{
  color: rgb(95, 167, 95);
}
#je_duplicateWidget{
  color: yellow;
}
#je_removeWidget{
  color: rgb(255, 73, 73);
}
#je_editMode{
}
#je_openParent{
}
#je_toggleWide{
}

#jeCommands > button::before{
  margin-right: 4px;
  font-family: 'VTT-Symbols';
}

#widget_backgroundColor::before, #widget_backgroundColorOH::before, #widget_borderColor::before, #widget_color::before, #widget_borderColorOH::before, #widget_textColor::before, #widget_textColorOH::before{
  content: '[color]';
}
#widget_owner::before{
  content: '[player_circle]';
}
#widget_classes::before{
  content: '[tag]';
}
#widget_css::before{
  content: '[style]';
  }
#widget_rotation::before{
  content: '[rotate_right]';
}
#widget_grid::before{
  content: '[grid]';
}
#widget_dropOffsetX::before{
  content: '[height]';
}
#widget_dropOffsetY::before{
  content: '[width]';
}
#jeCommands .numberInputRange{
  display: none;
}

#jeCommands #jeCommandOptions input[type="number"]{
  width: 6ch;
}

