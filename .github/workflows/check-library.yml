name: Check Library

on:
  pull_request:
    paths:
      - 'library/**'

jobs:
  check-library:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check and fix asset file names
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          found_error=false
          fixed_any=false
          for file in $(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep 'library/.*/assets/'); do
            expected=$(python3 -c "import sys,os,zlib; f=sys.argv[1]; d=open(f,'rb').read(); c=zlib.crc32(d); s=os.path.getsize(f); print(f'{c-0x100000000 if c>0x7fffffff else c}_{s}')" "$file")
            if [[ "$(basename "$file")" != "$expected" ]]; then
              echo "❌ $file (expected: $expected)"
              # Try converting to DOS line endings
              sed -i 's/$/\r/' "$file"
              expected_dos=$(python3 -c "import sys,os,zlib; f=sys.argv[1]; d=open(f,'rb').read(); c=zlib.crc32(d); s=os.path.getsize(f); print(f'{c-0x100000000 if c>0x7fffffff else c}_{s}')" "$file")
              if [[ "$expected_dos" == "$expected" ]]; then
                echo "✅ Fixed $file with DOS line endings"
                mv "$file" "$(dirname "$file")/$expected"
                git add "$(dirname "$file")/$expected"
                git rm "$file"
                fixed_any=true
              else
                found_error=true
              fi
            else
              echo "✅ $file"
            fi
          done
          if [ "$fixed_any" = true ]; then
            git commit -m "fix: convert asset to DOS line endings and correct filename"
            git push
          fi
          if [ "$found_error" = true ]; then
            echo "Found files with inconsistent naming patterns"
            exit 1
          fi 